{"version":3,"sources":["engine/util.ts","engine/modules/PietyPurchases.ts","engine/modules/AbstractModule.ts","engine/interfaces/ExpoCurve.ts","engine/modules/Followers.ts","engine/modules/USDPurchases.ts","engine/modules/Prophet.ts","engine/modules/Gametime.ts","engine/modules/NavArea.ts","engine/Datamap.ts","engine/modules/Adornments.ts","engine/Engine.ts","engine/CoreEngine.ts","context/context.ts","ui/comps/TipFC.tsx","ui/comps/ProgressFC.tsx","ui/BottomBar.tsx","ui/comps/CommandButtonFC.tsx","ui/ProphetUI.tsx","ui/comps/RelicBox.tsx","ui/comps/NavBar.tsx","ui/comps/ConfirmCommandButton.tsx","ui/comps/ResetUI.tsx","ui/comps/ParitionerBox.tsx","ui/FollowersUI.tsx","ui/comps/AdornmentUI.tsx","ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","formatNumber","num","toString","toExponential","percentOf","base","MINUTE_MS","SECOND_MS","HOUR_MS","congregationCost","reincarnationCost","holyPowerCost","piety_purchase_canBuy","data","cost","prophetData","piety","piety_purchase_canBuy_congregation","piety_purchase_canBuy_reincarnation","piety_purchase_canBuy_holypower","piety_purchase_hide_reincarnation","relics","prestigeUnlocked","piety_purchase_hide_congregation","congregation","unlocked","piety_purchase_hide_holypower","holyPowerUnlocked","holiness_holyPowerUpgradeCost","pow","holinessUpgrades","holypowerUpgrade","holiness_holypower1","name","command","able","holiness","hidden","maxHolyPowerUpgrade","holiness_holyPumpUpgradeCost","holyPumpUpgrade","holiness_holyPumpUpgrade_command","holiness_maxHolyPowerUpgradeCost","holiness_maxHolyPowerUpgrade_command","holiness_believerRetentionCost","believerRetention","holiness_believerRetention_command","holiness_exRelationsCost","exRelations","holiness_exRelations_command","ex_believers","holiness_buildingMultiCost","buildingMulti","holiness_buildingMulti_command","AbstractModule","engine","expoI_getCost","expo","owned","initial","coefficient","expoI_maxBuyAmount","currency","b","r","k","c","logchange","log","expoI_maxBuyCost","expoI_buyNCost","n","Followers","handle_followers_command","cmdArray","handle_recruit_command","handle_upgrade_command","recruitParitioner","recruitMaxParitioner","recruitHalfMaxParitioner","handle_unlock_command","handle_divinity_command","datamap","Object","values","DP_Upgrades","forEach","dp","split","dp_key","divinityPurcase","dp_able","ammount","availableDivinity","followers","spentDPPoints","spendDivinity","divinityPurcase_getCost","action","buy_divinityPurchase","recruit_preacher","recruit_devotee","recruit_doorknocker","recruit_preacher_max","recruit_devotee_max","recruit_doorknocker_max","upgrade_preacher","upgrade_devotee","upgrade_doorknocker","unlockAdornments","preacher_cmd_able","preachers","old","preacher_upgrade_cmd_able","preacherLevel","doorknocker_cmd_able","doorknocker","doorknocker_upgrade_cmd_able","doorknockerLevel","devotee_cmd_able","devotee","devotee_upgrade_cmd_able","devoteeLevel","believers","preacher_cost","preacher_upgrade_cost","devotee_cost","devotee_upgrade_cost","doorknocker_cost","doorknocker_upgrade_cost","arg0","console","index","parseInt","paritioner_cost","this","devotion","paritioners","amount","paritioner_maxBuyAmount","paritioner_maxBuyCost","paritioner_buyHalfMax_amount","paritioner_buyHalfMax_cost","days","DPUpgrades","dailyBelieverGain","proudDay","wealthDay","curiousDay","smartDay","dumbDay","badDay","proudBeliever_believer_gain","USD","questions","crediblity","UnlockAdornments_able","adornmentsUnlocked","devotion_mult","sqrt","count","recruit_preacher_cmd","upgrade_preacher_cmd","recruit_devotee_cmd","upgrade_devotee_cmd","recruit_doorknocker_cmd","upgrade_doorknocker_cmd","ParitionerExpos","Paritioners","paritioner_buyNCost","full","UnlockAdornments","getDivinity","devotedPrestige","countFn","tierOne_Divinity_hidden","DP_beliverGain","description","DP_fasterRelicProduction","fasterRelicProduction","DP_heavyHolyPower","heavyHolyPower","DP_monthMultiplier","monthMultiplier","DP_superHolyPump","superHolyPump","DP_yearMultiplier","yearMultiplier","RelicUSDUpgradeExpos","relicUSDupgrade_cost","relicUSDUpgrades","ProphetModule","believersLeave","i","loss","helper_prophet_maxBelieversDecay","boundLoss","holyDump","holyPower","holyPump","prophet_maxHolyPower","prestige","ppgain","prophet_prestige_gain","oldMult","newCount","save","reincarnationCount","newOld","maxPiety","relicTimers","startingHoliness","prestigeCleanup","devotedprestige","gameTime","currentRun","time","nav","mainArea","reset","pray","proselytize","preach","upgradeRelic","buyRelic","buyMaxRelic","buyToNRelic","piety_purchase_buy_reincarnation","piety_purchase_buy_holypower","holiness_holyPowerUpgrade_do","holiness_holyPumpUpgrade_do","holiness_maxHolyPowerUpgrade_do","holiness_believerRetention_do","holiness_exRelations_do","holiness_buildingMulti_do","upgradeIndex","relicIndex","relic_getCost","relic_maxBuyAmount","relic_buyNCost","relic_maxBuyCost","needToN","doorknockers","dayTriggerParitioners","devotees","devotee_devotion_gain","doorknocker_beliver_gain","gain","preachers_max_deovtion_gain","preach_max_deovtion_gain","helper_prophet_maxBeliverGainNet","delta","RELICS","relicData","timeCost","relic_getTime","relic_getProduction","pietyDecay","decay","helper_prophet_pietyDecay","total_power","helper_prophet_exBeliever_harm","helper_prophet_maxBeliverGain","harm","year","sum","initialCost","initialTime","initialRevenue","cost_base","relic_getProductionMulti","holiness_mult","relic_hoylPowerMulti","reincation_mult","special_relic_mult","mult","time_relic_mult","year_relic_mult","month","month_relic_mult","CALC_holy_mult","next_holiness_mult","Building_Multi","relic_buyNextCost","next","relic_canBuyNext","relic_canBuyN","CMD_prophet_pray","CMD_prophet_proselytize","devotedPrestige_cost","CMD_prophet_devotedPrestige","GameTime","day","msprogress","eatenDays","processDelta","mscost","requiredMS","passDayAction","processCommands","commands","passDay","eatDay","daysForTriggers","maxDays","maxMonths","dayTriggers","multiday","startms","elapsed_days","totalDays","elapased_months","totalMonths","gainedYears","prophet","dayTrigger","NavArea","changeMainArea","stringedNumber","number","subArea","changeSubArea","newDefaultMap","x","y","z","ticks","last","Date","now","ui","innerHeight","innerWidth","faithfulCongregation","adornments","Engine","processDetla","executeCommand","load","notify","loop","undefined","start","setInterval","tick","stop","clearTimeout","JSON","stringify","localStorage","setItem","quietLoad","combstr","getItem","oldobj","parse","_","newnow","AppContext","React","submitCommand","str","props","setTB","height","window","top","bottom","ReactDOM","findDOMNode","parent","parentElement","parentBounds","getBoundingClientRect","setState","state","tip","className","style","Component","contextType","TipFC","Consumer","ProgressFC","widthpercent","value","useState","off","setOff","width","onClick","whiteSpace","label","BottomBar","display","flexGrow","flexBasis","border","color","background","msToHM","MONTHS","msTime","hour","length","minute","CommandButtonFC","disabled","img","src","alt","ProphetUI","RelicBox","relic_canBuy","toFixed","relicUSDupgrade_able","relic_getProductionPerecond","NavBar","ConfirmCommandButton","fakeBuy","ev","shiftKey","context","open","warning","ResetUI","level","HolinessTip","DPUpgradeComp","ParitionerBox","paritionerIndex","justifyContent","flexDirection","paritioner_able","ParitionerDetailts","FollowersUI","AdornmentUI","App","Provider","second","msToFullHMS","MAINNAVS","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a62af6a.chunk.js","sourcesContent":["export function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}   \n\nexport function formatNumber(num:number): string {\n    if (num < 10000) return num.toString();\n    else return num.toExponential(2);\n}\nexport function percentOf (num: number, base: number) {\n    if (num === 0 || base === 0) return 'IDK';\n    else return Math.floor(100*num/base).toString() + '%';\n}\n\nexport function msToFullHMS (msTime: number) {\n    \n    let hour = Math.floor(msTime/HOUR_MS).toString();\n\n    let minute = Math.floor((msTime%HOUR_MS)/HOUR_MS * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n\n    let second = Math.floor((msTime%MINUTE_MS)/MINUTE_MS * 60).toString();\n    if (second.length === 1) second = '0' + second;\n    \n    \n    return `${hour}:${minute}:${second}`\n}\n\nconst SECOND_MS = 1000\nconst MINUTE_MS = SECOND_MS * 60\nconst HOUR_MS = MINUTE_MS * 60","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\n\nexport default class PietyPurchases {\n\n}\n\n\nexport const congregationCost: number = 1e10;\nexport const reincarnationCost: number = 1e5;\nexport const holyPowerCost: number = 1e4;\n\nfunction piety_purchase_canBuy (data: Datamap, cost: number) {\n    return data.prophetData.piety >= cost;\n}\n\nexport function piety_purchase_canBuy_congregation (data:Datamap) {\n    return piety_purchase_canBuy(data, congregationCost)\n}\n\nexport function piety_purchase_canBuy_reincarnation (data:Datamap) {\n    return piety_purchase_canBuy(data, reincarnationCost)\n}\n\nexport function piety_purchase_canBuy_holypower (data:Datamap) {\n    return piety_purchase_canBuy(data, holyPowerCost)\n}\n\nexport function piety_purchase_buy_congregation (data: Datamap) {\n    if (piety_purchase_hide_congregation(data)) return\n    if (!piety_purchase_canBuy_congregation(data)) return;\n    data.prophetData.piety -= congregationCost;\n    data.prophetData.congregation.unlocked = true;\n}\n\nexport function piety_purchase_buy_reincarnation (data: Datamap) {\n    if (piety_purchase_hide_reincarnation(data)) return\n    if (!piety_purchase_canBuy_reincarnation(data)) return;\n    data.prophetData.piety -= reincarnationCost;\n    data.prophetData.prestigeUnlocked = true;\n}\n\nexport function piety_purchase_buy_holypower (data: Datamap) {\n    if (piety_purchase_hide_holypower(data)) return\n    if (!piety_purchase_canBuy_holypower(data)) return;\n    data.prophetData.piety -= holyPowerCost;\n    data.prophetData.holyPowerUnlocked = true;\n}\n\nexport function piety_purchase_hide_reincarnation (data: Datamap) {\n    let hidden=  data.prophetData.relics[2] === 0 || data.prophetData.prestigeUnlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_congregation (data: Datamap) {\n    let  hidden = data.prophetData.relics[4] === 0 || data.prophetData.congregation.unlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_holypower (data: Datamap) {\n    let hidden=  data.prophetData.relics[1] === 0 || data.prophetData.holyPowerUnlocked\n    return hidden;\n}\n\n\nexport function holiness_holyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(10,data.holinessUpgrades.holypowerUpgrade + 1)\n}\nexport const holiness_holypower1: DecoupledCommand = {\n    name: \"Holy Power Effectiveness\",\n    command: \"prophet holypowerUpgrade\",\n    able: (data)=>{return holiness_holyPowerUpgradeCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.maxHolyPowerUpgrade === 0}\n\n}\nexport function holiness_holyPowerUpgrade_do (data: Datamap) {\n    if (holiness_holypower1.able) if (!holiness_holypower1.able(data)) return;\n    let cost = holiness_holyPowerUpgradeCost(data);\n    data.holinessUpgrades.holypowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_holyPumpUpgradeCost (data: Datamap) {\n    return Math.pow(2, data.holinessUpgrades.holyPumpUpgrade + 1)\n}\nexport const holiness_holyPumpUpgrade_command: DecoupledCommand = {\n    name: \"Holy Power From Prayer\",\n    command: \"prophet holypumpupgrade\",\n    able: (data)=>{return holiness_holyPumpUpgradeCost(data) <= data.prophetData.holiness},\n}\nexport function holiness_holyPumpUpgrade_do (data: Datamap) {\n    if (holiness_holyPumpUpgrade_command.able) if (!holiness_holyPumpUpgrade_command.able(data)) return;\n    let cost = holiness_holyPumpUpgradeCost(data);\n    data.holinessUpgrades.holyPumpUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_maxHolyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(5, data.holinessUpgrades.maxHolyPowerUpgrade + 1)\n}\nexport const holiness_maxHolyPowerUpgrade_command: DecoupledCommand = {\n    name: \"Max Holy Prayer\",\n    command: \"prophet maxholypowerupgrade\",\n    able: (data)=>{return holiness_maxHolyPowerUpgradeCost(data) <=data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holyPumpUpgrade === 0}\n}\nexport function holiness_maxHolyPowerUpgrade_do (data: Datamap) {\n    if (holiness_maxHolyPowerUpgrade_command.able) if (!holiness_maxHolyPowerUpgrade_command.able(data)) return;\n    let cost = holiness_maxHolyPowerUpgradeCost(data);\n    data.holinessUpgrades.maxHolyPowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_believerRetentionCost (data: Datamap) {\n    return Math.floor(Math.pow(1.7, data.holinessUpgrades.believerRetention)+1)\n}\nexport const holiness_believerRetention_command: DecoupledCommand = {\n    name: \"Believer Retention\",\n    command: \"prophet believerretentionupgrade\",\n    able: (data)=>{return holiness_believerRetentionCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.maxHolyPowerUpgrade === 0 || data.prophetData.congregation.unlocked === false)}\n}\nexport function holiness_believerRetention_do (data: Datamap) {\n    if (holiness_believerRetention_command.able) if (!holiness_believerRetention_command.able(data)) return;\n    let cost = holiness_believerRetentionCost(data);\n    data.holinessUpgrades.believerRetention ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_exRelationsCost (data: Datamap) {\n    return Math.pow(3, data.holinessUpgrades.exRelations + 1)\n}\nexport const holiness_exRelations_command: DecoupledCommand = {\n    name: \"Ex Relations\",\n    command: \"prophet exrelationsupgrade\",\n    able: (data)=>{return holiness_exRelationsCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.believerRetention === 0 || data.prophetData.ex_believers === 0)}\n}\nexport function holiness_exRelations_do (data: Datamap) {\n    if (holiness_exRelations_command.able) if (!holiness_exRelations_command.able(data)) return;\n    let cost = holiness_exRelationsCost(data);\n    data.holinessUpgrades.exRelations ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_buildingMultiCost (data: Datamap) {\n    return Math.pow(3, data.holinessUpgrades.buildingMulti + 1) + 30\n}\nexport const holiness_buildingMulti_command: DecoupledCommand = {\n    name: \"Relic Mult\",\n    command: \"prophet bmupgrade\",\n    able: (data)=>{return holiness_buildingMultiCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holypowerUpgrade === 0}\n}\nexport function holiness_buildingMulti_do (data: Datamap) {\n    if (holiness_buildingMulti_command.able) if (!holiness_buildingMulti_command.able(data)) return;\n    let cost = holiness_buildingMultiCost(data);\n    data.holinessUpgrades.buildingMulti ++;\n    data.prophetData.holiness -= cost;\n}\n\n\n\nexport interface HolinessUpgrades {\n    holypowerUpgrade: number;\n    holyPumpUpgrade: number;\n    maxHolyPowerUpgrade: number;\n    believerRetention: number;\n    exRelations: number;\n    buildingMulti: number;\n}\n\nexport function holinessUpgradesInit () {\n    return {\n        holypowerUpgrade: 0,\n        holyPumpUpgrade: 0,\n        maxHolyPowerUpgrade: 0,\n        believerRetention: 0,\n        exRelations: 0,\n        buildingMulti: 0,\n    }\n}","import Engine from \"../Engine\";\n\nexport default abstract class AbstractModule {\n    \n    constructor (public engine: Engine) {\n\n    }\n\n    get data () {\n        return {\n            \n        }\n    }\n\n}","export default interface ExpoCurve {\n    coefficient: number,\n    initial: number,\n}\n\nexport function expoI_getCost(expo: ExpoCurve, owned:number) {\n\n    \n    return Math.floor(expo.initial*Math.pow(expo.coefficient,owned))\n}\n\nexport function expoI_maxBuyAmount (expo: ExpoCurve, owned:number, currency: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n    let c = currency\n\n    let logresult = Math.log(1+((c*(r - 1))/(b*Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}  \n\nexport function expoI_maxBuyCost (expo: ExpoCurve, owned:number, currency: number) {\n\n    let n = expoI_maxBuyAmount(expo, owned, currency);\n    \n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport function expoI_buyNCost (expo: ExpoCurve, owned: number, n: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n\n    return Math.floor( b * (Math.pow(r,k)*(Math.pow(r,n)-1)) / (r - 1) )\n}\n\nexport function expoI_buyNextCost (expo: ExpoCurve, owned: number, next: number) {\n    let k = owned;\n    let n = next - k % next;\n\n    return expoI_buyNCost(expo, owned, n)\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_maxBuyCost, expoI_buyNCost, expoI_buyNextCost } from \"../interfaces/ExpoCurve\";\n\nexport default class Followers extends AbstractModule {\n\n\n    get data() {\n        return this.engine.datamap.followers;\n    }\n\n    handle_followers_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'recruit':\n                this.handle_recruit_command(cmdArray)\n                break;\n\n            case 'upgrade':\n                this.handle_upgrade_command(cmdArray)\n                break;\n\n            case 'recruitparitioner':\n                this.recruitParitioner(cmdArray[2]);\n                break;\n\n            case 'recruitmaxparitioner':\n                this.recruitMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'recruithalfmaxparitioner':\n                this.recruitHalfMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'unlock':\n                this.handle_unlock_command(cmdArray);\n                break;\n\n            case 'divinity':\n                this.handle_divinity_command(cmdArray);\n\n            default:\n                break;\n        }\n    }\n\n    handle_divinity_command = (cmdArray: string[]) => {\n        let data = this.engine.datamap;\n        Object.values(DP_Upgrades).forEach(dp => {\n            if (cmdArray[2] === dp_key(dp)) {\n                buy_divinityPurchase(data, dp)\n            }\n        })\n\n    }\n\n    handle_recruit_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.recruit_preacher()\n                break;\n            case 'devotee':\n                this.recruit_devotee()\n                break;\n            case 'doorknocker':\n                this.recruit_doorknocker()\n                break;\n            case 'preachermax':\n                this.recruit_preacher_max()\n                break;\n            case 'devoteemax':\n                this.recruit_devotee_max()\n                break;\n            case 'doorknockermax':\n                this.recruit_doorknocker_max()\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_upgrade_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.upgrade_preacher()\n                break;\n\n            case 'devotee':\n                this.upgrade_devotee();\n                break;\n\n            case 'doorknocker':\n                this.upgrade_doorknocker();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_unlock_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'adornments':\n                this.unlockAdornments();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    recruit_preacher_max = () => {\n        while (preacher_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preachers < this.engine.datamap.prophetData.congregation.old.preachers)) {\n            this.recruit_preacher();\n        }\n        while (preacher_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preacherLevel < this.engine.datamap.prophetData.congregation.old.preacherLevel)) {\n            this.upgrade_preacher();\n        }\n    }\n\n    recruit_doorknocker_max = () => {\n        while (doorknocker_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknocker < this.engine.datamap.prophetData.congregation.old.doorknocker)) {\n            this.recruit_doorknocker();\n        }\n        while (doorknocker_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknockerLevel < this.engine.datamap.prophetData.congregation.old.doorknockerLevel)) {\n            this.upgrade_doorknocker();\n        }\n    }\n\n    recruit_devotee_max = () => {\n        while (devotee_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devotee < this.engine.datamap.prophetData.congregation.old.devotee)) {\n            this.recruit_devotee();\n        }\n        while (devotee_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devoteeLevel < this.engine.datamap.prophetData.congregation.old.devoteeLevel)) {\n            this.upgrade_devotee();\n        }\n    }\n\n    recruit_preacher = () => {\n        if (preacher_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= preacher_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preachers++;\n    }\n\n    upgrade_preacher = () => {\n        if (preacher_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= preacher_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preacherLevel++;\n    }\n\n    recruit_devotee = () => {\n        if (devotee_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= devotee_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devotee++;\n    }\n\n    upgrade_devotee = () => {\n        if (devotee_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= devotee_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devoteeLevel++;\n    }\n\n    recruit_doorknocker = () => {\n        if (doorknocker_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= doorknocker_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknocker++;\n    }\n\n    upgrade_doorknocker = () => {\n        if (doorknocker_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= doorknocker_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknockerLevel++;\n    }\n\n    recruitParitioner(arg0: string) {\n        console.log('recruiting!');\n\n        let index = parseInt(arg0);\n        let amount = 1;\n        let cost = paritioner_cost(this.engine.datamap, index);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_maxBuyAmount(index, this.engine.datamap);\n        let cost = paritioner_maxBuyCost(index, this.engine.datamap);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitHalfMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_buyHalfMax_amount(index, this.engine.datamap);\n        let cost = paritioner_buyHalfMax_cost(index, this.engine.datamap);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    dayTriggerParitioners(days: number) {\n        this.engine.datamap.prophetData.believers += this.engine.datamap.followers.DPUpgrades.dailyBelieverGain;\n        if (this.engine.datamap.prophetData.congregation.paritioners[0] > 0) this.proudDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[1] > 0) this.wealthDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[2] > 0) this.curiousDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[3] > 0) this.smartDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[4] > 0) this.dumbDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[5] > 0) this.badDay(days)\n    }\n\n    proudDay(days: number) {\n        this.engine.datamap.prophetData.believers += proudBeliever_believer_gain(this.engine.datamap) * days\n    }\n    wealthDay(days: number) {\n        this.engine.datamap.prophetData.congregation.USD += this.engine.datamap.prophetData.congregation.paritioners[1] * days\n    }\n    curiousDay(days: number) {\n        this.engine.datamap.prophetData.congregation.questions += this.engine.datamap.prophetData.congregation.paritioners[2] * days\n    }\n    smartDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity += this.engine.datamap.prophetData.congregation.paritioners[3] * days\n    }\n    dumbDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity -= this.engine.datamap.prophetData.congregation.paritioners[4] * days\n    }\n    badDay(days: number) {\n        this.engine.datamap.prophetData.ex_believers = Math.max(0, this.engine.datamap.prophetData.ex_believers - this.engine.datamap.prophetData.congregation.paritioners[5] * days)\n    }\n\n    unlockAdornments() {\n        let data = this.engine.datamap;\n        if (UnlockAdornments_able(data) === false) return;\n        else {\n            data.prophetData.devotion -= UnlockAdornments_cost(data)\n            data.followers.adornmentsUnlocked = true;\n        }\n    }\n}\n\nexport interface FollowerData {\n    faithfulCongregation: boolean;\n    adornmentsUnlocked: boolean;\n    devotedPrestige: number;\n    spentDPPoints: number;\n    DPUpgrades: {\n        dailyBelieverGain: number;\n        heavyHolyPower: number;\n        superHolyPump: number;\n        fasterRelicProduction: number;\n        monthMultiplier: number;\n        yearMultiplier: number;\n    }\n}\n\nexport function followerDataInit() {\n    return {\n        faithfulCongregation: false,\n        adornmentsUnlocked: false,\n        devotedPrestige: 0,\n        spentDPPoints: 0,\n        DPUpgrades: {\n            dailyBelieverGain: 0,\n            heavyHolyPower: 0,\n            superHolyPump: 0,\n            fasterRelicProduction: 0,\n            monthMultiplier: 0,\n            yearMultiplier: 0\n        }\n    }\n}\n\nexport function devotion_mult(data: Datamap) {\n    return (Math.sqrt(data.prophetData.devotion / 1000)) + 1\n}\n\n//clergy\n\n//preacher\n\nexport function preacher_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preachers;\n    return Math.pow(10, count);\n}\nfunction preacher_cmd_able(data: Datamap) {\n    return (data.prophetData.believers > 1) && (data.prophetData.holiness > preacher_cost(data))\n}\nexport const recruit_preacher_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit preacher',\n    able: preacher_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function preacher_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preacherLevel;\n    return Math.pow(4, count);\n}\nfunction preacher_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > preacher_upgrade_cost(data))\n}\nexport const upgrade_preacher_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade preacher',\n    able: preacher_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n///devotee\n\nexport function devotee_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devotee + 1;\n    return count\n}\nfunction devotee_cmd_able(data: Datamap) {\n    return (data.prophetData.believers > 1) && (data.prophetData.holiness > devotee_cost(data))\n}\nexport const recruit_devotee_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit devotee',\n    able: devotee_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function devotee_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devoteeLevel;\n    return count\n}\nfunction devotee_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > devotee_upgrade_cost(data))\n}\nexport const upgrade_devotee_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade devotee',\n    able: devotee_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n//door knocker\n\nexport function doorknocker_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknocker;\n    return Math.pow(2, count);\n}\nfunction doorknocker_cmd_able(data: Datamap) {\n    return (data.prophetData.believers > 1) && (data.prophetData.holiness > doorknocker_cost(data))\n}\nexport const recruit_doorknocker_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit doorknocker',\n    able: doorknocker_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function doorknocker_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknockerLevel;\n    return Math.pow(4, count);\n}\nfunction doorknocker_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > doorknocker_upgrade_cost(data))\n}\nexport const upgrade_doorknocker_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade doorknocker',\n    able: doorknocker_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n//paritioners\n\nexport const ParitionerExpos: ExpoCurve[] = [\n    { coefficient: 1.02, initial: 1000 },\n    { coefficient: 1.04, initial: 1000000 },\n    { coefficient: 1.06, initial: 1000000000 },\n    { coefficient: 1.08, initial: 1000000000000 },\n    { coefficient: 1.10, initial: 1000000000000000 },\n    { coefficient: 1.12, initial: 1000000000000000000 },\n]\n\nexport const Paritioners: ParitionerStats[] = [\n    { name: 'Proud Believers', expo: ParitionerExpos[0] },\n    { name: 'Wealthy Believers', expo: ParitionerExpos[1] },\n    { name: 'Curious Believers', expo: ParitionerExpos[3] },\n    { name: 'Educated Believers', expo: ParitionerExpos[2] },\n    { name: 'Political Believers', expo: ParitionerExpos[4] },\n    { name: 'Violent Believers', expo: ParitionerExpos[5] },\n]\n\ninterface ParitionerStats {\n    expo: ExpoCurve;\n    name: string;\n}\n\nexport function paritioner_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.congregation.paritioners[index];\n    return expoI_getCost(Paritioners[index].expo, owned)\n}\n\nexport function paritioner_able(data: Datamap, index: number) {\n    return paritioner_cost(data, index) <= data.prophetData.devotion\n}\nexport function paritioner_maxBuyAmount(index: number, data: Datamap) {\n    return expoI_maxBuyAmount(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n}\n\nexport function paritioner_maxBuyCost(index: number, data: Datamap) {\n    return expoI_maxBuyCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n}\n\nexport function paritioner_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], n)\n}\n\nexport function paritioner_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], next)\n}\n\nexport function paritioner_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = paritioner_buyNCost(index, data, n);\n    return data.prophetData.devotion >= cost\n}\n\nexport function paritioner_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.congregation.paritioners[index];\n    let n = next - k % next;\n    return paritioner_canBuyN(index, data, n);\n}\n\nexport function paritioner_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = paritioner_maxBuyAmount(index, data);\n    let half = Math.floor(full / 2);\n    return half;\n}\n\nexport function paritioner_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = paritioner_buyHalfMax_amount(index, data);\n    return paritioner_buyNCost(index, data, half)\n}\n\nexport function proudBeliever_believer_gain(data: Datamap) {\n    return data.prophetData.congregation.paritioners[0]\n}\n\nexport function UnlockAdornments_cost(data: Datamap) {\n    return 1e10\n}\nexport function UnlockAdornments_able(data: Datamap) {\n    return data.prophetData.devotion >= UnlockAdornments_cost(data)\n}\nexport const UnlockAdornments: DecoupledCommand = {\n    command: 'followers unlock adornments',\n    name: \"Unlock Adornments\",\n    hidden: (data) => { return data.prophetData.congregation.paritioners[1] === 0 },\n    able: UnlockAdornments_able,\n}\n\nexport function getDivinity(data: Datamap) {\n    return data.followers.devotedPrestige\n}\n\nexport function availableDivinity(data: Datamap) {\n    return getDivinity(data) - data.followers.spentDPPoints;\n}\n\nexport function spendDivinity(data: Datamap, ammount: number) {\n    if (availableDivinity(data) < ammount) return;\n    else data.followers.spentDPPoints += ammount;\n}\n\nexport interface DivinityPurchase {\n    command: DecoupledCommand;\n    expo: ExpoCurve;\n    countFn: (data: Datamap) => number;\n    action: (data: Datamap) => void;\n    description: string;\n}\n\n\nexport function buy_divinityPurchase(data: Datamap, divinityPurcase: DivinityPurchase) {\n    if (dp_able(data, divinityPurcase) === false) { return; }\n    else {\n       spendDivinity(data, divinityPurcase_getCost(data, divinityPurcase))\n        divinityPurcase.action(data)\n    }\n}\n\nexport function divinityPurcase_getCost(data: Datamap, divinityPurcase: DivinityPurchase) {\n    return expoI_getCost(divinityPurcase.expo, divinityPurcase.countFn(data))\n\n}\n\nexport function dp_able(data: Datamap, dp: DivinityPurchase) {\n    return divinityPurcase_getCost(data, dp) <= availableDivinity(data);\n}\nexport function dp_key(dp: DivinityPurchase) {\n    return dp.command.command.split(' ')[2]\n}\n\nexport function tierOne_Divinity_hidden(data: Datamap): boolean {\n    return getDivinity(data) === 0\n}\n\n\n\nconst believerGain_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction believerGain_count(data: Datamap): number {\n    return data.followers.DPUpgrades.dailyBelieverGain;\n}\nexport const DP_beliverGain: DivinityPurchase = {\n    command: {\n        command: 'followers divinity believergain',\n        name: `+1 Daily Believer Gain`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: believerGain_expo,\n    countFn: believerGain_count,\n    description: 'Gain 1 believer each day, even before you unlock the congegation!',\n    action: (data) => {\n        data.followers.DPUpgrades.dailyBelieverGain++;\n    }\n}\n\nconst heavyHolyPower_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction heavyHolyPower_count(data: Datamap): number {\n    return data.followers.DPUpgrades.heavyHolyPower;\n}\nexport const DP_heavyHolyPower: DivinityPurchase = {\n    command: {\n        command: 'followers divinity heavyholypower',\n        name: `Holy Power Effect and Decay`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: heavyHolyPower_expo,\n    countFn: heavyHolyPower_count,\n    description: 'Holy Power decays 100% faster and gives 100% increased Relic Production Multiplier',\n    action: (data) => {\n        data.followers.DPUpgrades.heavyHolyPower++;\n    }\n}\n\nconst superHolyPump_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction superHolyPump_count(data: Datamap): number {\n    return data.followers.DPUpgrades.superHolyPump;\n}\nexport const DP_superHolyPump: DivinityPurchase = {\n    command: {\n        command: 'followers divinity superholypump',\n        name: `10x Holy Power from Prayer`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: superHolyPump_expo,\n    countFn: superHolyPump_count,\n    description: '900% more Holy Power from prayer',\n    action: (data) => {\n        data.followers.DPUpgrades.superHolyPump++;\n    }\n}\n\nconst fasterRelicProduction_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction fasterRelicProduction_count(data: Datamap): number {\n    return data.followers.DPUpgrades.fasterRelicProduction;\n}\nexport const DP_fasterRelicProduction: DivinityPurchase = {\n    command: {\n        command: 'followers divinity fasterrelicproduction',\n        name: `Faster Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: fasterRelicProduction_expo,\n    countFn: fasterRelicProduction_count,\n    description: '10% faster relic production',\n    action: (data) => {\n        data.followers.DPUpgrades.fasterRelicProduction++;\n    }\n}\n\nconst monthMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction monthMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.monthMultiplier;\n}\nexport const DP_monthMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity monthmultiplier',\n        name: `Month Based Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: monthMultiplier_expo,\n    countFn: monthMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with year based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.monthMultiplier++;\n    }\n}\n\nconst yearMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction yearMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.yearMultiplier;\n}\nexport const DP_yearMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity yearmultiplier',\n        name: `Year Based Relic Productionn`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: yearMultiplier_expo,\n    countFn: yearMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with month based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.yearMultiplier++;\n    }\n}\n\n\nexport const DP_Upgrades = {\n    DP_beliverGain, DP_fasterRelicProduction, DP_heavyHolyPower,\n    DP_monthMultiplier, DP_superHolyPump, DP_yearMultiplier\n}","\nimport ExpoCurve, { expoI_buyNextCost, expoI_maxBuyCost, expoI_maxBuyAmount, expoI_getCost, expoI_buyNCost } from \"../interfaces/ExpoCurve\";\n\nimport { Datamap } from \"../Datamap\";\n\nexport const RelicUSDUpgradeExpos: ExpoCurve[] = [\n    { coefficient: 1.9, initial: 150 },\n    { coefficient: 1.8, initial: 140 },\n    { coefficient: 1.7, initial: 130 },\n    { coefficient: 1.6, initial: 120 },\n    { coefficient: 1.5, initial: 110 },\n    { coefficient: 1.1, initial: 1000 },\n    { coefficient: 1.1, initial: 2000 },\n    { coefficient: 1.1, initial: 3000 },\n    { coefficient: 1.1, initial: 4000 },\n    { coefficient: 1.1, initial: 5000 },\n]\n\nexport function relicUSDupgrade_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.relicUSDUpgrades[index];\n    return expoI_getCost(RelicUSDUpgradeExpos[index], owned)\n}\n\nexport function relicUSDupgrade_able(data: Datamap, index: number) {\n    return relicUSDupgrade_cost(data, index) <= data.prophetData.congregation.USD\n}\nexport function relicUSDupgrade_maxBuyAmount(index: number, data: Datamap) {\n    return expoI_maxBuyAmount(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_maxBuyCost(index: number, data: Datamap) {\n    return expoI_maxBuyCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], n)\n}\n\nexport function relicUSDupgrade_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], next)\n}\n\nexport function relicUSDupgrade_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = relicUSDupgrade_buyNCost(index, data, n);\n    return data.prophetData.congregation.USD >= cost\n}\n\nexport function relicUSDupgrade_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.relicUSDUpgrades[index];\n    let n = next - k % next;\n    return relicUSDupgrade_canBuyN(index, data, n);\n}\n\nexport function relicUSDupgrade_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = relicUSDupgrade_maxBuyAmount(index, data);\n    let half = Math.floor(full/2);\n    return half;\n}\n\nexport function relicUSDupgrade_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = relicUSDupgrade_buyHalfMax_amount(index, data);\n    return relicUSDupgrade_buyNCost(index, data, half)\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { getRandomInt } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport { piety_purchase_buy_congregation, piety_purchase_buy_reincarnation, piety_purchase_buy_holypower, holiness_holyPowerUpgrade_do, holiness_holyPumpUpgrade_do, holiness_maxHolyPowerUpgrade_do, holiness_believerRetention_do, holiness_exRelations_do, holiness_buildingMulti_do, holinessUpgradesInit } from \"./PietyPurchases\";\nimport { devotion_mult } from \"./Followers\";\nimport { relicUSDupgrade_cost } from \"./USDPurchases\";\n\nexport default class ProphetModule {\n\n    constructor(public engine: Engine) {\n\n    }\n\n    get data () {\n        return this.engine.datamap.prophetData;\n    }\n\n    processCommands (cmdArray: string[]) {\n        switch (cmdArray[1]) {\n            case 'pray':\n                this.pray();\n                break;\n\n            case 'proselytize':\n                this.proselytize();\n                break;\n\n            case 'preach':\n                this.preach();\n                break;\n\n            case 'relicupgrade':\n                this.upgradeRelic(cmdArray[2])\n                break;\n\n\n            case 'buyrelic':\n                this.buyRelic(cmdArray[2]);\n                break;\n\n            case 'buymaxrelic':\n                this.buyMaxRelic(cmdArray[2]);\n                break;\n\n            case 'buyto25relic':\n                this.buyToNRelic(cmdArray[2], 25);\n                break;\n                    \n            case 'prestige':\n                this.prestige();\n                break;\n\n            case 'devotedprestige':\n                this.devotedprestige();\n\n            case 'congregate':\n                piety_purchase_buy_congregation(this.engine.datamap)\n                break;\n\n            case 'reincarnate':\n                piety_purchase_buy_reincarnation(this.engine.datamap)\n                break;\n\n            case 'holypower':\n                piety_purchase_buy_holypower(this.engine.datamap)\n                break;\n\n            case 'holypowerUpgrade':\n                holiness_holyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'holypumpupgrade':\n                holiness_holyPumpUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'maxholypowerupgrade':\n                holiness_maxHolyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'believerretentionupgrade':\n                holiness_believerRetention_do(this.engine.datamap);\n                break;\n\n            case 'exrelationsupgrade':\n                holiness_exRelations_do(this.engine.datamap);\n                break;\n\n            case 'bmupgrade':\n                holiness_buildingMulti_do(this.engine.datamap);\n                break;\n        \n            default:\n                console.log('broke in prophet comand');\n                \n                break;\n        }\n    }\n\n    upgradeRelic(arg0: string) {\n        let upgradeIndex = parseInt(arg0);\n        let cost = relicUSDupgrade_cost(this.engine.datamap, upgradeIndex);\n\n        if (this.data.congregation.USD >= cost) {\n            this.data.congregation.USD -= cost;\n            this.data.relicUSDUpgrades[upgradeIndex] ++;\n        }\n    }\n    \n\n    buyRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_getCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] ++;\n        }\n    }\n\n    buyMaxRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let ammount = relic_maxBuyAmount(relicIndex, this.engine.datamap)\n        let cost = relic_maxBuyCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += ammount;;\n        }\n    }\n\n    buyNRelic (arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, n)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += n;\n        }\n    }\n\n    buyToNRelic (arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let remainder = this.data.relics[relicIndex] % n;\n        let needToN = n - remainder;\n\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, needToN)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += needToN;\n        }\n    }\n\n    dayTrigger (days:number) {\n        if (this.data.holyPower > 0)  this.holyDump(days);\n\n        if (this.data.congregation.doorknocker > 0) this.doorknockers(days);\n        this.engine.followers.dayTriggerParitioners(days);\n        if (this.data.believers > 0) this.believersLeave(days);\n        \n\n        if (this.data.congregation.preachers > 0) this.preachers(days);\n        if (this.data.congregation.devotee > 0) this.devotees(days);\n    }\n\n    devotees (days:number) {\n        this.data.devotion += devotee_devotion_gain(this.engine.datamap) * days\n    }\n\n    doorknockers (days:number) {\n        this.data.believers += doorknocker_beliver_gain(this.engine.datamap) * days\n    }\n    \n    believersLeave = (days:number) => {\n        for (let i=0; i < days; i++) {\n            \n            let loss = getRandomInt(0, Math.max(1, helper_prophet_maxBelieversDecay(this.engine.datamap)));\n            let boundLoss = Math.min(this.data.believers, loss)\n            this.data.ex_believers += boundLoss;\n            this.data.believers -= boundLoss;\n\n        }\n    }\n\n    holyDump = (days: number) => {\n        this.data.holyPower = Math.max(this.data.holyPower - (24 * (1 + this.engine.datamap.followers.DPUpgrades.heavyHolyPower) ), 0);\n    }\n\n    preachers(days:number) {\n        let gain = getRandomInt(0 , preachers_max_deovtion_gain(this.engine.datamap));\n        console.log('preacher gain', gain);\n        \n        this.data.devotion += gain * days;\n    }\n\n    preach() {\n        this.data.devotion += getRandomInt(0, preach_max_deovtion_gain(this.engine.datamap));\n    }\n\n    proselytize () {\n        if (this.engine.datamap.prophetData.holiness === 0) return;\n        this.engine.datamap.prophetData.holiness --;\n        let gain = getRandomInt(0, helper_prophet_maxBeliverGainNet(this.engine.datamap));\n        this.data.believers += gain;\n    }\n\n    pray() {\n        this.data.piety ++;\n        if (this.data.holyPowerUnlocked) {\n            this.holyPump();\n        }\n    }\n    \n    holyPump = () => {\n        this.data.holyPower = Math.min(this.data.holyPower + 1 * Math.pow(2,this.engine.datamap.holinessUpgrades.holyPumpUpgrade ) * Math.pow(10,this.engine.datamap.followers.DPUpgrades.superHolyPump), prophet_maxHolyPower(this.engine.datamap));\n    }\n\n    processDetla (delta: number) {\n        \n        if (this.engine.datamap.followers.DPUpgrades.fasterRelicProduction) {\n            delta = delta * (1 + .1 * this.engine.datamap.followers.DPUpgrades.fasterRelicProduction)\n        }\n        RELICS.forEach((relicData,relicIndex) => {\n            if (this.data.relics[relicIndex] === 0) return;\n            this.data.relicTimers[relicIndex] += delta;\n            let timeCost = relic_getTime(relicIndex);\n            \n            if (this.data.relicTimers[relicIndex] >= timeCost) {\n                let count = Math.floor(this.data.relicTimers[relicIndex] / timeCost)\n                this.data.relicTimers[relicIndex] -= timeCost * count;\n                this.data.piety += relic_getProduction(relicIndex, this.engine.datamap) * count\n            }\n        });\n        \n        if (this.data.piety > this.data.maxPiety) {\n            this.data.maxPiety = this.data.piety;\n        }\n        this.data.piety = Math.max( 0 , this.data.piety - this.pietyDecay(delta) );\n\n    }\n\n    pietyDecay (delta: number) {\n        //lookup math to simulate this over time\n        let decay = ( delta / 1000 ) * (helper_prophet_pietyDecay(this.engine.datamap));\n        decay = Math.floor(decay);\n        return decay;\n    }\n\n    prestige = () => {\n        let ppgain = prophet_prestige_gain(this.engine.datamap);\n\n        let oldData = this.data;\n        let oldMult = oldData.holiness;\n        let newCount = this.data.save.reincarnationCount + 1;\n        let newOld = {\n            preachers: this.data.congregation.preachers,\n            preacherLevel: this.data.congregation.preacherLevel,\n            devotee: this.data.congregation.devotee,\n            devoteeLevel: this.data.congregation.devoteeLevel,\n            doorknocker: this.data.congregation.doorknocker,\n            doorknockerLevel: this.data.congregation.doorknockerLevel,\n        }\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.data.holiness = oldMult + Math.floor(ppgain);\n        this.data.startingHoliness = this.data.holiness\n        this.data.save.reincarnationCount = newCount;\n        this.data.congregation.old = newOld;\n\n        this.prestigeCleanup();\n    }\n\n    devotedprestige = () => {\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.engine.datamap.holinessUpgrades = holinessUpgradesInit()\n        this.engine.datamap.followers.devotedPrestige ++;\n\n        this.prestigeCleanup();\n    }\n    \n    prestigeCleanup = () => {\n        this.engine.datamap.gameTime.currentRun.time = 0;\n        this.engine.datamap.nav.mainArea = 0\n        this.engine.gameTime.reset();\n    }\n}\n\nexport function preach_max_deovtion_gain (data:Datamap) {\n    return data.prophetData.believers;\n}\n\nexport function devotee_devotion_gain (data: Datamap) {\n    return data.prophetData.congregation.devotee * (1 + data.prophetData.congregation.devoteeLevel)\n}\n\nexport function doorknocker_beliver_gain (data: Datamap) {\n    return data.prophetData.congregation.doorknocker * (1 + data.prophetData.congregation.doorknockerLevel)\n\n}\n\nexport function preachers_max_deovtion_gain (data:Datamap) {\n    return preach_max_deovtion_gain(data) * data.prophetData.congregation.preachers * (1 + data.prophetData.congregation.preacherLevel);\n}\n\nexport function helper_prophet_maxBelieversDecay (data: Datamap) {\n    let believers = data.prophetData.believers;\n    let power = believers/10\n    let power_from_ex = helper_prophet_exBeliever_harm(data)\n    let total_power = (power + power_from_ex) / (1 + data.holinessUpgrades.believerRetention);\n\n    return Math.max(1, Math.floor(total_power))\n\n}\n\nexport function helper_prophet_maxBeliverGain (data: Datamap) {\n    return Math.floor(Math.log(1+data.prophetData.piety))\n}\n\nexport function helper_prophet_exBeliever_harm (data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex/10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGainNet (data: Datamap) {\n    let gain = helper_prophet_maxBeliverGain(data);\n    let harm = helper_prophet_exBeliever_harm(data);\n    return Math.max(0, gain - harm)\n}\n\nexport function helper_prophet_pietyDecay (data: Datamap) {\n    return Math.floor(data.prophetData.piety / 10000) * data.gameTime.year;\n}\n\nexport function prophet_maxHolyPower (data: Datamap) {\n    let relics = data.prophetData.relics;\n    let sum = relics[0] + relics[1] + relics[2] + relics[3] + relics[4];\n    sum = sum * (1 + data.holinessUpgrades.maxHolyPowerUpgrade)\n    return sum;\n}\n\nexport interface I_PropheData {\n    piety: number;\n    maxPiety: number;\n    believers: number;\n    ex_believers: number;\n    relics: number[];\n    relicTimers: number[];\n    relicUSDUpgrades: number[];\n    holiness: number;\n    startingHoliness: number;\n    prestigeUnlocked: boolean;\n    holyPower: number;\n    devotion: number;\n    holyPowerUnlocked: boolean;\n    save: {\n        reincarnationCount: number,\n    }\n    congregation : {\n        unlocked: boolean;\n        old: {\n            preachers: number;\n            preacherLevel: number;\n            devotee: number;\n            devoteeLevel: number;\n            doorknocker: number;\n            doorknockerLevel: number;\n        }\n        preachers: number;\n        preacherLevel: number;\n        devotee: number;\n        devoteeLevel: number;\n        doorknocker: number;\n        doorknockerLevel: number;\n\n        paritioners: number[];\n\n        USD: number;\n        questions: number;\n        crediblity: number;\n    \n\n\n    }\n}\n\nexport function init_ProphetData (): I_PropheData {\n    return {\n        piety: 0,\n        maxPiety: 0,\n        believers: 0,\n        ex_believers: 0,\n        relics: [0,0,0,0,0,\n            0,0,0,0,0,],\n        relicTimers: [0,0,0,0,0,\n            0,0,0,0,0,],\n        relicUSDUpgrades: [0,0,0,0,0,\n            0,0,0,0,0,],\n        save: {\n            reincarnationCount: 0\n        },\n        holiness: 0,\n        startingHoliness: 0,\n        holyPowerUnlocked: false,\n        holyPower: 0,\n        devotion: 0,\n        prestigeUnlocked: false,\n        congregation: {\n            unlocked: false,\n\n            preachers: 0,\n            preacherLevel: 0,\n            devotee: 0,\n            devoteeLevel: 0,\n            doorknocker: 0,\n            doorknockerLevel: 0,\n            old: {\n                preachers: 0,\n            preacherLevel: 0,\n            devotee: 0,\n            devoteeLevel: 0,\n            doorknocker: 0,\n            doorknockerLevel: 0,\n            },\n\n            paritioners: [0,0,0,0,0,0],\n\n            USD: 0,\n            crediblity: 0,\n            questions: 0\n            \n        }\n    }\n}\n\n\ninterface KongGenerator {\n    name: string;\n    initialCost: number;\n    coefficient: number;\n    initialTime: number;\n    initialRevenue: number;\n}\n\nconst LemonadeStand: KongGenerator = {\n    name: \"Holy Sponge\",\n    initialCost: 5,\n    coefficient: 1.1,\n    initialTime: 1,\n    initialRevenue: 1,\n}\n\nconst NewspaperDelivery: KongGenerator = {\n    name: \"Holy Thorn\",\n    initialCost: 500,\n    coefficient: 1.15,\n    initialTime: 8,\n    initialRevenue: 160,\n}\n\nconst CarWash: KongGenerator = {\n    name: \"Holy Nail\",\n    initialCost: 50000,\n    coefficient: 1.14,\n    initialTime: 24,\n    initialRevenue: 7400,\n}\n\nconst PizzaDelivery: KongGenerator = {\n    name: \"Holy Lance\",\n    initialCost: 5000000,\n    coefficient: 1.13,\n    initialTime: 2 * 24,\n    initialRevenue: 53200,\n}\n\nconst DonutShop: KongGenerator = {\n    name: \"True Cross\",\n    initialCost: 5000000000,\n    coefficient: 1.12,\n    initialTime: 7 * 24,\n    initialRevenue: 988400,\n}\n\n\nconst FakeNews1: KongGenerator = {\n    name: \"SuperSponge\",\n    initialCost: 1e15,\n    coefficient: 1.22,\n    initialTime: 1,\n    initialRevenue: 4e5,\n}\n\nconst FakeNews2: KongGenerator = {\n    name: \"Crown of Thorns\",\n    initialCost: 1e18,\n    coefficient: 1.22,\n    initialTime: 8,\n    initialRevenue: 1600e4,\n}\n\nconst FakeNews3: KongGenerator = {\n    name: \"Holy Nailgun\",\n    initialCost: 1e21 ,\n    coefficient: 1.22,\n    initialTime: 24,\n    initialRevenue: 74000,\n}\n\nconst FakeNews4: KongGenerator = {\n    name: \"Holier Lance\",\n    initialCost: 1e24,\n    coefficient: 1.22,\n    initialTime: 2 * 24,\n    initialRevenue: 532000,\n}\n\nconst FakeNews5: KongGenerator = {\n    name: \"Inverted Cross\",\n    initialCost: 1e27,\n    coefficient: 1.22,\n    initialTime: 7 * 24,\n    initialRevenue: 9884000,\n}\n\n\nexport const RELICS = [LemonadeStand, NewspaperDelivery, CarWash, PizzaDelivery, DonutShop, \n    FakeNews1, FakeNews2, FakeNews3, FakeNews4, FakeNews5]\n\nexport function relic_getCost(relicIndex: number, data:Datamap) {\n    let relicData = RELICS[relicIndex];\n\n    let owned = data.prophetData.relics[relicIndex];\n    let cost_base = relicData.initialCost;\n    let coefficient = relicData.coefficient;\n    \n    return Math.floor(cost_base*Math.pow(coefficient,owned))\n}\n\nexport function relic_canBuy(relicIndex: number, data: Datamap) {\n    let cost = relic_getCost(relicIndex,data);\n    return data.prophetData.piety >= cost;\n}\n\nexport function relic_getTime (relicIndex: number) {\n    return RELICS[relicIndex].initialTime * 1000;\n}\n\nexport function relic_getProduction (relicIndex: number, data: Datamap) {\n    let val  = Math.floor(\n        data.prophetData.relics[relicIndex] * \n        RELICS[relicIndex].initialRevenue * \n        relic_getProductionMulti(relicIndex, data) * \n        holiness_mult(data) *\n        relic_hoylPowerMulti(data) *\n        devotion_mult(data) * \n        reincation_mult(data) * \n        special_relic_mult(relicIndex, data)\n        )\n    return val\n}\n\nexport function special_relic_mult (index: number, data: Datamap) {\n    let mult = 1;\n    mult += time_relic_mult(data)\n    return mult;\n}\n\nexport function time_relic_mult (data: Datamap) {\n    return  year_relic_mult(data) + month_relic_mult(data)\n}\n\nexport function year_relic_mult (data: Datamap) {\n    return  data.followers.DPUpgrades.yearMultiplier * data.gameTime.year\n}\n\nexport function month_relic_mult (data: Datamap) {\n    return  data.followers.DPUpgrades.monthMultiplier * data.gameTime.month\n}\n\nexport function holiness_mult(data: Datamap) {\n    return CALC_holy_mult( data.prophetData.holiness )\n}\n\nexport function reincation_mult (data: Datamap) {\n    return (data.prophetData.save.reincarnationCount + 1) * (data.followers.devotedPrestige + 1)\n}\n\nfunction CALC_holy_mult (holiness: number) {\n    return Math.sqrt( holiness ) + 1\n}\n\nexport function next_holiness_mult(data:Datamap) {\n    return CALC_holy_mult( data.prophetData.holiness + prophet_prestige_gain(data) )\n}\n\nexport function relic_getProductionPerecond (relicIndex: number, data: Datamap) {\n    return (relic_getProduction(relicIndex, data) / (RELICS[relicIndex].initialTime) )\n}\n\nexport function relic_hoylPowerMulti (data: Datamap) {\n    return Math.floor(Math.log(data.prophetData.holyPower + 1) * (1+data.holinessUpgrades.holypowerUpgrade) * (1 + data.followers.DPUpgrades.heavyHolyPower)) + 1;\n}\n\nexport const PRODMULTIPER25 = 1.5\n\nexport function Building_Multi (data: Datamap, index: number) {\n    return 1.5 + (.1 * (data.holinessUpgrades.buildingMulti + data.prophetData.relicUSDUpgrades[index]))\n}\n\nexport function relic_getProductionMulti (relicIndex: number, data:Datamap) {\n    return Math.pow(Building_Multi(data, relicIndex), Math.floor(data.prophetData.relics[relicIndex]/25))\n}\n\nexport function relic_maxBuyAmount (relicIndex: number, data:Datamap) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n    let c = data.prophetData.piety;\n\n    let logresult = Math.log(1+((c*(r - 1))/(b*Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}  \n\nexport function prophet_prestige_gain (data: Datamap) {\n    return Math.floor(Math.sqrt(Math.sqrt(data.prophetData.maxPiety)/100))\n}\n\nexport function relic_maxBuyCost (relicIndex: number, data: Datamap) {\n\n    let n = relic_maxBuyAmount(relicIndex, data);\n    \n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_buyNCost (relicIndex: number, data: Datamap, n: number) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n\n    return Math.floor( b * (Math.pow(r,k)*(Math.pow(r,n)-1)) / (r - 1) )\n}\n\nexport function relic_buyNextCost (relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_canBuyN (relicIndex: number, data: Datamap, n: number) {\n    let cost = relic_buyNCost(relicIndex, data, n);\n    return data.prophetData.piety >= cost\n}\n\nexport function relic_canBuyNext (relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_canBuyN(relicIndex, data, n);\n}\n\nexport const CMD_prophet_pray: DecoupledCommand = {\n    name: \"Pray\",\n    command: 'prophet pray',\n}\n\nexport const CMD_prophet_proselytize: DecoupledCommand = {\n    name: \"Proselytize\",\n    command: 'prophet proselytize',\n}\n\nexport const CMD_prophet_preach: DecoupledCommand = {\n    name: \"Preach\",\n    command: 'prophet preach',\n}\n\nfunction can_devotedPrestige (data:Datamap) {\n    return data.prophetData.devotion >= devotedPrestige_cost(data);\n}\n\nexport function devotedPrestige_cost (data:Datamap) {\n    return 1e8 * Math.pow(69.69, data.followers.devotedPrestige); \n}\n\nfunction hide_devotedPrestige (data:Datamap) {\n    return (data.prophetData.devotion < 1e8) && (data.followers.devotedPrestige === 0) \n}\n\nexport const CMD_prophet_devotedPrestige: DecoupledCommand = {\n    name: \"Devoted Prestige\",\n    command: 'prophet devotedprestige',\n    able: can_devotedPrestige,\n    hidden: hide_devotedPrestige,\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { Datamap } from \"../Datamap\";\n\nexport default class GameTime {\n\n    constructor(public engine: Engine) {\n\n    }\n    \n    get data () {\n        return this.engine.datamap.gameTime;\n    }\n\n    reset = () => {\n        this.engine.datamap.gameTime = GameTimeInit();\n    }\n\n    static get requiredMS () {\n        return 24000;\n    }\n    static maxDays = 30;\n    static maxMonths = 12;\n\n\n    processDelta = (delta: number) => {\n        this.data.currentRun.time += delta;\n\n        let mscost = GameTime.requiredMS;\n        this.data.msprogress += delta;\n        if (this.data.msprogress >= mscost) {\n            this.data.msprogress -= mscost;\n            this.passDayAction();\n        }\n    }\n\n    processCommands = (commands: string[]) => {\n        switch (commands[1]) {\n            case 'passday':\n                this.passDay();\n                break;\n\n            case 'eatday':\n                this.eatDay();\n                break;\n        \n            default:\n                console.log('error in gametime processCommands')\n                break;\n        }\n    }\n\n    passDayAction = () => {\n        let daysForTriggers = 1 + Math.floor(this.data.msprogress / GameTime.requiredMS)\n        this.data.day ++;\n        //this.engine.save();\n        if (this.data.day > GameTime.maxDays) {\n            this.data.day -= GameTime.maxDays;\n            this.data.month ++; \n            if (this.data.month > GameTime.maxMonths) {\n                this.data.month -= GameTime.maxMonths;\n                this.data.year ++;\n            }\n        }\n\n        this.dayTriggers(daysForTriggers);\n\n        if (this.data.msprogress >= GameTime.requiredMS) this.multiday();\n    }\n\n    multiday = () => {\n        let mscost = GameTime.requiredMS;\n        let startms = this.data.msprogress;\n\n        let elapsed_days = Math.floor(this.data.msprogress / mscost);\n        this.data.msprogress = this.data.msprogress % GameTime.requiredMS;\n        \n        let totalDays = elapsed_days + this.data.day;\n        this.data.day = ((totalDays - 1) % 30) + 1;\n        \n        let elapased_months = Math.floor((totalDays - 1) / 30);\n        \n        let totalMonths = this.data.month + elapased_months;\n        this.data.month = ((totalMonths- 1)%12)+1;\n\n        let gainedYears = Math.floor((totalMonths - 1) / 12)\n        this.data.year +=  gainedYears;\n\n        console.log('multiday!', startms, elapsed_days, elapased_months, gainedYears);\n\n    }\n\n    dayTriggers(days: number) {\n        for (let i = 0; i < days; i++) {\n            this.engine.prophet.dayTrigger(1);\n        }\n    }\n\n    passDay = () => {\n        this.passDayAction()\n    }\n\n    eatDay = () => {\n        if (this.data.day < 2) return;\n        this.data.day --;\n        this.data.eatenDays ++;\n    }\n    \n}\n\nexport interface GameTimeData {\n    msprogress: number;\n    day: number;\n    month: number;\n    year: number;\n    eatenDays: number;\n    currentRun: {\n        time: number;\n    }\n}\n\nexport function GameTimeInit (): GameTimeData {\n    return {\n        day: 1,\n        month: 1,\n        year: 0,\n        msprogress: 0,\n        eatenDays: 0,\n        currentRun: {\n            time: 0\n        }\n    }\n}\n\nexport const COMMAND_EAT_DAY: DecoupledCommand = {\n    name: 'Eat Day',\n    command: 'gametime eatday',\n    able: (datamap:Datamap) => {\n        return datamap.gameTime.day > 1;\n    }\n}\n\nexport const COMMAND_pass_day: DecoupledCommand = {\n    name: \"Pass Day\",\n    command: 'gametime passday',\n}","import AbstractModule from \"./AbstractModule\";\n\nexport default class NavArea extends AbstractModule {\n\n    get data (): NavAreaData {\n        return this.engine.datamap.nav;\n    }\n\n    changeMainArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.mainArea = number;\n        this.data.subArea = 0;\n    }\n\n    changeSubArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.subArea = number;\n    }\n\n}\n\nexport type NavAreaData = {\n    mainArea: number;\n    subArea: number;\n}\n\nexport function NavAreaDataInit (): NavAreaData {\n    return {\n        mainArea: 0,\n        subArea: 0,\n    }\n}","import { I_PropheData, init_ProphetData } from \"./modules/Prophet\";\nimport { GameTimeData, GameTimeInit } from \"./modules/Gametime\";\nimport { NavAreaData, NavAreaDataInit } from \"./modules/NavArea\";\nimport { HolinessUpgrades, holinessUpgradesInit } from \"./modules/PietyPurchases\";\nimport { FollowerData, followerDataInit } from \"./modules/Followers\";\nimport { AdornmentData, adornmentDataInit } from \"./modules/Adornments\";\n\nexport interface Datamap {\n    x: number;\n    y: number;\n    z: number;\n    ticks: number;\n    last: number;\n    ui: {\n        innerWidth: number;\n        innerHeight: number;\n    }\n    prophetData: I_PropheData;\n    gameTime: GameTimeData;\n    nav: NavAreaData,\n    holinessUpgrades: HolinessUpgrades,\n    followers: FollowerData,\n    adornments: AdornmentData,\n}\n\nexport function newDefaultMap () {\n    let map: Datamap = {\n        x: 0, \n        y: 0, \n        z: 0,\n        ticks: 0,\n        last: Date.now(),\n        ui: {\n            innerHeight: 600,\n            innerWidth: 800,\n        },\n        prophetData: init_ProphetData(),\n        gameTime: GameTimeInit(),\n        nav: NavAreaDataInit(),\n        holinessUpgrades: holinessUpgradesInit(),\n        followers: followerDataInit(),\n        adornments: adornmentDataInit(),\n    }\n    return map;\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_maxBuyCost, expoI_buyNCost, expoI_buyNextCost } from \"../interfaces/ExpoCurve\";\n\nexport default class Adornments extends AbstractModule {\n\n    \n    get data() {\n        return this.engine.datamap.adornments;\n    }\n\n    handle_adornments_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            \n\n            default:\n                break;\n        }\n    }\n\n}\n\nexport interface AdornmentData {\n    \n}\n\nexport function adornmentDataInit () {\n    return {\n        \n    }\n}\n","import CoreEngine from \"./CoreEngine\";\nimport ProphetModule from \"./modules/Prophet\";\nimport GameTime from \"./modules/Gametime\";\nimport NavArea from \"./modules/NavArea\";\nimport Followers from \"./modules/Followers\";\n\nexport default class Engine extends CoreEngine {\n    \n    processDelta = (delta: number) => {\n        delta = delta * 4\n        //console.log('tick');\n        this.prophet.processDetla(delta)\n        this.gameTime.processDelta(delta)\n    }\n\n    executeCommand = (command: string) => {\n        let commands = command.split(' ');\n        //console.log(`process ${command}, ${commands}`);\n\n        switch (commands[0]) {\n            case '1hr':\n                this.processDelta(60 * 60 * 1000);\n                break;\n\n            case 'prophet':\n                this.prophet.processCommands(commands)\n                break;\n\n            case 'gametime':\n                this.gameTime.processCommands(commands);\n                break;\n\n            case 'save':\n                this.save();\n                break;\n\n            case 'load':\n                this.load();\n                break;\n\n            case 'nav':\n                if (commands[1] === 'main') {\n                    this.nav.changeMainArea(commands[2])\n                } else if (commands[1] === 'sub') {\n                    this.nav.changeSubArea(commands[2])\n                }\n                break;\n\n            case 'followers':\n                this.followers.handle_followers_command(commands)\n                break;\n       \n            default:\n                console.log('...the dev made a mistake.')\n                break;\n\n        }\n\n        this.notify();\n    }\n\n    prophet = new ProphetModule(this);\n    gameTime = new GameTime(this);\n    nav = new NavArea(this);\n    followers = new Followers(this)\n}\n\n","import {Datamap, newDefaultMap} from './Datamap';\nimport * as _ from 'lodash'\n\nexport default abstract class CoreEngine {\n\n    datamap: Datamap = newDefaultMap();\n    loop: NodeJS.Timeout | undefined = undefined;\n\n    constructor(public notify: VoidFunction){\n        this.datamap.last = Date.now();\n        this.start();\n    }\n\n    start = () => {\n        if (!this.loop) {\n            this.loop = setInterval(this.tick, 200);\n        }\n    }\n\n    stop = () => {\n        if (this.loop){\n            clearTimeout(this.loop);\n            this.loop = undefined;\n        } \n    }\n\n    save= () => {\n        let datamap = JSON.stringify(this.datamap);\n        localStorage.setItem('datamap', datamap);\n    }\n\n    load= () => {\n        this.quietLoad();        \n        this.notify();\n    }\n\n    reset = () => {\n        this.datamap = newDefaultMap();\n        this.notify();\n    }\n\n    quietLoad = () => {\n        let combstr = localStorage.getItem('datamap');\n        if (combstr != null){\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n    }\n\n    tick = () => {\n        \n        let newnow = Date.now();\n        let oldnow = this.datamap.last;\n        let delta = newnow - oldnow;\n\n        this.datamap.last = newnow;\n        \n        this.processDelta(delta)\n        this.notify();\n    }\n\n    abstract processDelta (delta: number): void;\n    abstract executeCommand (command: string): void;\n \n}\n\n\n","import * as React from 'react';\nimport { Datamap, newDefaultMap } from '../engine/Datamap';\n\ntype AppContextType = {\n  data: Datamap;\n  submitCommand: (str:string)=>void;\n}\n\n// Create a context wrapping some shared state\nlet AppContext = React.createContext<AppContextType>({\n  data: newDefaultMap(),\n  submitCommand: (str)=>{},\n});\n\nexport default AppContext;","import React, { ReactNode, useEffect } from 'react';\nimport AppContext from '../../context/context';\nimport './TipFC.scss'\nimport ReactDOM from 'react-dom';\n\nconst TipFC: React.FC<{ tip?: ReactNode }> = (props) => {\n  \n  return ( <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC'>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n)}\n\nexport class classTipFC extends React.Component<{ tip: ReactNode }, {top: string|number, bottom: string|number}>{\n\n  constructor(props: Readonly<{ tip: React.ReactNode; }>) {\n    super(props)\n    this.state = {\n      top: \"\",\n      bottom: \"\"\n    }\n  }\n\n  static contextType = AppContext;\n\n  componentDidMount () {\n    this.setTB();\n  }\n  \n\n  componentDidUpdate() {\n    this.setTB();\n  }\n\n  setTB= ()=>{\n\n    let height = window.innerHeight;\n\n    let top: number | string = \"\"\n    let bottom: number | string = \"\"\n\n    let myDom = ReactDOM.findDOMNode(this);\n\n    if (myDom) {\n\n\n      let parent = ((ReactDOM.findDOMNode(this) as Element).parentElement as Element)\n\n      if (parent) {\n\n        parent = parent as Element;\n        let parentBounds = parent.getBoundingClientRect()\n\n        /*\n        if (parentBounds.right > width / 2) {\n          right = width - parentBounds.right;\n          left = \"\"\n        } else {\n          right = \"\"\n          left = parentBounds.left\n        }*/\n\n        if (parentBounds.bottom > height / 2) {\n          bottom = height - parentBounds.top;\n          top = \"\"\n        } else {\n          bottom = \"\";\n          top = parentBounds.bottom;\n        }\n\n        this.setState({top, bottom});\n      }\n    }\n\n  }\n\n  render() {\n    let props = this.props;\n\n    //let width = window.innerWidth;\n\n    //let left: number | string = \"\"\n    //let right: number | string = \"\"\n    \n\n    \n\n    return (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC' style={{top:this.state.top, bottom:this.state.bottom}}>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default TipFC;\n\n","import React, { ReactNode } from 'react';\nimport TipFC from './TipFC';\n\nexport interface ProgressProps {\n    value: number;\n    max: number;\n    color?: string;\n    background?: string;\n    label: string; \n    textColor?: string\n    tip?: ReactNode;\n}\n\n   \nconst ProgressFC: React.FC<ProgressProps> = (props) => {\n    let trueValue = Math.min(props.value, props.max)\n    let widthpercent = (trueValue * 100 / (props.max)).toString() + \"%\";\n    if (widthpercent === 'NaN%') widthpercent = '0%';\n    const [off, setOff] = React.useState(false);\n    if (off) widthpercent = '100%'\n\n    return (\n        <div className='ProgressFC'>\n            <div className='InnerProgress' style={{width:widthpercent}} onClick={()=>setOff(!off)}>\n                <span style={{whiteSpace:'nowrap'}}>\n                    {props.label} \n                </span>\n            </div>\n            <TipFC tip={<div>{`${props.value}/${props.max}`}{props.tip}</div>} />\n        </div>\n    )\n}\n\n\nexport default ProgressFC;","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport ProgressFC from \"./comps/ProgressFC\";\nimport GameTime from \"../engine/modules/Gametime\";\n\nconst BottomBar: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='UIRow GameTimeRow'>\n            <div style={{display:'flex', width:'100%'}}>\n                <div style={{flexGrow:1,flexBasis:1,border:'2px solid white'}}>\n            <ProgressFC color='green' background='white' value={data.gameTime.msprogress} max={GameTime.requiredMS} label={msToHM(data.gameTime.msprogress)} />\n                </div>\n                <div style={{flexGrow:1,flexBasis:1,border:'2px solid white'}}>\n            <ProgressFC color='green' background='white' value={data.gameTime.day} max={GameTime.maxDays} label={`Day: ${data.gameTime.day}`} />\n            </div>\n            <div style={{flexGrow:1,flexBasis:1,border:'2px solid white'}}>\n            <ProgressFC color='green' background='white' value={data.gameTime.month} max={GameTime.maxMonths} label={MONTHS[data.gameTime.month - 1]} />\n            </div>\n            <div>\n                {`Year: ${data.gameTime.year}`}\n            </div>\n            </div>\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default BottomBar;\n\nfunction msToHM (msTime: number) {\n    \n    let hour = Math.floor(msTime/1000).toString();\n    if (hour.length === 1) hour = '0' + hour;\n\n    let minute = Math.floor((msTime%1000)/1000 * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n    \n    return `${hour}:${minute}`\n}\n\nconst MONTHS = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n]","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\n   \nconst CommandButtonFC: React.FC<DecoupledCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false} hidden={props.hidden?props.hidden(data):false} onClick={()=>{submitCommand(props.command)}}>\n            <div className='innerCommandRow'>\n            <span>{props.name}</span> \n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n      )}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButtonFC;\n","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport NumberDisplay from \"./NumberDisplay\";\nimport { formatNumber } from \"../engine/util\";\n\nconst ProphetUI: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='ProphetUI'>\n\n            <div className='PietyDiv'>\n                {`Piety: ${formatNumber(data.prophetData.piety)}`}<br/>\n            </div>\n\n            <div hidden={data.prophetData.congregation.USD === 0} className='USDDiv'>\n            {`$${formatNumber(data.prophetData.congregation.USD)}`}<br/>\n            </div>\n\n            <div hidden={data.prophetData.congregation.unlocked === false} className='DevotionDiv'>\n                {`Devotion ${formatNumber(data.prophetData.devotion)} `}\n            </div>\n\n            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                    {`Holiness: ${formatNumber(data.prophetData.holiness)}`}\n            </div>\n\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default ProphetUI;\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDPurchases';\n\n\nconst RelicBox: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.relicIndex > 0 && data.prophetData.relics[props.relicIndex - 1] === 0} className='RelicBox'>\n        <ProgressFC background={'yellow'} color='green' value={data.prophetData.relicTimers[props.relicIndex]} max={relic_getTime(props.relicIndex)} label={RELICS[props.relicIndex].name} />\n        <div className='relicboxrow relicboxrow'>\n          <CommandButtonFC name={`Make ${RELICS[props.relicIndex].name}`} command={`prophet buyrelic ${props.relicIndex}`} able={(datamap) => { return relic_canBuy(props.relicIndex, datamap) }}\n            tip={(\n              <div>\n                <div>\n                  Time: {RELICS[props.relicIndex].initialTime}\n                </div>\n                <div className='PietyDiv'>\n                  Production: {RELICS[props.relicIndex].initialRevenue}\n                </div>\n                <div>\n                  Multi: {relic_getProductionMulti(props.relicIndex, data).toFixed(2)}\n                </div>\n              </div>\n            )}\n          />\n          <CommandButtonFC name={`Make Max (${relic_maxBuyAmount(props.relicIndex, data)})`} command={`prophet buymaxrelic ${props.relicIndex}`} able={(datamap)=>{return relic_maxBuyAmount(props.relicIndex, data)>0}} />\n          <CommandButtonFC name={`Make to 25x`} command={`prophet buyto25relic ${props.relicIndex}`} able={(datamap) => { return relic_canBuyNext(props.relicIndex, data, 25) }} \n            tip={(<div>\n              <div className='PietyDiv'>\n                Cost: {relic_buyNextCost(props.relicIndex, data, 25).toExponential(3)}<br/>\n              </div>\n              {`x${Building_Multi(data, props.relicIndex)} production per 25 relics`}\n            </div>)}\n          />\n          <div className='USDCommand' hidden={data.prophetData.congregation.paritioners[1] === 0}>\n          <CommandButtonFC\n            name={`Upgrade`}\n            command={`prophet relicupgrade ${props.relicIndex}`}\n            hidden={(datamap)=>{return datamap.prophetData.congregation.paritioners[1] === 0}}\n            able={(datamap) => { return relicUSDupgrade_able(datamap, props.relicIndex) }}\n            tip={<div>\n              Level: {data.prophetData.relicUSDUpgrades[props.relicIndex]}<br/>\n              <div className='USDDiv'>\n                Cost: {relicUSDupgrade_cost(data, props.relicIndex)} USD\n              </div>\n              +0.1 to production mult per 25 relics<br/>\n            </div>}\n            />\n          </div>\n          <div>\n            Count: {data.prophetData.relics[props.relicIndex]}\n          </div>\n          <div className='PietyDiv'>\n            Cost: {relic_getCost(props.relicIndex, data).toExponential(3)}\n          </div>\n\n          <div className='PietyDiv'>\n            <div>\n            Total P/S: {relic_getProductionPerecond(props.relicIndex, data).toExponential(3)}\n            </div>\n            <TipFC tip={<div>\n              Total Production: {relic_getProduction(props.relicIndex, data).toExponential(3)}\n            </div>}/>\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicBox;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './NavBar.scss';\nimport CommandButtonFC from './CommandButtonFC';\n\nconst NavBar: React.FC<{tip?: ReactNode}> = (props) => (\n  <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n        <div className={`NavBar selected${data.nav.mainArea+1}`}>\n          <CommandButtonFC name='Relics' command='nav main 0' />\n          <CommandButtonFC name='Reset' command='nav main 1' hidden={(datamap)=>{return datamap.prophetData.prestigeUnlocked === false && data.prophetData.holiness === 0}}/>\n          <CommandButtonFC name='Followers' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n        </div>\n      )}\n    </AppContext.Consumer>\n)\n\nexport default NavBar;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport CommandButtonFC from './CommandButtonFC';\n\nexport interface CCBProps {\n  command: DecoupledCommand;\n  warning: ReactNode\n}\n\nexport default class ConfirmCommandButton extends React.Component<CCBProps, {open:boolean}>{ \n\n  constructor(props:CCBProps) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  static contextType = AppContext;\n\n  fakeBuy = (ev: React.MouseEvent) => {\n    if (ev.shiftKey) {\n      this.context.submitCommand(this.props.command.command)\n    } else this.setState({open:!this.state.open})\n    console.log(ev);\n    \n  }\n\n  render () {\n    let data = this.context.data;\n    let submitCommand = this.context.submitCommand;\n\n    return (<div>\n        <div className='FakeButton' hidden={this.props.command.hidden?this.props.command.hidden(data):false}>\n        <button className='DCommandFC' disabled={this.props.command.able?!this.props.command.able(data):false} onClick={this.fakeBuy}>\n            <div className='innerCommandRow'>\n              <span>{this.props.command.name}</span> \n            <img hidden={this.props.command.img === undefined} src={this.props.command.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={this.props.command.tip} />\n        </button>\n        </div>\n        <div className='WarningBox' hidden={!this.state.open}>\n            <div className='WarningOverlay' onClick={this.fakeBuy}>\n              <div className='WarningPopup'>\n                {this.props.warning}\n                <div className='flexrow spacebetween'>\n                <CommandButtonFC {...this.props.command}/>\n                <button className='PlainD' onClick={this.fakeBuy}>\n                  cancel\n                </button>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>)\n  }\n}\n\n   \nconst teste: React.FC<DecoupledCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false} hidden={props.hidden?props.hidden(data):false} onClick={()=>{submitCommand(props.command)}}>\n            <div className='innerCommandRow'>\n            <span>{props.name}</span> \n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n      )}\n    </AppContext.Consumer>\n  );\n\n","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\nimport CommandButtonFC from \"./CommandButtonFC\";\n\nimport { prophet_prestige_gain, next_holiness_mult, holiness_mult, reincation_mult, CMD_prophet_devotedPrestige, devotedPrestige_cost } from \"../../engine/modules/Prophet\";\n\nimport { holiness_holyPumpUpgrade_command, holiness_holyPumpUpgradeCost, holiness_maxHolyPowerUpgrade_command, holiness_maxHolyPowerUpgradeCost, holiness_holypower1, holiness_holyPowerUpgradeCost, holiness_buildingMulti_command, holiness_buildingMultiCost, holiness_believerRetention_command, holiness_believerRetentionCost, holiness_exRelations_command, holiness_exRelationsCost } from \"../../engine/modules/PietyPurchases\";\nimport ConfirmCommandButton from \"./ConfirmCommandButton\";\nimport { percentOf, formatNumber } from \"../../engine/util\";\nimport { availableDivinity, getDivinity, DivinityPurchase, divinityPurcase_getCost, dp_able, DP_Upgrades } from \"../../engine/modules/Followers\";\n\nconst ResetUI: React.FC = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='HolinessUI'>\n                <div className='HeaderText'>Commands</div>\n                <div className='flexrow'>\n                    <ConfirmCommandButton\n                        command={{\n                            command: 'prophet prestige',\n                            name: `Reincarnate (+${prophet_prestige_gain(data).toExponential(2)} holiness)`,\n                            hidden: (datamap) => { return datamap.prophetData.prestigeUnlocked === false },\n                            tip: (<div>\n                                <div>\n                                    Holiness Mult After: x{next_holiness_mult(data).toFixed(1)}\n                                </div>\n                                <div className='PietyDiv'>\n                                    From max Piety this life: {data.prophetData.maxPiety.toExponential(2)}\n                                </div>\n                                <div>\n                                    Net from reincarnation {(prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness).toExponential(2)}\n                                </div>\n                            </div>)\n                        }}\n                        warning={<div>\n                            {`You will lose everything except things on this screen!`}\n                        </div>}\n\n                    />\n                    <div className='ParitionerButton'>\n\n                        <ConfirmCommandButton\n                            command={{\n                                ...CMD_prophet_devotedPrestige,\n                                tip: (<div>\n                                    <div>\n                                        Cost: {formatNumber(devotedPrestige_cost(data))} Devotion\n                                    </div>\n                                    <div>\n                                        Lose: Everything except divinity upgrades and increased reincarnation multiplier. <br />\n                                        Get: 100% increased reincarnation multiplier, +1 Divinity\n                                    </div>\n                                    <div>\n                                        x{data.followers.devotedPrestige + 1} -> x{data.followers.devotedPrestige + 2}\n                                    </div>\n                                </div>)\n                            }}\n                            warning={<div>\n                                {`You will lose everything except your devoted prestige level!`}\n                            </div>}\n                        />\n                    </div>\n                </div>\n\n                <div className='HeaderText'>Info</div>\n                <div>\n                    {`Net Holiness this life ${data.prophetData.holiness - data.prophetData.startingHoliness}`}\n                </div>\n                <div className='HolinessDiv'>\n                    {`Holiness Mult: x${holiness_mult(data).toFixed(1)}`}\n                </div>\n                <div>\n                    {`Reincarnation Mult: x${reincation_mult(data).toFixed(1)}`}\n                </div>\n                <div className='HeaderText'>Holiness Upgrades</div>\n                <CommandButtonFC {...holiness_holyPumpUpgrade_command}\n                    tip={<div>\n                        <HolinessTip\n                            count={holiness_holyPumpUpgradeCost(data)}\n                            level={data.holinessUpgrades.holyPumpUpgrade}\n                        />\n                        Double Holy Power gain from Prayer<br />\n                    </div>}\n                />\n                <CommandButtonFC {...holiness_maxHolyPowerUpgrade_command}\n                    tip={<div>\n                        Cost: {holiness_maxHolyPowerUpgradeCost(data)} ({percentOf(holiness_maxHolyPowerUpgradeCost(data), data.prophetData.holiness)})<br />\n                        Double maximum Holy Power<br />\n                        Level : {data.holinessUpgrades.maxHolyPowerUpgrade}\n                    </div>}\n                />\n                <CommandButtonFC {...holiness_holypower1}\n                    tip={<div>\n                        Cost: {holiness_holyPowerUpgradeCost(data)} ({percentOf(holiness_holyPowerUpgradeCost(data), data.prophetData.holiness)})<br />\n                        Increae the effectiveness of Holy Power<br />\n                        Level : {data.holinessUpgrades.holypowerUpgrade}\n                    </div>}\n                />\n\n                <CommandButtonFC {...holiness_buildingMulti_command}\n                    tip={<div>\n                        Cost: {holiness_buildingMultiCost(data)} ({percentOf(holiness_buildingMultiCost(data), data.prophetData.holiness)})<br />\n                        +0.1 \"Relic Production Per 25 Relics\" Multiplier<br />\n                        Level : {data.holinessUpgrades.buildingMulti}\n                    </div>}\n                />\n\n                <CommandButtonFC {...holiness_believerRetention_command}\n                    tip={<div>\n                        Cost: {holiness_believerRetentionCost(data)} ({percentOf(holiness_believerRetentionCost(data), data.prophetData.holiness)})<br />\n                        Halve the believers who leave each day.<br />\n                        Level : {data.holinessUpgrades.believerRetention}\n                    </div>}\n                />\n\n                <CommandButtonFC {...holiness_exRelations_command}\n                    tip={<div>\n                        Cost: {holiness_exRelationsCost(data)} ({percentOf(holiness_exRelationsCost(data), data.prophetData.holiness)})<br />\n                        Make the influence of ex members less effective.<br />\n                        Level : {data.holinessUpgrades.exRelations}\n                    </div>}\n                />\n                <div className='HeaderText'>Divinity Upgrades</div>\n                <div hidden={getDivinity(data) === 0}>\n\n                    <div>Available divinity: {availableDivinity(data)}</div>\n                    <div className='flexrow DivinityButtonWrapper flexwrap'>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_beliverGain}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_fasterRelicProduction}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_superHolyPump}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_heavyHolyPower}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_monthMultiplier}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_yearMultiplier}/>\n                    </div>\n\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default ResetUI;\n\n\nconst HolinessTip: React.FC<{ count: number, level: number }> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='HolinessTip'>\n                Cost: {props.count} ({percentOf(props.count, data.prophetData.holiness)})<br />\n                Level : {props.level}\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nconst DPUpgradeComp: React.FC<{ dp: DivinityPurchase }> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <CommandButtonFC {...props.dp.command}\n                able={(datamap)=>{return dp_able(datamap, props.dp)}}\n                tip={<div>\n                    Cost: {divinityPurcase_getCost(data, props.dp)}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n        )}\n    </AppContext.Consumer>\n)\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { Paritioners, paritioner_able, paritioner_maxBuyAmount, paritioner_cost, paritioner_maxBuyCost, paritioner_buyHalfMax_amount, paritioner_buyHalfMax_cost } from '../../engine/modules/Followers';\n\n\nconst ParitionerBox: React.FC<{ paritionerIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.paritionerIndex > 0 && data.prophetData.congregation.paritioners[props.paritionerIndex - 1] === 0} className='ParitionerBox'>\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n          <div>\n            <span>\n           {Paritioners[props.paritionerIndex].name}\n            </span>\n            <div>\n            Count: {data.prophetData.congregation.paritioners[props.paritionerIndex]}\n          </div>\n          </div>\n          <div className='flexrow spacebetween'>\n\n          <CommandButtonFC\n            name={`Recruit`}\n            command={`followers recruitparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_able(datamap, props.paritionerIndex) }}\n            />\n            <CommandButtonFC\n              name={`Recruit 50% (${paritioner_buyHalfMax_amount(props.paritionerIndex, data)})`}\n              command={`followers recruithalfmaxparitioner ${props.paritionerIndex}`}\n              able={(datamap) => { return paritioner_buyHalfMax_amount(props.paritionerIndex, datamap) > 0 }}\n              tip={(<div>\n                Cost: {paritioner_buyHalfMax_cost(props.paritionerIndex, data).toExponential(3)}\n              </div>)}\n            />\n          <CommandButtonFC\n            name={`Recruit max (${paritioner_maxBuyAmount(props.paritionerIndex, data)})`}\n            command={`followers recruitmaxparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_maxBuyAmount(props.paritionerIndex, datamap) > 0 }}\n            tip={(<div>\n              Cost: {paritioner_maxBuyCost(props.paritionerIndex, data).toExponential(3)}\n            </div>)}\n          />\n              </div>\n\n              <div className='flexrow spacebetween'>\n                \n\n          \n          <div >\n            Cost: {paritioner_cost(data, props.paritionerIndex).toExponential(3)} Devotion\n          </div>\n              </div>\n\n              <div>\n                <ParitionerDetailts index={props.paritionerIndex} />\n              </div>\n\n          \n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default ParitionerBox;\n\nexport const ParitionerDetailts: React.FC<{ index: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div>\n        {(props.index === 0) && `Bringing in ${data.prophetData.congregation.paritioners[props.index]} other believers a dey`}\n        {(props.index === 1) && `Tithing ${data.prophetData.congregation.paritioners[props.index]} USD a dey`}\n        {(props.index === 2) && `Asking ${data.prophetData.congregation.paritioners[props.index]} questions a dey`}\n        {(props.index === 3) && `Providing ${data.prophetData.congregation.paritioners[props.index]} credibility a dey `}\n        {(props.index === 4) && `Taking ${data.prophetData.congregation.paritioners[props.index]} crediblity a dey`}\n        {(props.index === 5) && `Jihad ${data.prophetData.congregation.paritioners[props.index]} a dey`}\n      </div>\n    )}\n  </AppContext.Consumer>\n)","import AppContext from \"../context/context\";\n\nimport { helper_prophet_maxBelieversDecay, CMD_prophet_proselytize, helper_prophet_maxBeliverGain, helper_prophet_exBeliever_harm, helper_prophet_maxBeliverGainNet, preachers_max_deovtion_gain, devotee_devotion_gain, doorknocker_beliver_gain } from \"../engine/modules/Prophet\";\n\nimport TipFC from \"./comps/TipFC\";\n\nimport { devotion_mult, upgrade_preacher_cmd, preacher_upgrade_cost, recruit_preacher_cmd, preacher_cost, upgrade_devotee_cmd, devotee_upgrade_cost, recruit_devotee_cmd, devotee_cost, upgrade_doorknocker_cmd, doorknocker_upgrade_cost, recruit_doorknocker_cmd, doorknocker_cost, proudBeliever_believer_gain, UnlockAdornments, UnlockAdornments_cost } from \"../engine/modules/Followers\";\n\nimport CommandButtonFC from \"./comps/CommandButtonFC\";\n\nimport ParitionerBox from \"./comps/ParitionerBox\";\nimport React from \"react\";\nimport { formatNumber } from \"../engine/util\";\n\nconst FollowersUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div>\n\n\n\n                <div>\n\n                    <div>\n                        <span className='HeaderText'>Congregation Info</span>\n                    </div>\n                    <div>\n                        {`Believers: ${data.prophetData.believers}`}<br />\n                    </div>\n                    <div>\n                        {`Daily Believer Gain: ${doorknocker_beliver_gain(data) + proudBeliever_believer_gain(data)}`}\n                    </div>\n                    <div>\n                        {`Max Daily Believer Loss: ${helper_prophet_maxBelieversDecay(data)}`}<br />\n                        <TipFC tip={<div>It feels like people stop believing every day!<br />Both total followers and total ex followers are influences.<br/>\n                        Loss From Ex Followers: {helper_prophet_exBeliever_harm(data)}<br/>\n                        Rest is from Congregation size.\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Former Belivers: ${data.prophetData.ex_believers}`}<br />\n                        <TipFC tip={<div>Pesky ex-believers influence people to not believe!</div>} />\n                    </div>\n                    <div>\n                        {`Devotion Mult to Piety: x${devotion_mult(data).toFixed(1)}`}\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className='HeaderText'>Commands</div>\n                    <div className='flexrow'>\n                        <div className='HolinessButtonWrapper'>\n\n                            <CommandButtonFC {...CMD_prophet_proselytize}\n                                tip={<div>\n                                    Spend Holiness to make people believe<br />\n                                    {`Proselytize Beliver Gain: (${helper_prophet_maxBeliverGain(data)}-${helper_prophet_exBeliever_harm(data)})=${helper_prophet_maxBeliverGainNet(data)}`}<br />\n                                    (How many believers your piety attracts) - (How many believers your ex-believers detract)\n                            </div>}\n                            />\n                        </div>\n\n                        <div className='DevotionButtonWrapper'>\n\n                        <CommandButtonFC {...UnlockAdornments}\n                            tip={<div>\n                                <div>\n                                    Unlock Adornments that aren't lost through reincarnation\n                                </div>\n                                <div>\n                                    Cost: {formatNumber( UnlockAdornments_cost(data) )}\n                                </div>\n                            </div>}\n                        />\n                        </div>\n\n                    </div>\n                </div>\n\n                <div>\n\n                    <span className='HeaderText'>Use your Holiness to convert basic believers into Clergy</span>\n\n                    <div className='FollowerBox'>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.preachers} Preachers - Level {data.prophetData.congregation.preacherLevel}<br />\n                                    <span hidden={data.prophetData.congregation.preachers >= data.prophetData.congregation.old.preachers\n                                        && data.prophetData.congregation.preacherLevel >= data.prophetData.congregation.old.preacherLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.preachers} Preachers - Level {data.prophetData.congregation.old.preacherLevel}\n                                        <CommandButtonFC\n                                            command='followers recruit preachermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Up to ${preachers_max_deovtion_gain(data)} devotion per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_preacher_cmd} />\n                                    <span>\n                                        {`Cost: ${preacher_upgrade_cost(data)} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_preacher_cmd} />\n                                <span>\n                                    {`Cost: ${preacher_cost(data)} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.devotee} Devotees - Level {data.prophetData.congregation.devoteeLevel}<br />\n                                    <span hidden={data.prophetData.congregation.devotee >= data.prophetData.congregation.old.devotee\n                                        && data.prophetData.congregation.devoteeLevel >= data.prophetData.congregation.old.devoteeLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.devotee} Devotees - Level {data.prophetData.congregation.old.devoteeLevel}\n                                        <CommandButtonFC\n                                            command='followers recruit devoteemax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n                                </div>\n                                <div>\n                                    {`${devotee_devotion_gain(data)} devotion per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_devotee_cmd} />\n                                    <span>\n                                        {`Cost: ${devotee_upgrade_cost(data)} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_devotee_cmd} />\n                                <span>\n                                    {`Cost: ${devotee_cost(data)} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.doorknocker} Doorknockers - Level {data.prophetData.congregation.doorknockerLevel}<br />\n                                    <span hidden={data.prophetData.congregation.doorknocker >= data.prophetData.congregation.old.doorknocker\n                                        && data.prophetData.congregation.doorknockerLevel >= data.prophetData.congregation.old.doorknockerLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.doorknocker} Doorknockers - Level {data.prophetData.congregation.old.doorknockerLevel}\n                                        <CommandButtonFC\n                                            command='followers recruit doorknockermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Recruiting ${doorknocker_beliver_gain(data)} belivers per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_doorknocker_cmd} />\n                                    <span>\n                                        {`Cost: ${doorknocker_upgrade_cost(data)} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_doorknocker_cmd} />\n                                <span>\n                                    {`Cost: ${doorknocker_cost(data)} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                </div>\n\n                <div>\n\n\n                    <span className='HeaderText'>Use your Devotion to personally recruit exceptional Believers.</span>\n\n                    <div className='FollowerBox'>\n                        <ParitionerBox paritionerIndex={0} />\n                        <ParitionerBox paritionerIndex={1} />\n                        <ParitionerBox paritionerIndex={2} />\n                        <ParitionerBox paritionerIndex={3} />\n                        <ParitionerBox paritionerIndex={4} />\n                        <ParitionerBox paritionerIndex={5} />\n                    </div>\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default FollowersUI;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\nconst AdornmentUI: React.FC = () => (\n    <AppContext.Consumer>\n        {() => (\n            <div>\n                AdornmentUI\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default AdornmentUI;\n\n","import React from 'react';\nimport Engine from '../engine/Engine';\nimport AppContext from '../context/context';\nimport { Datamap } from '../engine/Datamap';\nimport BottomBar from './BottomBar';\nimport CommandButtonFC from './comps/CommandButtonFC';\nimport { COMMAND_pass_day, COMMAND_EAT_DAY } from '../engine/modules/Gametime';\nimport { CMD_prophet_pray, prophet_maxHolyPower, relic_hoylPowerMulti, holiness_mult, reincation_mult, special_relic_mult, time_relic_mult, helper_prophet_pietyDecay } from '../engine/modules/Prophet';\nimport ProphetUI from './ProphetUI';\nimport RelicBox from './comps/RelicBox';\nimport './App.scss'\nimport NavBar from './comps/NavBar';\nimport { piety_purchase_canBuy_congregation, piety_purchase_canBuy_reincarnation, piety_purchase_hide_congregation, piety_purchase_hide_reincarnation, piety_purchase_hide_holypower, piety_purchase_canBuy_holypower, holyPowerCost, reincarnationCost, congregationCost } from '../engine/modules/PietyPurchases';\nimport ProgressFC from './comps/ProgressFC';\nimport { devotion_mult } from '../engine/modules/Followers';\nimport ResetUI from './comps/ResetUI';\nimport FollowersUI from './FollowersUI';\nimport { msToFullHMS, formatNumber } from '../engine/util';\nimport AdornmentUI from './comps/AdornmentUI';\nimport TipFC from './comps/TipFC';\n\n\nexport default class App extends React.Component<{}, { data: Datamap }> {\n\n    engine: Engine;\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.engine = new Engine(this.notify)\n        //this.engine.quietLoad();\n        this.state = {\n            data: this.engine.datamap\n        }\n        //this.engine.quietLoad();\n    }\n\n    notify = () => {\n        this.setState({ data: this.engine.datamap })\n    }\n\n    submitCommand = (command: string) => {\n        this.engine.executeCommand(command)\n    }\n\n    render() {\n        return (\n            <div className='App' style={{ width: `100%`, height: `100%` }}>\n                <AppContext.Provider value={{\n                    data: this.state.data,\n                    submitCommand: this.submitCommand\n                }}>\n                    <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n\n                        <div className='TopBar'>\n                            <CommandButtonFC command='save' name='Save' />\n                            <div>\n                                {msToFullHMS(this.state.data.gameTime.currentRun.time)}\n                            </div>\n                            <CommandButtonFC command='load' name='Load' />\n                        </div>\n\n                        <ProphetUI />\n\n                        <NavBar />\n\n                        <div className='SelectedArea'>\n                            {MAINNAVS[this.state.data.nav.mainArea]}\n                        </div>\n\n                        <BottomBar />\n                    </div>\n                </AppContext.Provider>\n            </div>\n        )\n    }\n}\n\nconst RelicUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className='RelicUI'>\n\n                <div className='flexrow'>\n\n                    <div className='flexcolumn flexgrow'>\n\n                        <div className='HeaderText'>Commands</div>\n\n                        <div className='ProphetCommands'>\n                            <CommandButtonFC {...CMD_prophet_pray} tip={<div>Pray to increase your piety.</div>} />\n\n                            <CommandButtonFC name='Empowering Prayer' command='prophet holypower'\n                                hidden={piety_purchase_hide_holypower}\n                                able={piety_purchase_canBuy_holypower}\n                                tip={<div className='PietyDiv'>Cost: {holyPowerCost}</div>}\n                            />\n                            <CommandButtonFC name='Blessing of Reincarnation' command='prophet reincarnate'\n                                hidden={piety_purchase_hide_reincarnation}\n                                able={piety_purchase_canBuy_reincarnation}\n                                tip={<div className='PietyDiv'>Cost: {reincarnationCost}</div>}\n                            />\n                            <CommandButtonFC name='Create Congregation!' command='prophet congregate'\n                                hidden={piety_purchase_hide_congregation}\n                                able={piety_purchase_canBuy_congregation}\n                                tip={<div className='PietyDiv'>Cost: {congregationCost}</div>}\n                            />\n                        </div>\n\n                        <div className='HeaderText'>Relics</div>\n                        <div className='flexcolumn flexwrap'>\n\n                            <RelicBox relicIndex={0} />\n                            <RelicBox relicIndex={1} />\n                            <RelicBox relicIndex={2} />\n                            <RelicBox relicIndex={3} />\n                            <RelicBox relicIndex={4} />\n                            <RelicBox relicIndex={5} />\n                            <RelicBox relicIndex={6} />\n                            <RelicBox relicIndex={7} />\n                            <RelicBox relicIndex={8} />\n                            <RelicBox relicIndex={9} />\n                        </div>\n\n                    </div>\n\n                    <div className='flexcolumn'>\n                        <div className='HeaderText'>Relic Production Multipliers</div>\n                        <div className='multbox'>\n\n                            <div hidden={data.prophetData.holyPowerUnlocked === false} >\n\n                                <div hidden={data.prophetData.holyPowerUnlocked === false} className='HolyPowerWrapper'>\n                                    <ProgressFC max={prophet_maxHolyPower(data)}\n                                        label={`Holy Power Mult x${relic_hoylPowerMulti(data)} (${Math.floor(100 * data.prophetData.holyPower / prophet_maxHolyPower(data))}%) `}\n                                        value={data.prophetData.holyPower}\n                                        tip={<div>\n                                            Make more relics to increase your max Holy Power!\n                                        </div>}\n                                    />\n                                </div>\n                            </div>\n                            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                                {`Holiness Mult: x${holiness_mult(data).toFixed(1)}`}\n                            </div>\n                            <div hidden={data.prophetData.devotion === 0} className='DevotionDiv'>\n                                {`Devotion Mult: x${devotion_mult(data).toFixed(1)}`}\n                            </div>\n                            <div hidden={data.prophetData.save.reincarnationCount === 0}>\n                                {`Reincarnation Mult: x${reincation_mult(data).toFixed(1)}`}\n                            </div>\n\n                            <div hidden={special_relic_mult(0, data) === 0}>\n                                {`Special Mult: x${special_relic_mult(0, data).toFixed(1)}`}\n                                <TipFC tip={<div>\n\n                                    <div>\n                                        {`Base: x1`}\n                                    </div>\n                                    <div hidden={data.followers.DPUpgrades.monthMultiplier + data.followers.DPUpgrades.yearMultiplier === 0}>\n                                        {`Time Based Mult: +x${time_relic_mult(data).toFixed(1)}`}\n                                    </div>\n                                </div>}\n                                />\n                            </div>\n                        </div>\n                        <div className='HeaderText'>\n                            Info\n                        </div>\n                        <div>\n                            {`Piety Decay ${formatNumber( helper_prophet_pietyDecay(data) )}`}\n                        </div>\n\n                    </div>\n\n                </div>\n\n\n\n\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\n\n\n\n\nconst MAINNAVS = [<RelicUI />, <ResetUI />, <FollowersUI />, <AdornmentUI />]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}