{"version":3,"sources":["engine/util.ts","engine/modules/PietyPurchases.ts","engine/modules/AbstractModule.ts","engine/interfaces/ExpoCurve.ts","engine/modules/Followers.ts","engine/modules/USDPurchases.ts","engine/modules/Prophet.ts","engine/modules/Gametime.ts","engine/modules/NavArea.ts","engine/modules/RocketTypes.ts","engine/modules/NameAndCode.ts","engine/Datamap.ts","engine/modules/Adornments.ts","engine/CoreEngine.ts","engine/modules/Rocket.ts","engine/Engine.ts","context/context.ts","ui/comps/TipFC.tsx","ui/comps/ProgressFC.tsx","ui/BottomBar.tsx","ui/comps/CommandButtonFC.tsx","ui/ProphetUI.tsx","ui/comps/NavBar.tsx","ui/comps/ConfirmCommandButton.tsx","ui/comps/CommandButton2.tsx","ui/comps/ResetUI.tsx","ui/comps/ParitionerBox.tsx","ui/FollowersUI.tsx","ui/comps/AdornmentUI.tsx","ui/comps/OfflineOverlay.tsx","ui/comps/StatFC.tsx","ui/comps/RocketUI.tsx","ui/comps/RelicTip.tsx","ui/comps/RelicBox.tsx","ui/comps/RelicUI.tsx","ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","formatNumber","num","toString","toExponential","msToFullHMS","msTime","hour","HOUR_MS","minute","length","second","MINUTE_MS","SECOND_MS","WORLD_POP","congregationCost","reincarnationCost","holyPowerCost","piety_purchase_canBuy","data","cost","prophetData","piety","piety_purchase_canBuy_congregation","piety_purchase_canBuy_reincarnation","piety_purchase_canBuy_holypower","piety_purchase_hide_reincarnation","relics","prestigeUnlocked","piety_purchase_hide_congregation","congregation","unlocked","piety_purchase_hide_holypower","holyPowerUnlocked","holiness_holyPowerUpgradeCost","pow","holinessUpgrades","holypowerUpgrade","holiness_holypower1","name","command","able","holiness","hidden","maxHolyPowerUpgrade","holiness_holyPumpUpgradeCost","holyPumpUpgrade","holiness_holyPumpUpgrade_command","holiness_maxHolyPowerUpgradeCost","holiness_maxHolyPowerUpgrade_command","holiness_believerRetentionCost","believerRetention","holiness_believerRetention_command","holiness_exRelationsCost","exRelations","holiness_exRelations_command","ex_believers","holiness_buildingMultiCost","buildingMulti","holiness_buildingMulti_command","AbstractModule","engine","expoI_getCost","expo","owned","initial","coefficient","expoI_maxBuyAmount","currency","b","r","k","c","logchange","log","expoI_maxBuyCost","expoI_buyNCost","n","Followers","handle_followers_command","cmdArray","handle_recruit_command","handle_upgrade_command","recruitParitioner","recruitMaxParitioner","recruitHalfMaxParitioner","handle_unlock_command","handle_divinity_command","datamap","Object","values","DP_Upgrades","forEach","dp","split","dp_key","divinityPurcase","dp_able","ammount","availableDivinity","followers","spentDPPoints","spendDivinity","divinityPurcase_getCost","action","buy_divinityPurchase","recruit_preacher","recruit_devotee","recruit_doorknocker","recruit_preacher_max","recruit_devotee_max","recruit_doorknocker_max","upgrade_preacher","upgrade_devotee","upgrade_doorknocker","unlockAdornments","preacher_cmd_able","preachers","old","preacher_upgrade_cmd_able","preacherLevel","doorknocker_cmd_able","doorknocker","doorknocker_upgrade_cmd_able","doorknockerLevel","devotee_cmd_able","devotee","devotee_upgrade_cmd_able","devoteeLevel","believers","preacher_cost","preacher_upgrade_cost","devotee_cost","devotee_upgrade_cost","doorknocker_cost","doorknocker_upgrade_cost","arg0","console","index","parseInt","paritioner_cost","this","devotion","paritioners","amount","paritioner_maxBuyAmount","paritioner_buyNCost","paritioner_buyHalfMax_amount","days","DPUpgrades","dailyBelieverGain","proudDay","wealthDay","curiousDay","smartDay","dumbDay","badDay","proudBeliever_believer_gain","USD","questions","crediblity","UnlockAdornments_able","adornmentsUnlocked","devotion_mult","sqrt","count","recruit_preacher_cmd","upgrade_preacher_cmd","recruit_devotee_cmd","upgrade_devotee_cmd","recruit_doorknocker_cmd","upgrade_doorknocker_cmd","ParitionerExpos","Paritioners","costbound","peopleBound","availablePeople","paritioner_maxBuyCost","full","paritioner_buyHalfMax_cost","gain","harm","helper_prophet_exBeliever_harm","realPossibleGain","UnlockAdornments","getDivinity","devotedPrestige","countFn","tierOne_Divinity_hidden","DP_beliverGain","description","DP_fasterRelicProduction","fasterRelicProduction","DP_heavyHolyPower","heavyHolyPower","DP_monthMultiplier","monthMultiplier","DP_superHolyPump","superHolyPump","DP_yearMultiplier","yearMultiplier","RelicUSDUpgradeExpos","relicUSDupgrade_cost","relicUSDUpgrades","ProphetModule","believersLeave","i","loss","helper_prophet_maxBelieversDecay","boundLoss","holyDump","holyPower","holyPump","prophet_maxHolyPower","prestige","ppgain","prophet_prestige_gain","oldMult","newCount","save","reincarnationCount","selected","relicsetbuy","newOld","maxPiety","relicTimers","startingHoliness","prestigeCleanup","devotedprestige","gameTime","currentRun","time","nav","mainArea","reset","rocket","pray","proselytize","preach","upgradeRelic","buyRelic","buyMaxRelic","buyToNRelic","piety_purchase_buy_reincarnation","piety_purchase_buy_holypower","holiness_holyPowerUpgrade_do","holiness_holyPumpUpgrade_do","holiness_maxHolyPowerUpgrade_do","holiness_believerRetention_do","holiness_exRelations_do","holiness_buildingMulti_do","upgradeIndex","relicIndex","relic_getCost","relic_maxBuyAmount","relic_maxBuyCost","relic_buyNCost","needToN","doorknockers","dayTriggerParitioners","devotees","devotee_devotion_gain","doorknocker_beliver_gain","preachers_max_deovtion_gain","preach_max_deovtion_gain","helper_prophet_maxBeliverGainNet","delta","RELICS","relicData","timeCost","relic_getTime","relic_getProduction","decay","year","total_power","helper_prophet_size_believerDecay","helper_prophet_exBeliever_believerDecay","helper_prophet_maxBeliverGain","sum","initialCost","initialTime","initialRevenue","cost_base","relic_getProductionMulti","holiness_mult","relic_hoylPowerMulti","reincation_mult","special_relic_mult","mult","time_relic_mult","year_relic_mult","month","month_relic_mult","CALC_holy_mult","reincation_mult_from_superPrestiges","next_holiness_mult","Building_Multi","relic_canBuyNext","next","relic_canBuyN","CMD_prophet_pray","CMD_prophet_proselytize","devotedPrestige_cost","CMD_prophet_devotedPrestige","GameTime","day","msprogress","eatenDays","processDelta","mscost","requiredMS","passDayAction","processCommands","commands","passDay","eatDay","daysForTriggers","maxDays","maxMonths","dayTriggers","multiday","startms","elapsed_days","totalDays","elapased_months","totalMonths","gainedYears","prophet","dayTrigger","rocketData","joules","NavArea","changeMainArea","stringedNumber","number","subArea","changeSubArea","RocketDataInit","ball","height","mass","derived","estimatedTime","estimatedVMax","estimatedJouls","sim","current_h","current_v","impactJouls","active","elapsedTime","thrown_ball","initial_velocity","bouncyball","bounces_upgrades","loss_upgrades","bounces","NameAndCode","timeSet","Date","now","nacData","newDefaultMap","offline","happening","totaltime","x","y","z","ticks","last","ui","innerHeight","innerWidth","faithfulCongregation","adornments","CoreEngine","notify","loop","undefined","start","setInterval","tick","stop","clearTimeout","JSON","stringify","localStorage","setItem","load","quietLoad","combstr","getItem","oldobj","parse","_","newnow","Rocket","handle_rocket_command","ballHeightUpgrade_cost","nextBallHeightUpgrade","ballMassUpgrade_cost","nextBallMassUpgrade","ballVelocityUpgrade_cost","nextBallVelocityUpgrade","ballBounceUpgrade_cost","nextBallBounceUpgrade","throwball","dropball","bounceball","updateEstimates","ballsim","thrownballsim","bounceyball_sim","seconds","move_and_impact","ballimpact","thrown_ballimpact","GRAVITY","freefall_t_from_h","freefall_j_from_mv","v_in","acceleration","delta_t","delta_h","vf","estimatedDistance","velocity_in","freefall_d_from_vat","freefall_vf_from_viat","v_i","v_f","distance","t","abs","freefall_t_from_vivfd","vf_sq","freefall_vf_from_viad","vin","h","vhat_sim","initial_time","bounce_ballimpact","bounce_energy","gainedJoules","velocity","delta_v","bounce","cmd_ballheightplus","change","costName","cmd_ballmassplus","cmd_ballvelocityplus","cmd_ballbouncesplus","cmd_dropball","cmd_throwball","cmd_bouncyball","v","m_kg","Engine","processDetla","stopOffline","newprocessDelta","executeCommand","handleKey","nac","nacCommand","key","startOffline","AppContext","React","submitCommand","str","props","setTB","window","top","bottom","ReactDOM","findDOMNode","parent","parentElement","parentBounds","getBoundingClientRect","setState","state","tip","className","style","Component","contextType","TipFC","Consumer","ProgressFC","widthpercent","value","useState","off","setOff","backgroundSize","width","onClick","whiteSpace","label","BottomBar","display","color","background","msToHM","MONTHS","CommandButtonFC","disabled","img","src","alt","ProphetUI","NavBar","ConfirmCommandButton","fakeBuy","ev","shiftKey","context","open","warning","CommandButton2","base","resource","ResetUI","toFixed","holiness_holyPowerEffectivenessUpgradeCost","DPUpgradeComp","ParitionerBox","paritionerIndex","justifyContent","flexDirection","costable","peopleable","paritioner_able","ParitionerDetailts","FollowersUI","AdornmentUI","OfflineOverlay","StatFC","textAlign","units","estimate","RocketUI","padding","RelicTip","RelicBox","relic_canBuy","relic_buyNextCost","relicUSDupgrade_able","relic_getProductionPerecond","RelicUI","App","e","setname","textInput","target","children","preventDefault","addEventListener","removeEventListener","Provider","onSubmit","type","defaultValue","MAINNAVS","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.79c472dd.chunk.js","sourcesContent":["export function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}   \n\nexport function formatNumber(num:number): string {\n    if (num < 10000) return num.toString();\n    else return num.toExponential(2);\n}\nexport function percentOf (num: number, base: number) {\n    if (num === 0 || base === 0) return 'IDK';\n    else return Math.floor(100*num/base).toString() + '%';\n}\n\nexport function msToFullHMS (msTime: number) {\n    \n    let hour = Math.floor(msTime/HOUR_MS).toString();\n\n    let minute = Math.floor((msTime%HOUR_MS)/HOUR_MS * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n\n    let second = Math.floor((msTime%MINUTE_MS)/MINUTE_MS * 60).toString();\n    if (second.length === 1) second = '0' + second;\n    \n    \n    return `${hour}:${minute}:${second}`\n}\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = SECOND_MS * 60\nexport const HOUR_MS = MINUTE_MS * 60\n\nexport const WORLD_POP = 7.7e9\n\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nexport var compressString = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = '';\n    var currentCount = 0;\n    var charsIndex = 0;\n    for (var i = 0; i < chars.length; i++) {\n        \n        if (currentCount = 0) {\n            currentLetter = chars[i]\n            charsIndex++\n        } else {\n            \n            if (chars[i] === currentLetter) {\n                currentCount ++;\n            } else {\n                if (currentCount > 1) {\n                    chars[charsIndex] = currentCount.toString();\n                    charsIndex++\n                } \n                currentCount = 1\n                currentLetter = chars[i]\n                charsIndex++\n                \n            }\n        \n        }\n            \n    }\n    return charsIndex + 1\n};\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = chars[0];\n    var currentCount = 1;\n    var charsIndex = 0;\n    for (var i = 1; i < chars.length; i++) {\n        \n        if (chars[i] === currentLetter) {\n            currentCount ++;\n        } else {\n            \n            chars[charsIndex] = currentLetter\n            charsIndex++\n            \n            \n            if (currentCount > 1) {\n                var intStr = currentCount.toString();\n                for (var j = 0; j < intStr.length; j++) {\n                    chars[charsIndex] = intStr[i];\n                    charsIndex++                \n                }\n            } \n            currentCount = 1\n            currentLetter = chars[i]\n        }\n            \n    }\n    \n    chars[charsIndex] = currentLetter\n    charsIndex++        \n            \n    if (currentCount > 1) {\n        chars[charsIndex] = currentCount.toString();\n        charsIndex++\n    } \n    \n    return charsIndex\n};\n\ninterface LNode {\n    next: LNode | null;\n    val: number;\n}\nfunction ListNode(val: number): LNode {\n    return {\n        val, next: null\n    }\n}\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1: LNode | null, l2: LNode | null) {\n    var s1 = \"\";\n    var s2 = \"\";\n    \n    while(l1 !== null) {\n        s1 = s1 + l1.val.toString();\n        l1 = l1.next\n    }\n    \n    while(l2 !== null) {\n        s2 = s2 + l2.val.toString();\n        l2 = l2.next\n    }\n    \n    s1 = s1.split(\"\").reverse().join()\n    s2 = s2.split(\"\").reverse().join()\n    \n    var newVal = parseInt(s1) + parseInt(s2);\n    var newS = newVal.toString();\n    var newSSplit = newS.split(\"\");\n    \n    var popped = newSSplit.pop();\n        \n    var currentNode = null;\n    while (popped !== undefined) {\n        var newNode = ListNode(parseInt(popped))\n        newNode.next = currentNode;\n        currentNode = newNode;\n        popped = newSSplit.pop()\n    }\n    \n    return currentNode\n    \n    \n    \n    \n};","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\n\nexport default class PietyPurchases {\n\n}\n\n\nexport const congregationCost: number = 1e10;\nexport const reincarnationCost: number = 1e5;\nexport const holyPowerCost: number = 1e4;\n\nfunction piety_purchase_canBuy (data: Datamap, cost: number) {\n    return data.prophetData.piety >= cost;\n}\n\nexport function piety_purchase_canBuy_congregation (data:Datamap) {\n    return piety_purchase_canBuy(data, congregationCost)\n}\n\nexport function piety_purchase_canBuy_reincarnation (data:Datamap) {\n    return piety_purchase_canBuy(data, reincarnationCost)\n}\n\nexport function piety_purchase_canBuy_holypower (data:Datamap) {\n    return piety_purchase_canBuy(data, holyPowerCost)\n}\n\nexport function piety_purchase_buy_congregation (data: Datamap) {\n    if (piety_purchase_hide_congregation(data)) return\n    if (!piety_purchase_canBuy_congregation(data)) return;\n    data.prophetData.piety -= congregationCost;\n    data.prophetData.congregation.unlocked = true;\n}\n\nexport function piety_purchase_buy_reincarnation (data: Datamap) {\n    if (piety_purchase_hide_reincarnation(data)) return\n    if (!piety_purchase_canBuy_reincarnation(data)) return;\n    data.prophetData.piety -= reincarnationCost;\n    data.prophetData.prestigeUnlocked = true;\n}\n\nexport function piety_purchase_buy_holypower (data: Datamap) {\n    if (piety_purchase_hide_holypower(data)) return\n    if (!piety_purchase_canBuy_holypower(data)) return;\n    data.prophetData.piety -= holyPowerCost;\n    data.prophetData.holyPowerUnlocked = true;\n}\n\nexport function piety_purchase_hide_reincarnation (data: Datamap) {\n    let hidden=  data.prophetData.relics[2] === 0 || data.prophetData.prestigeUnlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_congregation (data: Datamap) {\n    let  hidden = data.prophetData.relics[4] === 0 || data.prophetData.congregation.unlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_holypower (data: Datamap) {\n    let hidden=  data.prophetData.relics[1] === 0 || data.prophetData.holyPowerUnlocked\n    return hidden;\n}\n\n\nexport function holiness_holyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(10,data.holinessUpgrades.holypowerUpgrade + 1)\n}\nexport const holiness_holypower1: DecoupledCommand = {\n    name: \"Holy Power Effectiveness\",\n    command: \"prophet holypowerUpgrade\",\n    able: (data)=>{return holiness_holyPowerUpgradeCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.maxHolyPowerUpgrade === 0}\n\n}\nexport function holiness_holyPowerUpgrade_do (data: Datamap) {\n    if (holiness_holypower1.able) if (!holiness_holypower1.able(data)) return;\n    let cost = holiness_holyPowerUpgradeCost(data);\n    data.holinessUpgrades.holypowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_holyPumpUpgradeCost (data: Datamap) {\n    return Math.pow(2, data.holinessUpgrades.holyPumpUpgrade + 1)\n}\nexport const holiness_holyPumpUpgrade_command: DecoupledCommand = {\n    name: \"Holy Power From Prayer\",\n    command: \"prophet holypumpupgrade\",\n    able: (data)=>{return holiness_holyPumpUpgradeCost(data) <= data.prophetData.holiness},\n}\nexport function holiness_holyPumpUpgrade_do (data: Datamap) {\n    if (holiness_holyPumpUpgrade_command.able) if (!holiness_holyPumpUpgrade_command.able(data)) return;\n    let cost = holiness_holyPumpUpgradeCost(data);\n    data.holinessUpgrades.holyPumpUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_maxHolyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(5, data.holinessUpgrades.maxHolyPowerUpgrade + 1)\n}\nexport const holiness_maxHolyPowerUpgrade_command: DecoupledCommand = {\n    name: \"Max Holy Prayer\",\n    command: \"prophet maxholypowerupgrade\",\n    able: (data)=>{return holiness_maxHolyPowerUpgradeCost(data) <=data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holyPumpUpgrade === 0}\n}\nexport function holiness_maxHolyPowerUpgrade_do (data: Datamap) {\n    if (holiness_maxHolyPowerUpgrade_command.able) if (!holiness_maxHolyPowerUpgrade_command.able(data)) return;\n    let cost = holiness_maxHolyPowerUpgradeCost(data);\n    data.holinessUpgrades.maxHolyPowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_believerRetentionCost (data: Datamap) {\n    return Math.floor(Math.pow(1.7, data.holinessUpgrades.believerRetention)+1)\n}\nexport const holiness_believerRetention_command: DecoupledCommand = {\n    name: \"Believer Retention\",\n    command: \"prophet believerretentionupgrade\",\n    able: (data)=>{return holiness_believerRetentionCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.maxHolyPowerUpgrade === 0 || data.prophetData.congregation.unlocked === false)}\n}\nexport function holiness_believerRetention_do (data: Datamap) {\n    if (holiness_believerRetention_command.able) if (!holiness_believerRetention_command.able(data)) return;\n    let cost = holiness_believerRetentionCost(data);\n    data.holinessUpgrades.believerRetention ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_exRelationsCost (data: Datamap) {\n    return Math.pow(3, data.holinessUpgrades.exRelations + 1)\n}\nexport const holiness_exRelations_command: DecoupledCommand = {\n    name: \"Ex Relations\",\n    command: \"prophet exrelationsupgrade\",\n    able: (data)=>{return holiness_exRelationsCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.believerRetention === 0 || data.prophetData.ex_believers === 0)}\n}\nexport function holiness_exRelations_do (data: Datamap) {\n    if (holiness_exRelations_command.able) if (!holiness_exRelations_command.able(data)) return;\n    let cost = holiness_exRelationsCost(data);\n    data.holinessUpgrades.exRelations ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_buildingMultiCost (data: Datamap) {\n    return Math.pow(3, data.holinessUpgrades.buildingMulti + 1) + 30\n}\nexport const holiness_buildingMulti_command: DecoupledCommand = {\n    name: \"Relic Mult\",\n    command: \"prophet bmupgrade\",\n    able: (data)=>{return holiness_buildingMultiCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holypowerUpgrade === 0}\n}\nexport function holiness_buildingMulti_do (data: Datamap) {\n    if (holiness_buildingMulti_command.able) if (!holiness_buildingMulti_command.able(data)) return;\n    let cost = holiness_buildingMultiCost(data);\n    data.holinessUpgrades.buildingMulti ++;\n    data.prophetData.holiness -= cost;\n}\n\n\n\nexport interface HolinessUpgrades {\n    holypowerUpgrade: number;\n    holyPumpUpgrade: number;\n    maxHolyPowerUpgrade: number;\n    believerRetention: number;\n    exRelations: number;\n    buildingMulti: number;\n}\n\nexport function holinessUpgradesInit () {\n    return {\n        holypowerUpgrade: 0,\n        holyPumpUpgrade: 0,\n        maxHolyPowerUpgrade: 0,\n        believerRetention: 0,\n        exRelations: 0,\n        buildingMulti: 0,\n    }\n}","import Engine from \"../Engine\";\n\nexport default abstract class AbstractModule {\n    \n    constructor (public engine: Engine) {\n\n    }\n\n    get data () {\n        return {\n            \n        }\n    }\n\n}","export default interface ExpoCurve {\n    coefficient: number,\n    initial: number,\n}\n\nexport function expoI_getCost(expo: ExpoCurve, owned:number) {\n\n    \n    return Math.floor(expo.initial*Math.pow(expo.coefficient,owned))\n}\n\nexport function expoI_maxBuyAmount (expo: ExpoCurve, owned:number, currency: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n    let c = currency\n\n    let logresult = Math.log(1+((c*(r - 1))/(b*Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}  \n\nexport function expoI_maxBuyCost (expo: ExpoCurve, owned:number, currency: number) {\n\n    let n = expoI_maxBuyAmount(expo, owned, currency);\n    \n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport function expoI_buyNCost (expo: ExpoCurve, owned: number, n: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n\n    return Math.floor( b * (Math.pow(r,k)*(Math.pow(r,n)-1)) / (r - 1) )\n}\n\nexport function expoI_buyNextCost (expo: ExpoCurve, owned: number, next: number) {\n    let k = owned;\n    let n = next - k % next;\n\n    return expoI_buyNCost(expo, owned, n)\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_maxBuyCost, expoI_buyNCost, expoI_buyNextCost } from \"../interfaces/ExpoCurve\";\nimport { helper_prophet_exBeliever_harm, availablePeople } from \"./Prophet\";\n\nexport default class Followers extends AbstractModule {\n\n\n    get data() {\n        return this.engine.datamap.followers;\n    }\n\n    handle_followers_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'recruit':\n                this.handle_recruit_command(cmdArray)\n                break;\n\n            case 'upgrade':\n                this.handle_upgrade_command(cmdArray)\n                break;\n\n            case 'recruitparitioner':\n                this.recruitParitioner(cmdArray[2]);\n                break;\n\n            case 'recruitmaxparitioner':\n                this.recruitMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'recruithalfmaxparitioner':\n                this.recruitHalfMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'unlock':\n                this.handle_unlock_command(cmdArray);\n                break;\n\n            case 'divinity':\n                this.handle_divinity_command(cmdArray);\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_divinity_command = (cmdArray: string[]) => {\n        let data = this.engine.datamap;\n        Object.values(DP_Upgrades).forEach(dp => {\n            if (cmdArray[2] === dp_key(dp)) {\n                buy_divinityPurchase(data, dp)\n            }\n        })\n\n    }\n\n    handle_recruit_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.recruit_preacher()\n                break;\n            case 'devotee':\n                this.recruit_devotee()\n                break;\n            case 'doorknocker':\n                this.recruit_doorknocker()\n                break;\n            case 'preachermax':\n                this.recruit_preacher_max()\n                break;\n            case 'devoteemax':\n                this.recruit_devotee_max()\n                break;\n            case 'doorknockermax':\n                this.recruit_doorknocker_max()\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_upgrade_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.upgrade_preacher()\n                break;\n\n            case 'devotee':\n                this.upgrade_devotee();\n                break;\n\n            case 'doorknocker':\n                this.upgrade_doorknocker();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_unlock_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'adornments':\n                this.unlockAdornments();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    recruit_preacher_max = () => {\n        while (preacher_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preachers < this.engine.datamap.prophetData.congregation.old.preachers)) {\n            this.recruit_preacher();\n        }\n        while (preacher_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preacherLevel < this.engine.datamap.prophetData.congregation.old.preacherLevel)) {\n            this.upgrade_preacher();\n        }\n    }\n\n    recruit_doorknocker_max = () => {\n        while (doorknocker_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknocker < this.engine.datamap.prophetData.congregation.old.doorknocker)) {\n            this.recruit_doorknocker();\n        }\n        while (doorknocker_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknockerLevel < this.engine.datamap.prophetData.congregation.old.doorknockerLevel)) {\n            this.upgrade_doorknocker();\n        }\n    }\n\n    recruit_devotee_max = () => {\n        while (devotee_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devotee < this.engine.datamap.prophetData.congregation.old.devotee)) {\n            this.recruit_devotee();\n        }\n        while (devotee_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devoteeLevel < this.engine.datamap.prophetData.congregation.old.devoteeLevel)) {\n            this.upgrade_devotee();\n        }\n    }\n\n    recruit_preacher = () => {\n        if (preacher_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= preacher_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preachers++;\n    }\n\n    upgrade_preacher = () => {\n        if (preacher_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= preacher_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preacherLevel++;\n    }\n\n    recruit_devotee = () => {\n        if (devotee_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= devotee_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devotee++;\n    }\n\n    upgrade_devotee = () => {\n        if (devotee_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= devotee_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devoteeLevel++;\n    }\n\n    recruit_doorknocker = () => {\n        if (doorknocker_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= doorknocker_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknocker++;\n    }\n\n    upgrade_doorknocker = () => {\n        if (doorknocker_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= doorknocker_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknockerLevel++;\n    }\n\n    recruitParitioner(arg0: string) {\n        console.log('recruiting!');\n\n        let index = parseInt(arg0);\n        let amount = 1;\n        let cost = paritioner_cost(this.engine.datamap, index);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_maxBuyAmount(index, this.engine.datamap);\n        let cost = paritioner_buyNCost(index, this.engine.datamap, amount);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitHalfMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_buyHalfMax_amount(index, this.engine.datamap);\n        let cost = paritioner_buyNCost(index, this.engine.datamap, amount);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    dayTriggerParitioners(days: number) {\n        this.engine.datamap.prophetData.believers += this.engine.datamap.followers.DPUpgrades.dailyBelieverGain;\n        if (this.engine.datamap.prophetData.congregation.paritioners[0] > 0) this.proudDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[1] > 0) this.wealthDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[2] > 0) this.curiousDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[3] > 0) this.smartDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[4] > 0) this.dumbDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[5] > 0) this.badDay(days)\n    }\n\n    proudDay(days: number) {\n        this.engine.datamap.prophetData.believers += proudBeliever_believer_gain(this.engine.datamap) * days\n    }\n    wealthDay(days: number) {\n        this.engine.datamap.prophetData.congregation.USD += this.engine.datamap.prophetData.congregation.paritioners[1] * days\n    }\n    curiousDay(days: number) {\n        this.engine.datamap.prophetData.congregation.questions += this.engine.datamap.prophetData.congregation.paritioners[2] * days\n    }\n    smartDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity += this.engine.datamap.prophetData.congregation.paritioners[3] * days\n    }\n    dumbDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity -= this.engine.datamap.prophetData.congregation.paritioners[4] * days\n    }\n    badDay(days: number) {\n        this.engine.datamap.prophetData.ex_believers = Math.max(0, this.engine.datamap.prophetData.ex_believers - this.engine.datamap.prophetData.congregation.paritioners[5] * days)\n    }\n\n    unlockAdornments() {\n        let data = this.engine.datamap;\n        if (UnlockAdornments_able(data) === false) return;\n        else {\n            data.prophetData.devotion -= UnlockAdornments_cost(data)\n            data.followers.adornmentsUnlocked = true;\n        }\n    }\n}\n\nexport interface FollowerData {\n    faithfulCongregation: boolean;\n    adornmentsUnlocked: boolean;\n    devotedPrestige: number;\n    spentDPPoints: number;\n    DPUpgrades: {\n        dailyBelieverGain: number;\n        heavyHolyPower: number;\n        superHolyPump: number;\n        fasterRelicProduction: number;\n        monthMultiplier: number;\n        yearMultiplier: number;\n    }\n}\n\n\nexport function followerDataInit() {\n    return {\n        faithfulCongregation: false,\n        adornmentsUnlocked: false,\n        devotedPrestige: 0,\n        spentDPPoints: 0,\n        DPUpgrades: {\n            dailyBelieverGain: 0,\n            heavyHolyPower: 0,\n            superHolyPump: 0,\n            fasterRelicProduction: 0,\n            monthMultiplier: 0,\n            yearMultiplier: 0\n        }\n    }\n}\n\nexport function devotion_mult(data: Datamap) {\n    return (Math.sqrt(data.prophetData.devotion / 1000)) + 1\n}\n\n\n//clergy\n\n//preacher\n\nexport function preacher_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preachers;\n    return Math.pow(10, count);\n}\nfunction preacher_cmd_able(data: Datamap) {\n    return (data.prophetData.believers > 1) && (data.prophetData.holiness > preacher_cost(data))\n}\nexport const recruit_preacher_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit preacher',\n    able: preacher_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function preacher_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preacherLevel;\n    return Math.pow(4, count);\n}\nfunction preacher_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > preacher_upgrade_cost(data))\n}\nexport const upgrade_preacher_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade preacher',\n    able: preacher_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n///devotee\n\nexport function devotee_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devotee + 1;\n    return count\n}\nfunction devotee_cmd_able(data: Datamap) {\n    return (data.prophetData.believers > 1) && (data.prophetData.holiness > devotee_cost(data))\n}\nexport const recruit_devotee_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit devotee',\n    able: devotee_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function devotee_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devoteeLevel;\n    return count\n}\nfunction devotee_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > devotee_upgrade_cost(data))\n}\nexport const upgrade_devotee_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade devotee',\n    able: devotee_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n//door knocker\n\nexport function doorknocker_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknocker;\n    return Math.pow(2, count);\n}\nfunction doorknocker_cmd_able(data: Datamap) {\n    return (data.prophetData.believers > 1) && (data.prophetData.holiness > doorknocker_cost(data))\n}\nexport const recruit_doorknocker_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit doorknocker',\n    able: doorknocker_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function doorknocker_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknockerLevel;\n    return Math.pow(4, count);\n}\nfunction doorknocker_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > doorknocker_upgrade_cost(data))\n}\nexport const upgrade_doorknocker_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade doorknocker',\n    able: doorknocker_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n//paritioners\n\nexport const ParitionerExpos: ExpoCurve[] = [\n    { coefficient: 1.02, initial: 1000 },\n    { coefficient: 1.04, initial: 1000000 },\n    { coefficient: 1.06, initial: 1000000000 },\n    { coefficient: 1.08, initial: 1000000000000 },\n    { coefficient: 1.10, initial: 1000000000000000 },\n    { coefficient: 1.12, initial: 1000000000000000000 },\n]\n\nexport const Paritioners: ParitionerStats[] = [\n    { name: 'Proud Believers', expo: ParitionerExpos[0] },\n    { name: 'Wealthy Believers', expo: ParitionerExpos[1] },\n    { name: 'Curious Believers', expo: ParitionerExpos[3] },\n    { name: 'Educated Believers', expo: ParitionerExpos[2] },\n    { name: 'Political Believers', expo: ParitionerExpos[4] },\n    { name: 'Violent Believers', expo: ParitionerExpos[5] },\n]\n\ninterface ParitionerStats {\n    expo: ExpoCurve;\n    name: string;\n}\n\nexport function paritioner_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.congregation.paritioners[index];\n    return expoI_getCost(Paritioners[index].expo, owned)\n}\n\nexport function paritioner_able(data: Datamap, index: number) {\n    let costable = paritioner_cost(data, index) <= data.prophetData.devotion\n    let peopleable =  availablePeople(data) > 0;\n    return costable && peopleable;\n}\nexport function paritioner_maxBuyAmount(index: number, data: Datamap) {\n    let costbound = expoI_maxBuyAmount(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n    let peopleBound = availablePeople(data);\n    return Math.min(costbound, peopleBound)\n}\n\nexport function paritioner_maxBuyCost(index: number, data: Datamap) {\n    let costbound = expoI_maxBuyCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n    let peopleBound = expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], paritioner_maxBuyAmount(index, data))\n    return Math.min(costbound, peopleBound)\n}\n\nexport function paritioner_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], n)\n}\n\nexport function paritioner_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], next)\n}\n\nexport function paritioner_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = paritioner_buyNCost(index, data, n);\n    return data.prophetData.devotion >= cost\n}\n\nexport function paritioner_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.congregation.paritioners[index];\n    let n = next - k % next;\n    return paritioner_canBuyN(index, data, n);\n}\n\nexport function paritioner_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = paritioner_maxBuyAmount(index, data);\n    let half = Math.floor(full / 2);\n    return half;\n}\n\nexport function paritioner_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = paritioner_buyHalfMax_amount(index, data);\n    return paritioner_buyNCost(index, data, half)\n}\n\nexport function proudBeliever_believer_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[0]\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain)\n    return realGain;\n}\n\nexport function UnlockAdornments_cost(data: Datamap) {\n    return 1e10\n}\nexport function UnlockAdornments_able(data: Datamap) {\n    return data.prophetData.devotion >= UnlockAdornments_cost(data)\n}\nexport const UnlockAdornments: DecoupledCommand = {\n    command: 'followers unlock adornments',\n    name: \"Unlock Adornments\",\n    hidden: (data) => { return data.prophetData.congregation.paritioners[1] === 0 },\n    able: UnlockAdornments_able,\n}\n\nexport function getDivinity(data: Datamap) {\n    return data.followers.devotedPrestige\n}\n\nexport function availableDivinity(data: Datamap) {\n    return getDivinity(data) - data.followers.spentDPPoints;\n}\n\nexport function spendDivinity(data: Datamap, ammount: number) {\n    if (availableDivinity(data) < ammount) return;\n    else data.followers.spentDPPoints += ammount;\n}\n\nexport interface DivinityPurchase {\n    command: DecoupledCommand;\n    expo: ExpoCurve;\n    countFn: (data: Datamap) => number;\n    action: (data: Datamap) => void;\n    description: string;\n}\n\n\nexport function buy_divinityPurchase(data: Datamap, divinityPurcase: DivinityPurchase) {\n    if (dp_able(data, divinityPurcase) === false) { return; }\n    else {\n       spendDivinity(data, divinityPurcase_getCost(data, divinityPurcase))\n        divinityPurcase.action(data)\n    }\n}\n\nexport function divinityPurcase_getCost(data: Datamap, divinityPurcase: DivinityPurchase) {\n    return expoI_getCost(divinityPurcase.expo, divinityPurcase.countFn(data))\n\n}\n\nexport function dp_able(data: Datamap, dp: DivinityPurchase) {\n    return divinityPurcase_getCost(data, dp) <= availableDivinity(data);\n}\nexport function dp_key(dp: DivinityPurchase) {\n    return dp.command.command.split(' ')[2]\n}\n\nexport function tierOne_Divinity_hidden(data: Datamap): boolean {\n    return getDivinity(data) === 0\n}\n\n\n\nconst believerGain_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction believerGain_count(data: Datamap): number {\n    return data.followers.DPUpgrades.dailyBelieverGain;\n}\nexport const DP_beliverGain: DivinityPurchase = {\n    command: {\n        command: 'followers divinity believergain',\n        name: `+1 Daily Believer Gain`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: believerGain_expo,\n    countFn: believerGain_count,\n    description: 'Gain 1 believer each day, even before you unlock the congegation!',\n    action: (data) => {\n        data.followers.DPUpgrades.dailyBelieverGain++;\n    }\n}\n\nconst heavyHolyPower_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction heavyHolyPower_count(data: Datamap): number {\n    return data.followers.DPUpgrades.heavyHolyPower;\n}\nexport const DP_heavyHolyPower: DivinityPurchase = {\n    command: {\n        command: 'followers divinity heavyholypower',\n        name: `Holy Power Effect and Decay`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: heavyHolyPower_expo,\n    countFn: heavyHolyPower_count,\n    description: 'Holy Power decays 100% faster and gives 100% increased Relic Production Multiplier',\n    action: (data) => {\n        data.followers.DPUpgrades.heavyHolyPower++;\n    }\n}\n\nconst superHolyPump_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction superHolyPump_count(data: Datamap): number {\n    return data.followers.DPUpgrades.superHolyPump;\n}\nexport const DP_superHolyPump: DivinityPurchase = {\n    command: {\n        command: 'followers divinity superholypump',\n        name: `10x Holy Power from Prayer`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: superHolyPump_expo,\n    countFn: superHolyPump_count,\n    description: '900% more Holy Power from prayer',\n    action: (data) => {\n        data.followers.DPUpgrades.superHolyPump++;\n    }\n}\n\nconst fasterRelicProduction_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction fasterRelicProduction_count(data: Datamap): number {\n    return data.followers.DPUpgrades.fasterRelicProduction;\n}\nexport const DP_fasterRelicProduction: DivinityPurchase = {\n    command: {\n        command: 'followers divinity fasterrelicproduction',\n        name: `Faster Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: fasterRelicProduction_expo,\n    countFn: fasterRelicProduction_count,\n    description: '10% faster relic production',\n    action: (data) => {\n        data.followers.DPUpgrades.fasterRelicProduction++;\n    }\n}\n\nconst monthMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction monthMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.monthMultiplier;\n}\nexport const DP_monthMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity monthmultiplier',\n        name: `Month Based Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: monthMultiplier_expo,\n    countFn: monthMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with year based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.monthMultiplier++;\n    }\n}\n\nconst yearMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction yearMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.yearMultiplier;\n}\nexport const DP_yearMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity yearmultiplier',\n        name: `Year Based Relic Productionn`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: yearMultiplier_expo,\n    countFn: yearMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with month based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.yearMultiplier++;\n    }\n}\n\n\nexport const DP_Upgrades = {\n    DP_beliverGain, DP_fasterRelicProduction, DP_heavyHolyPower,\n    DP_monthMultiplier, DP_superHolyPump, DP_yearMultiplier\n}","\nimport ExpoCurve, { expoI_buyNextCost, expoI_maxBuyCost, expoI_maxBuyAmount, expoI_getCost, expoI_buyNCost } from \"../interfaces/ExpoCurve\";\n\nimport { Datamap } from \"../Datamap\";\n\nexport const RelicUSDUpgradeExpos: ExpoCurve[] = [\n    { coefficient: 1.9, initial: 150 },\n    { coefficient: 1.8, initial: 140 },\n    { coefficient: 1.7, initial: 130 },\n    { coefficient: 1.6, initial: 120 },\n    { coefficient: 1.5, initial: 110 },\n    { coefficient: 1.1, initial: 1000 },\n    { coefficient: 1.1, initial: 2000 },\n    { coefficient: 1.1, initial: 3000 },\n    { coefficient: 1.1, initial: 4000 },\n    { coefficient: 1.1, initial: 5000 },\n]\n\nexport function relicUSDupgrade_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.relicUSDUpgrades[index];\n    return expoI_getCost(RelicUSDUpgradeExpos[index], owned)\n}\n\nexport function relicUSDupgrade_able(data: Datamap, index: number) {\n    return relicUSDupgrade_cost(data, index) <= data.prophetData.congregation.USD\n}\nexport function relicUSDupgrade_maxBuyAmount(index: number, data: Datamap) {\n    return expoI_maxBuyAmount(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_maxBuyCost(index: number, data: Datamap) {\n    return expoI_maxBuyCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], n)\n}\n\nexport function relicUSDupgrade_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], next)\n}\n\nexport function relicUSDupgrade_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = relicUSDupgrade_buyNCost(index, data, n);\n    return data.prophetData.congregation.USD >= cost\n}\n\nexport function relicUSDupgrade_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.relicUSDUpgrades[index];\n    let n = next - k % next;\n    return relicUSDupgrade_canBuyN(index, data, n);\n}\n\nexport function relicUSDupgrade_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = relicUSDupgrade_maxBuyAmount(index, data);\n    let half = Math.floor(full/2);\n    return half;\n}\n\nexport function relicUSDupgrade_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = relicUSDupgrade_buyHalfMax_amount(index, data);\n    return relicUSDupgrade_buyNCost(index, data, half)\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { getRandomInt, WORLD_POP } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport { piety_purchase_buy_congregation, piety_purchase_buy_reincarnation, piety_purchase_buy_holypower, holiness_holyPowerUpgrade_do, holiness_holyPumpUpgrade_do, holiness_maxHolyPowerUpgrade_do, holiness_believerRetention_do, holiness_exRelations_do, holiness_buildingMulti_do, holinessUpgradesInit } from \"./PietyPurchases\";\nimport { devotion_mult } from \"./Followers\";\nimport { relicUSDupgrade_cost } from \"./USDPurchases\";\n\nexport default class ProphetModule {\n\n    constructor(public engine: Engine) {\n\n    }\n\n    get data() {\n        return this.engine.datamap.prophetData;\n    }\n\n    processCommands(cmdArray: string[]) {\n        switch (cmdArray[1]) {\n            case 'pray':\n                this.pray();\n                break;\n\n            case 'proselytize':\n                this.proselytize();\n                break;\n\n            case 'preach':\n                this.preach();\n                break;\n\n            case 'relicupgrade':\n                this.upgradeRelic(cmdArray[2])\n                break;\n\n\n            case 'buyrelic':\n                this.buyRelic(cmdArray[2]);\n                break;\n\n            case 'buymaxrelic':\n                this.buyMaxRelic(cmdArray[2]);\n                break;\n\n            case 'buyto25relic':\n                this.buyToNRelic(cmdArray[2], 25);\n                break;\n\n            case 'setbuyrelic':\n                switch (cmdArray[2]) {\n                    case '1':\n                        this.data.relicsetbuy = 1;\n                        break;\n\n                    case '25':\n                        this.data.relicsetbuy = 25;\n                        break;\n\n                    case 'max':\n                        this.data.relicsetbuy = 99;\n\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            case 'prestige':\n                this.prestige();\n                break;\n\n            case 'devotedprestige':\n                this.devotedprestige();\n                break;\n\n            case 'congregate':\n                piety_purchase_buy_congregation(this.engine.datamap)\n                break;\n\n            case 'reincarnate':\n                piety_purchase_buy_reincarnation(this.engine.datamap)\n                break;\n\n            case 'holypower':\n                piety_purchase_buy_holypower(this.engine.datamap)\n                break;\n\n            case 'holypowerUpgrade':\n                holiness_holyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'holypumpupgrade':\n                holiness_holyPumpUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'maxholypowerupgrade':\n                holiness_maxHolyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'believerretentionupgrade':\n                holiness_believerRetention_do(this.engine.datamap);\n                break;\n\n            case 'exrelationsupgrade':\n                holiness_exRelations_do(this.engine.datamap);\n                break;\n\n            case 'bmupgrade':\n                holiness_buildingMulti_do(this.engine.datamap);\n                break;\n\n            default:\n                console.log('broke in prophet comand');\n\n                break;\n        }\n    }\n\n    upgradeRelic(arg0: string) {\n        let upgradeIndex = parseInt(arg0);\n        let cost = relicUSDupgrade_cost(this.engine.datamap, upgradeIndex);\n\n        if (this.data.congregation.USD >= cost) {\n            this.data.congregation.USD -= cost;\n            this.data.relicUSDUpgrades[upgradeIndex]++;\n        }\n    }\n\n\n    buyRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_getCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex]++;\n        }\n    }\n\n    buyMaxRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let ammount = relic_maxBuyAmount(relicIndex, this.engine.datamap)\n        let cost = relic_maxBuyCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += ammount;;\n        }\n    }\n\n    buyNRelic(arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, n)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += n;\n        }\n    }\n\n    buyToNRelic(arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let remainder = this.data.relics[relicIndex] % n;\n        let needToN = n - remainder;\n\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, needToN)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += needToN;\n        }\n    }\n\n    dayTrigger(days: number) {\n        if (this.data.holyPower > 0) this.holyDump(days);\n\n        if (this.data.congregation.doorknocker > 0) this.doorknockers(days);\n        this.engine.followers.dayTriggerParitioners(days);\n        if (this.data.believers > 0) this.believersLeave(days);\n\n\n        if (this.data.congregation.preachers > 0) this.preachers(days);\n        if (this.data.congregation.devotee > 0) this.devotees(days);\n    }\n\n    devotees(days: number) {\n        this.data.devotion += devotee_devotion_gain(this.engine.datamap) * days\n    }\n\n    doorknockers(days: number) {\n        this.data.believers += (doorknocker_beliver_gain(this.engine.datamap)) * days\n    }\n\n    believersLeave = (days: number) => {\n        for (let i = 0; i < days; i++) {\n\n            let loss = getRandomInt(0, Math.max(1, helper_prophet_maxBelieversDecay(this.engine.datamap)));\n            let boundLoss = Math.min(this.data.believers, loss)\n            this.data.ex_believers += boundLoss;\n            this.data.believers -= boundLoss;\n\n        }\n    }\n\n    holyDump = (days: number) => {\n        this.data.holyPower = Math.max(this.data.holyPower - (24 * (1 + this.engine.datamap.followers.DPUpgrades.heavyHolyPower)), 0);\n    }\n\n    preachers(days: number) {\n        let gain = getRandomInt(0, preachers_max_deovtion_gain(this.engine.datamap));\n\n        this.data.devotion += gain * days;\n    }\n\n    preach() {\n        this.data.devotion += getRandomInt(0, preach_max_deovtion_gain(this.engine.datamap));\n    }\n\n    proselytize() {\n        if (this.engine.datamap.prophetData.holiness === 0) return;\n        this.engine.datamap.prophetData.holiness--;\n        let gain = getRandomInt(0, helper_prophet_maxBeliverGainNet(this.engine.datamap));\n        this.data.believers += gain;\n    }\n\n    pray() {\n        this.data.piety++;\n        if (this.data.holyPowerUnlocked) {\n            this.holyPump();\n        }\n    }\n\n    holyPump = () => {\n        this.data.holyPower = Math.min(this.data.holyPower + 1 * Math.pow(2, this.engine.datamap.holinessUpgrades.holyPumpUpgrade) * Math.pow(10, this.engine.datamap.followers.DPUpgrades.superHolyPump), prophet_maxHolyPower(this.engine.datamap));\n    }\n\n    processDetla(delta: number) {\n\n        if (this.engine.datamap.followers.DPUpgrades.fasterRelicProduction) {\n            delta = delta * (1 + .1 * this.engine.datamap.followers.DPUpgrades.fasterRelicProduction)\n        }\n        RELICS.forEach((relicData, relicIndex) => {\n            if (this.data.relics[relicIndex] === 0) return;\n            this.data.relicTimers[relicIndex] += delta;\n            let timeCost = relic_getTime(relicIndex);\n\n            if (this.data.relicTimers[relicIndex] >= timeCost) {\n                let count = Math.floor(this.data.relicTimers[relicIndex] / timeCost)\n                this.data.relicTimers[relicIndex] -= timeCost * count;\n                this.data.piety += relic_getProduction(relicIndex, this.engine.datamap) * count\n            }\n        });\n\n        if (this.data.piety > this.data.maxPiety) {\n            this.data.maxPiety = this.data.piety;\n        }\n\n    }\n\n    pietyDecay(delta: number) {\n        //lookup math to simulate this over time\n        let decay = (delta / 1000) * (helper_prophet_pietyDecay(this.engine.datamap));\n        decay = Math.floor(decay);\n        return decay;\n    }\n\n    prestige = () => {\n        \n        let ppgain = prophet_prestige_gain(this.engine.datamap);\n        if (ppgain === 0 || this.data.prestigeUnlocked === false) return;\n\n        let oldData = this.data;\n        let oldMult = oldData.holiness;\n        let newCount = this.data.save.reincarnationCount + 1;\n        let selected = this.data.relicsetbuy;\n        let newOld = {\n            preachers: this.data.congregation.preachers,\n            preacherLevel: this.data.congregation.preacherLevel,\n            devotee: this.data.congregation.devotee,\n            devoteeLevel: this.data.congregation.devoteeLevel,\n            doorknocker: this.data.congregation.doorknocker,\n            doorknockerLevel: this.data.congregation.doorknockerLevel,\n        }\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.data.holiness = oldMult + Math.floor(ppgain);\n        this.data.startingHoliness = this.data.holiness\n        this.data.relicsetbuy = selected;\n        this.data.save.reincarnationCount = newCount;\n        this.data.congregation.old = newOld;\n\n        this.prestigeCleanup();\n    }\n\n    devotedprestige = () => {\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.engine.datamap.holinessUpgrades = holinessUpgradesInit()\n        this.engine.datamap.followers.devotedPrestige++;\n\n        this.prestigeCleanup();\n    }\n\n    prestigeCleanup = () => {\n        this.engine.datamap.gameTime.currentRun.time = 0;\n        this.engine.datamap.nav.mainArea = 0\n        this.engine.gameTime.reset();\n        this.engine.rocket.reset();\n    }\n}\n\nexport function availablePeople (data:Datamap) {\n    return WORLD_POP - data.prophetData.believers - data.prophetData.ex_believers;\n}\n\nexport function preach_max_deovtion_gain(data: Datamap) {\n    return data.prophetData.believers;\n}\n\nexport function devotee_devotion_gain(data: Datamap) {\n    return data.prophetData.congregation.devotee * (1 + data.prophetData.congregation.devoteeLevel)\n}\n\nexport function doorknocker_beliver_gain(data: Datamap) {\n    let gain = data.prophetData.congregation.doorknocker * (1 + data.prophetData.congregation.doorknockerLevel)\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain)\n    return realGain;\n\n}\n\nexport function preachers_max_deovtion_gain(data: Datamap) {\n    return preach_max_deovtion_gain(data) * data.prophetData.congregation.preachers * (1 + data.prophetData.congregation.preacherLevel);\n}\n\nexport function helper_prophet_maxBelieversDecay(data: Datamap) {\n    let total_power = helper_prophet_size_believerDecay(data) + helper_prophet_exBeliever_believerDecay(data);\n\n    return Math.max(1, Math.floor(total_power))\n\n}\n\n\nexport function helper_prophet_size_believerDecay(data: Datamap) {\n    let size = data.prophetData.believers;\n    let power = size / 10;\n    let total_power = power / (1 + data.holinessUpgrades.believerRetention);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGain(data: Datamap) {\n    return Math.floor(Math.log(1 + data.prophetData.piety))\n}\n\nexport function helper_prophet_exBeliever_harm(data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex / 10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_exBeliever_believerDecay(data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex / 10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    total_power = total_power / (1 + data.holinessUpgrades.believerRetention);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGainNet(data: Datamap) {\n    let gain = helper_prophet_maxBeliverGain(data);\n    let harm = helper_prophet_exBeliever_harm(data);\n    return Math.max(0, gain - harm)\n}\n\nexport function helper_prophet_pietyDecay(data: Datamap) {\n    return Math.floor(data.prophetData.piety / 10000) * data.gameTime.year;\n}\n\nexport function prophet_maxHolyPower(data: Datamap) {\n    let relics = data.prophetData.relics;\n    let sum = relics[0] + relics[1] + relics[2] + relics[3] + relics[4];\n    sum = sum * (1 + data.holinessUpgrades.maxHolyPowerUpgrade)\n    return sum;\n}\n\nexport interface I_PropheData {\n    piety: number;\n    maxPiety: number;\n    believers: number;\n    ex_believers: number;\n    relics: number[];\n    relicsetbuy: number;\n    relicTimers: number[];\n    relicUSDUpgrades: number[];\n    holiness: number;\n    startingHoliness: number;\n    prestigeUnlocked: boolean;\n    holyPower: number;\n    devotion: number;\n    holyPowerUnlocked: boolean;\n    save: {\n        reincarnationCount: number,\n    }\n    congregation: {\n        unlocked: boolean;\n        old: {\n            preachers: number;\n            preacherLevel: number;\n            devotee: number;\n            devoteeLevel: number;\n            doorknocker: number;\n            doorknockerLevel: number;\n        }\n        preachers: number;\n        preacherLevel: number;\n        devotee: number;\n        devoteeLevel: number;\n        doorknocker: number;\n        doorknockerLevel: number;\n\n        paritioners: number[];\n\n        USD: number;\n        questions: number;\n        crediblity: number;\n\n\n\n    }\n}\n\nexport function init_ProphetData(): I_PropheData {\n    return {\n        piety: 0,\n        maxPiety: 0,\n        believers: 0,\n        relicsetbuy: 1,\n        ex_believers: 0,\n        relics: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        relicTimers: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        relicUSDUpgrades: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        save: {\n            reincarnationCount: 0\n        },\n        holiness: 0,\n        startingHoliness: 0,\n        holyPowerUnlocked: false,\n        holyPower: 0,\n        devotion: 0,\n        prestigeUnlocked: false,\n        congregation: {\n            unlocked: false,\n\n            preachers: 0,\n            preacherLevel: 0,\n            devotee: 0,\n            devoteeLevel: 0,\n            doorknocker: 0,\n            doorknockerLevel: 0,\n            old: {\n                preachers: 0,\n                preacherLevel: 0,\n                devotee: 0,\n                devoteeLevel: 0,\n                doorknocker: 0,\n                doorknockerLevel: 0,\n            },\n\n            paritioners: [0, 0, 0, 0, 0, 0],\n\n            USD: 0,\n            crediblity: 0,\n            questions: 0\n\n        }\n    }\n}\n\n\ninterface KongGenerator {\n    name: string;\n    initialCost: number;\n    coefficient: number;\n    initialTime: number;\n    initialRevenue: number;\n}\n\nconst LemonadeStand: KongGenerator = {\n    name: \"Holy Sponge\",\n    initialCost: 5,\n    coefficient: 1.1,\n    initialTime: 1,\n    initialRevenue: 1,\n}\n\nconst NewspaperDelivery: KongGenerator = {\n    name: \"Holy Thorn\",\n    initialCost: 500,\n    coefficient: 1.15,\n    initialTime: 8,\n    initialRevenue: 160,\n}\n\nconst CarWash: KongGenerator = {\n    name: \"Holy Nail\",\n    initialCost: 50000,\n    coefficient: 1.14,\n    initialTime: 24,\n    initialRevenue: 7400,\n}\n\nconst PizzaDelivery: KongGenerator = {\n    name: \"Holy Lance\",\n    initialCost: 5000000,\n    coefficient: 1.13,\n    initialTime: 2 * 24,\n    initialRevenue: 53200,\n}\n\nconst DonutShop: KongGenerator = {\n    name: \"True Cross\",\n    initialCost: 5000000000,\n    coefficient: 1.12,\n    initialTime: 7 * 24,\n    initialRevenue: 988400,\n}\n\n\nconst FakeNews1: KongGenerator = {\n    name: \"SuperSponge\",\n    initialCost: 1e15,\n    coefficient: 1.22,\n    initialTime: 1,\n    initialRevenue: 4e5,\n}\n\nconst FakeNews2: KongGenerator = {\n    name: \"Crown of Thorns\",\n    initialCost: 1e18,\n    coefficient: 1.22,\n    initialTime: 8,\n    initialRevenue: 1600e4,\n}\n\nconst FakeNews3: KongGenerator = {\n    name: \"Holy Nailgun\",\n    initialCost: 1e21,\n    coefficient: 1.22,\n    initialTime: 24,\n    initialRevenue: 74000,\n}\n\nconst FakeNews4: KongGenerator = {\n    name: \"Holier Lance\",\n    initialCost: 1e24,\n    coefficient: 1.22,\n    initialTime: 2 * 24,\n    initialRevenue: 532000,\n}\n\nconst FakeNews5: KongGenerator = {\n    name: \"Inverted Cross\",\n    initialCost: 1e27,\n    coefficient: 1.22,\n    initialTime: 7 * 24,\n    initialRevenue: 9884000,\n}\n\n\nexport const RELICS = [LemonadeStand, NewspaperDelivery, CarWash, PizzaDelivery, DonutShop,\n    FakeNews1, FakeNews2, FakeNews3, FakeNews4, FakeNews5]\n\nexport function relic_getCost(relicIndex: number, data: Datamap) {\n    let relicData = RELICS[relicIndex];\n\n    let owned = data.prophetData.relics[relicIndex];\n    let cost_base = relicData.initialCost;\n    let coefficient = relicData.coefficient;\n\n    return Math.floor(cost_base * Math.pow(coefficient, owned))\n}\n\nexport function relic_canBuy(relicIndex: number, data: Datamap) {\n    let cost = relic_getCost(relicIndex, data);\n    return data.prophetData.piety >= cost;\n}\n\nexport function relic_getTime(relicIndex: number) {\n    return RELICS[relicIndex].initialTime * 1000;\n}\n\nexport function relic_getProduction(relicIndex: number, data: Datamap) {\n    let val = Math.floor(\n        data.prophetData.relics[relicIndex] *\n        RELICS[relicIndex].initialRevenue *\n        relic_getProductionMulti(relicIndex, data) *\n        holiness_mult(data) *\n        relic_hoylPowerMulti(data) *\n        devotion_mult(data) *\n        reincation_mult(data) *\n        special_relic_mult(relicIndex, data)\n    )\n    return val\n}\n\nexport function special_relic_mult(index: number, data: Datamap) {\n    let mult = 1;\n    mult += time_relic_mult(data)\n    return mult;\n}\n\nexport function time_relic_mult(data: Datamap) {\n    return year_relic_mult(data) + month_relic_mult(data)\n}\n\nexport function year_relic_mult(data: Datamap) {\n    return data.followers.DPUpgrades.yearMultiplier * data.gameTime.year\n}\n\nexport function month_relic_mult(data: Datamap) {\n    return data.followers.DPUpgrades.monthMultiplier * data.gameTime.month\n}\n\nexport function holiness_mult(data: Datamap) {\n    return CALC_holy_mult(data.prophetData.holiness)\n}\n\nexport function reincation_mult(data: Datamap) {\n    return (data.prophetData.save.reincarnationCount + 1) * reincation_mult_from_superPrestiges(data)\n}\n\nexport function reincation_mult_from_superPrestiges (data:Datamap) {\n    return data.followers.devotedPrestige + 1\n}\n\nfunction CALC_holy_mult(holiness: number) {\n    return Math.sqrt(holiness) + 1\n}\n\nexport function next_holiness_mult(data: Datamap) {\n    return CALC_holy_mult(data.prophetData.holiness + prophet_prestige_gain(data))\n}\n\nexport function relic_getProductionPerecond(relicIndex: number, data: Datamap) {\n    return (relic_getProduction(relicIndex, data) / (RELICS[relicIndex].initialTime))\n}\n\nexport function relic_hoylPowerMulti(data: Datamap) {\n    return Math.floor(Math.log(data.prophetData.holyPower + 1) * (1 + data.holinessUpgrades.holypowerUpgrade) * (1 + data.followers.DPUpgrades.heavyHolyPower)) + 1;\n}\n\nexport const PRODMULTIPER25 = 1.5\n\nexport function Building_Multi(data: Datamap, index: number) {\n    return 1.5 + (.1 * (data.holinessUpgrades.buildingMulti + data.prophetData.relicUSDUpgrades[index]))\n}\n\nexport function relic_getProductionMulti(relicIndex: number, data: Datamap) {\n    return Math.pow(Building_Multi(data, relicIndex), Math.floor(data.prophetData.relics[relicIndex] / 25))\n}\n\nexport function relic_maxBuyAmount(relicIndex: number, data: Datamap) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n    let c = data.prophetData.piety;\n\n    let logresult = Math.log(1 + ((c * (r - 1)) / (b * Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}\n\nexport function prophet_prestige_gain(data: Datamap) {\n    return Math.floor(Math.sqrt(Math.sqrt(data.prophetData.maxPiety) / 100))\n}\n\nexport function relic_maxBuyCost(relicIndex: number, data: Datamap) {\n\n    let n = relic_maxBuyAmount(relicIndex, data);\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_buyNCost(relicIndex: number, data: Datamap, n: number) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n\n    return Math.floor(b * (Math.pow(r, k) * (Math.pow(r, n) - 1)) / (r - 1))\n}\n\nexport function relic_buyNextCost(relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_canBuyN(relicIndex: number, data: Datamap, n: number) {\n    let cost = relic_buyNCost(relicIndex, data, n);\n    return data.prophetData.piety >= cost\n}\n\nexport function relic_canBuyNext(relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_canBuyN(relicIndex, data, n);\n}\n\nexport const CMD_prophet_pray: DecoupledCommand = {\n    name: \"Pray\",\n    command: 'prophet pray',\n}\n\nexport const CMD_prophet_proselytize: DecoupledCommand = {\n    name: \"Proselytize\",\n    command: 'prophet proselytize',\n}\n\nexport const CMD_prophet_preach: DecoupledCommand = {\n    name: \"Preach\",\n    command: 'prophet preach',\n}\n\nfunction can_devotedPrestige(data: Datamap) {\n    return data.prophetData.devotion >= devotedPrestige_cost(data);\n}\n\nexport function devotedPrestige_cost(data: Datamap) {\n    return 1e8 * Math.pow(69.69, data.followers.devotedPrestige);\n}\n\nfunction hide_devotedPrestige(data: Datamap) {\n    return (data.prophetData.devotion < 1e8) && (data.followers.devotedPrestige === 0)\n}\n\nexport const CMD_prophet_devotedPrestige: DecoupledCommand = {\n    name: \"Devoted Prestige\",\n    command: 'prophet devotedprestige',\n    able: can_devotedPrestige,\n    hidden: hide_devotedPrestige,\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { Datamap } from \"../Datamap\";\n\nexport default class GameTime {\n\n    constructor(public engine: Engine) {\n\n    }\n    \n    get data () {\n        return this.engine.datamap.gameTime;\n    }\n\n    reset = () => {\n        this.engine.datamap.gameTime = GameTimeInit();\n    }\n\n    static get requiredMS () {\n        return 24000;\n    }\n    static maxDays = 30;\n    static maxMonths = 12;\n\n\n    processDelta = (delta: number) => {\n        this.data.currentRun.time += delta;\n\n        let mscost = GameTime.requiredMS;\n        this.data.msprogress += delta;\n        if (this.data.msprogress >= mscost) {\n            this.data.msprogress -= mscost;\n            this.passDayAction();\n        }\n    }\n\n    processCommands = (commands: string[]) => {\n        switch (commands[1]) {\n            case 'passday':\n                this.passDay();\n                break;\n\n            case 'eatday':\n                this.eatDay();\n                break;\n        \n            default:\n                console.log('error in gametime processCommands')\n                break;\n        }\n    }\n\n    passDayAction = () => {\n        let daysForTriggers = 1 + Math.floor(this.data.msprogress / GameTime.requiredMS)\n        this.data.day ++;\n        //this.engine.save();\n        if (this.data.day > GameTime.maxDays) {\n            this.data.day -= GameTime.maxDays;\n            this.data.month ++; \n            if (this.data.month > GameTime.maxMonths) {\n                this.data.month -= GameTime.maxMonths;\n                this.data.year ++;\n            }\n        }\n\n        this.dayTriggers(daysForTriggers);\n\n        if (this.data.msprogress >= GameTime.requiredMS) this.multiday();\n    }\n\n    multiday = () => {\n        let mscost = GameTime.requiredMS;\n        let startms = this.data.msprogress;\n\n        let elapsed_days = Math.floor(this.data.msprogress / mscost);\n        this.data.msprogress = this.data.msprogress % GameTime.requiredMS;\n        \n        let totalDays = elapsed_days + this.data.day;\n        this.data.day = ((totalDays - 1) % 30) + 1;\n        \n        let elapased_months = Math.floor((totalDays - 1) / 30);\n        \n        let totalMonths = this.data.month + elapased_months;\n        this.data.month = ((totalMonths- 1)%12)+1;\n\n        let gainedYears = Math.floor((totalMonths - 1) / 12)\n        this.data.year +=  gainedYears;\n\n        console.log('multiday!', startms, elapsed_days, elapased_months, gainedYears);\n\n    }\n\n    dayTriggers(days: number) {\n        for (let i = 0; i < days; i++) {\n            this.engine.prophet.dayTrigger(1);\n            this.engine.datamap.rocketData.joules ++;\n        }\n    }\n\n    passDay = () => {\n        this.passDayAction()\n    }\n\n    eatDay = () => {\n        if (this.data.day < 2) return;\n        this.data.day --;\n        this.data.eatenDays ++;\n    }\n    \n}\n\nexport interface GameTimeData {\n    msprogress: number;\n    day: number;\n    month: number;\n    year: number;\n    eatenDays: number;\n    currentRun: {\n        time: number;\n    }\n}\n\nexport function GameTimeInit (): GameTimeData {\n    return {\n        day: 1,\n        month: 1,\n        year: 0,\n        msprogress: 0,\n        eatenDays: 0,\n        currentRun: {\n            time: 0\n        }\n    }\n}\n\nexport const COMMAND_EAT_DAY: DecoupledCommand = {\n    name: 'Eat Day',\n    command: 'gametime eatday',\n    able: (datamap:Datamap) => {\n        return datamap.gameTime.day > 1;\n    }\n}\n\nexport const COMMAND_pass_day: DecoupledCommand = {\n    name: \"Pass Day\",\n    command: 'gametime passday',\n}","import AbstractModule from \"./AbstractModule\";\nimport { Datamap } from \"../Datamap\";\n\nexport default class NavArea extends AbstractModule {\n\n    get data (): NavAreaData {\n        return this.engine.datamap.nav;\n    }\n\n    changeMainArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.mainArea = number;\n        this.data.subArea = 0;\n    }\n\n    changeSubArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.subArea = number;\n    }\n\n}\n\nexport type NavAreaData = {\n    mainArea: number;\n    subArea: number;\n}\n\nexport function NavAreaDataInit (): NavAreaData {\n    return {\n        mainArea: 0,\n        subArea: 0,\n    }\n}\n\nexport function areaUnlocked(areaIndex:number, data: Datamap) {\n    switch (areaIndex) {\n        case 0:\n            return true\n            break;\n\n        case 1: \n            return data.prophetData.prestigeUnlocked === true || data.prophetData.save.reincarnationCount > 0\n            break;\n        default:\n            return false;\n    }\n}\n\n/* hidden={(datamap)=>{return datamap.prophetData.prestigeUnlocked === false && data.prophetData.holiness === 0}}/>\n          <CommandButtonFC name='Followers' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n          */","export interface SimData {\n    mass: number;\n            current_v: number;\n            current_h: number;\n            active: boolean;\n            elapsedTime: number;\n            impactJouls: number\n}\n\nexport function SimDataInit ():SimData {\n    return {\n        mass: 0,\n        current_h: 0,\n        current_v: 0,\n        impactJouls: 0,\n        active: false,\n        elapsedTime: 0,\n    }\n}\n\nexport interface DerivedData {\n    estimatedTime: number;\n    estimatedVMax: number;\n    estimatedJouls: number;\n}\n\nexport function DerivedDataInit ():DerivedData {\n    return {\n        estimatedTime: 0,\n        estimatedVMax: 0,\n        estimatedJouls: 0,\n    }\n}\n\nexport interface RocketData {\n    ball: {\n        height: number,\n        mass: number,\n        derived: DerivedData;\n        sim: SimData\n    }\n    thrown_ball: {\n        initial_velocity: number,\n        derived: DerivedData;\n        sim: SimData\n    }\n    bouncyball: {\n        bounces_upgrades: number;\n        loss_upgrades: number;\n        derived: DerivedData;\n        sim: SimData & {bounces: number;};\n    }\n    joules: number;\n}\n\nexport function RocketDataInit(): RocketData {\n    return {\n        ball: {\n            height: 0,\n            mass: 0,\n            derived: DerivedDataInit(),\n            sim: SimDataInit(),\n        },\n        thrown_ball: {\n            initial_velocity: 0,\n            derived: DerivedDataInit(),\n            sim: SimDataInit()\n        },\n        bouncyball: {\n            bounces_upgrades: 0,\n            loss_upgrades: 0,\n            derived: DerivedDataInit(),\n            sim: {...SimDataInit() ,bounces: 0},\n\n        },\n        joules: 0\n    }\n}\n","import AbstractModule from \"./AbstractModule\";\nimport Engine from \"../Engine\";\n\nexport default class NameAndCode extends AbstractModule {\n    constructor(public engine: Engine) {\n        super(engine);\n    }\n\n    nacCommand (commands: string []) {\n        console.log(commands);\n        \n        switch (commands[1]) {\n            case 'setname':\n                this.data.name = commands[2];\n                this.data.timeSet = Date.now();\n                break;\n\n            case 'clearname':\n                this.data.name = '';\n                this.data.timeSet = 0;\n        \n            default:\n                break;\n        }\n    }\n\n    get data() {\n        return this.engine.datamap.nacData;\n    }\n\n    \n}\n\nexport interface NameAndCode_Data {\n    name: string;\n    timeSet: number;\n}\n\nexport function NameAndCode_Init (): NameAndCode_Data {\n    return {\n        name: '', timeSet: 0\n    }\n}","import { I_PropheData, init_ProphetData } from \"./modules/Prophet\";\nimport { GameTimeData, GameTimeInit } from \"./modules/Gametime\";\nimport { NavAreaData, NavAreaDataInit } from \"./modules/NavArea\";\nimport { HolinessUpgrades, holinessUpgradesInit } from \"./modules/PietyPurchases\";\nimport { FollowerData, followerDataInit } from \"./modules/Followers\";\nimport { AdornmentData, adornmentDataInit } from \"./modules/Adornments\";\nimport { RocketData, RocketDataInit } from \"./modules/RocketTypes\";\nimport { NameAndCode_Data, NameAndCode_Init } from \"./modules/NameAndCode\";\n\nexport interface Datamap {\n    offline: {\n        happening: boolean;\n        totaltime: number;\n    }\n    x: number;\n    y: number;\n    z: number;\n    ticks: number;\n    last: number;\n    ui: {\n        innerWidth: number;\n        innerHeight: number;\n    }\n    prophetData: I_PropheData;\n    gameTime: GameTimeData;\n    nav: NavAreaData,\n    holinessUpgrades: HolinessUpgrades,\n    followers: FollowerData,\n    adornments: AdornmentData,\n    rocketData: RocketData,\n    nacData: NameAndCode_Data,\n}\n\nexport function newDefaultMap () {\n    let map: Datamap = {\n        offline: {\n            happening: false,\n            totaltime: 0,\n        },\n        x: 0, \n        y: 0, \n        z: 0,\n        ticks: 0,\n        last: Date.now(),\n        ui: {\n            innerHeight: 600,\n            innerWidth: 800,\n        },\n        prophetData: init_ProphetData(),\n        gameTime: GameTimeInit(),\n        nav: NavAreaDataInit(),\n        holinessUpgrades: holinessUpgradesInit(),\n        followers: followerDataInit(),\n        adornments: adornmentDataInit(),\n        rocketData: RocketDataInit(),\n        nacData: NameAndCode_Init(),\n    }\n    return map;\n}","import AbstractModule from \"./AbstractModule\";\n\nexport default class Adornments extends AbstractModule {\n\n    \n    get data() {\n        return this.engine.datamap.adornments;\n    }\n\n    handle_adornments_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            \n\n            default:\n                break;\n        }\n    }\n\n}\n\nexport interface AdornmentData {\n    \n}\n\nexport function adornmentDataInit () {\n    return {\n        \n    }\n}\n","import {Datamap, newDefaultMap} from './Datamap';\nimport * as _ from 'lodash'\n\nexport default abstract class CoreEngine {\n\n    datamap: Datamap = newDefaultMap();\n    loop: NodeJS.Timeout | undefined = undefined;\n\n    constructor(public notify: VoidFunction){\n        this.datamap.last = Date.now();\n        this.start();\n    }\n\n    start = () => {\n        if (!this.loop) {\n            this.loop = setInterval(this.tick, 200);\n        }\n    }\n\n    stop = () => {\n        if (this.loop){\n            clearTimeout(this.loop);\n            this.loop = undefined;\n        } \n    }\n\n    save= () => {\n        let datamap = JSON.stringify(this.datamap);\n        localStorage.setItem('datamap', datamap);\n    }\n\n    load= () => {\n        this.quietLoad();        \n        this.notify();\n    }\n\n    reset = () => {\n        this.datamap = newDefaultMap();\n        this.notify();\n    }\n\n    quietLoad = () => {\n        let combstr = localStorage.getItem('datamap');\n        if (combstr != null){\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n    }\n\n    tick = () => {\n        \n        let newnow = Date.now();\n        let oldnow = this.datamap.last;\n        let delta = newnow - oldnow;\n\n        this.datamap.last = newnow;\n        \n        this.processDelta(delta)\n        this.notify();\n    }\n\n    abstract processDelta (delta: number): void;\n    abstract executeCommand (command: string): void;\n \n}\n\n\n","import { DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport { SECOND_MS } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport Engine from \"../Engine\";\nimport { SimData, RocketDataInit } from \"./RocketTypes\";\n\nexport default class Rocket extends AbstractModule {\n\n    constructor(engine: Engine) {\n        super(engine);\n        this.updateEstimates();\n    }\n\n    get data() {\n        return this.engine.datamap.rocketData;\n    }\n\n    reset () {\n        this.engine.datamap.rocketData = RocketDataInit();\n    }\n\n    handle_rocket_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'ballheight+':\n                this.data.joules -= ballHeightUpgrade_cost(this.engine.datamap);\n                this.data.ball.height = nextBallHeightUpgrade(this.data.ball.height);\n                break;\n\n            case 'ballmass+':\n                this.engine.datamap.prophetData.congregation.USD -= ballMassUpgrade_cost(this.engine.datamap)\n                this.data.ball.mass = nextBallMassUpgrade(this.data.ball.mass)\n                break;\n\n            case 'ballvelocity+':\n                this.data.joules -= ballVelocityUpgrade_cost(this.engine.datamap);\n                this.data.thrown_ball.initial_velocity = nextBallVelocityUpgrade(this.data.thrown_ball.initial_velocity);\n                break;\n\n            case 'ballbounces+':\n                    this.data.joules -= ballBounceUpgrade_cost(this.engine.datamap);\n                    this.data.bouncyball.bounces_upgrades = nextBallBounceUpgrade(this.data.bouncyball.bounces_upgrades);\n                    break;\n\n            case 'throwball':\n                this.throwball();\n                break;\n\n            case 'dropball':\n                this.dropball();\n                break;\n\n            case 'bounceball':\n                this.bounceball();\n                break;\n\n            default:\n                break;\n        }\n        this.updateEstimates();\n    }\n\n    dropball = () => {\n        let ball = this.data.ball;\n\n        ball.sim = {\n            active: true,\n            current_h: ball.height,\n            current_v: 0,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n        ball.height = 1;\n    }\n\n    throwball = () => {\n        let ball = this.data.ball;\n\n        this.data.thrown_ball.sim = {\n            active: true,\n            current_h: ball.height  ,\n            current_v: this.data.thrown_ball.initial_velocity,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n\n        ball.height = 1;\n        this.data.thrown_ball.initial_velocity = 1;\n    }\n\n    bounceball () {\n        //console.log('bounce');\n        \n        let ball = this.data.ball;\n        let thrown_ball = this.data.thrown_ball\n\n        this.data.bouncyball.sim = {\n            active: true,\n            current_h: ball.height,\n            bounces: this.data.bouncyball.bounces_upgrades + 1,\n            current_v: thrown_ball.initial_velocity,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n\n        ball.height = 1;\n        this.data.thrown_ball.initial_velocity = 1;\n        this.data.bouncyball.bounces_upgrades = 1;\n    }\n\n    updateEstimates() {\n        let estimatedVMax = freefall_vmax_from_h(this.data.ball.height);\n        let estimatedTime = freefall_t_from_h(this.data.ball.height);\n\n        this.data.ball.derived.estimatedTime = estimatedTime\n        this.data.ball.derived.estimatedVMax = estimatedVMax\n        this.data.ball.derived.estimatedJouls = freefall_j_from_mv(estimatedVMax, this.data.ball.mass)\n    }\n\n    processDelta = (delta: number) => {\n        if (this.data.ball.sim.active === true) this.ballsim(delta / SECOND_MS);\n        if (this.data.thrown_ball.sim.active === true) this.thrownballsim(delta / SECOND_MS);\n        if (this.data.bouncyball.sim.active === true) this.bounceyball_sim(delta / SECOND_MS);\n    }\n\n    vhat_sim (v_in: number, height: number, acceleration: number, seconds: number) {\n        let estimatedDistance = freefall_d_from_vat(v_in, GRAVITY, seconds)\n        let delta_t, delta_h, vf;\n\n        if (estimatedDistance + height > 0) {\n\n            delta_t = seconds;\n            delta_h = estimatedDistance\n            vf = freefall_vf_from_viat(v_in, acceleration, seconds)\n        } else { //need to solve FROM d\n\n            vf = freefall_vf_from_viad(v_in, GRAVITY, height);\n\n            delta_t = freefall_t_from_vivfd(v_in, vf, height)\n            delta_h = -height\n        }\n        return {delta_t, delta_h, vf}\n    }\n\n    move_and_impact(sim: SimData, seconds: number){\n        let vin = sim.current_v;\n        let h = sim.current_h;\n\n\n        let {delta_t, delta_h, vf} = this.vhat_sim(vin,h,GRAVITY,seconds);\n\n        sim.elapsedTime += delta_t;\n        sim.current_h += delta_h;\n        sim.current_v = vf;\n        return sim.current_h <= 0\n    }\n\n    ballsim = (seconds: number) => {\n\n        \n        let ball = this.data.ball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.active = false;\n            this.ballimpact();\n        }\n\n    }\n\n\n    thrownballsim = (seconds: number) => {\n\n        let ball = this.data.thrown_ball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.active = false;\n            this.thrown_ballimpact();\n        }\n\n\n    }\n    \n    bounceyball_sim (seconds: number) {\n        let initial_time =  this.data.bouncyball.sim.elapsedTime\n        let ball = this.data.bouncyball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.bounces --\n            if (ball.sim.bounces < 0) {\n                ball.sim.active = false;\n                this.bounce_ballimpact();\n            } else {\n                let bounce_energy = this.bounce_ballimpact();\n                ball.sim.current_v = v_from_mj(ball.sim.mass, bounce_energy)\n                this.bounceyball_sim(seconds - (initial_time - this.data.bouncyball.sim.elapsedTime))\n            }\n        }\n    }\n\n    impact() {\n        let gainedJoules = freefall_j_from_mv(this.data.ball.sim.current_v, this.data.ball.mass);\n        this.data.ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor(gainedJoules)\n    }\n\n    ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.ball.sim.current_v, this.data.ball.mass);\n        this.data.ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor(gainedJoules)\n    }\n\n    thrown_ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.thrown_ball.sim.current_v, this.data.ball.mass);\n        this.data.thrown_ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor( gainedJoules )\n    }\n\n    bounce_ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.bouncyball.sim.current_v, this.data.ball.mass);\n        this.data.bouncyball.sim.impactJouls += gainedJoules;\n        this.data.joules += Math.floor( gainedJoules )\n        return (gainedJoules) * .8\n    }\n\n}\n\n\n\n//CLASS HELPERS \n\nexport function nextBallHeightUpgrade(height: number) {\n    return 1 + height;\n}\n\nexport function ballHeightUpgrade_cost(data: Datamap) {\n    return Math.floor(-kinetic_energy_mgdh(data.rocketData.ball.mass, 1))\n}\n\nexport function ballHeightUpgrade_able(data: Datamap) {\n    return ballHeightUpgrade_cost(data) <= data.rocketData.joules && data.rocketData.ball.mass > 0;\n}\n\nexport function nextBallMassUpgrade(mass: number) {\n    return 1 + mass;\n}\n\nexport function ballMassUpgrade_cost(data: Datamap) {\n    return data.rocketData.ball.mass + 1;\n}\n\nexport function ballMassUpgrade_able(data: Datamap) {\n    return ballMassUpgrade_cost(data) <= data.prophetData.congregation.USD;\n}\n\nexport function nextBallVelocityUpgrade(velocity: number) {\n    return 2 + velocity;\n}\n\nexport function ballVelocityUpgrade_cost(data: Datamap) {\n    // ke = 1/2mvv\n    let velocity = data.rocketData.thrown_ball.initial_velocity;\n    let delta_v = nextBallVelocityUpgrade(velocity) - velocity;\n    return (.5 * data.rocketData.ball.mass * delta_v * delta_v); \n}\n\nexport function ballVelocityUpgrade_able(data: Datamap) {\n    return ballVelocityUpgrade_cost(data) <= data.rocketData.joules;\n}\n\nexport function nextBallBounceUpgrade(bounce: number) {\n    return 1 + bounce;\n}\n\nexport function ballBounceUpgrade_cost(data: Datamap) {\n    return Math.pow(10, data.rocketData.bouncyball.bounces_upgrades+4);\n}\n\nexport function ballBounceUpgrade_able(data: Datamap) {\n    return ballBounceUpgrade_cost(data) <= data.rocketData.joules;\n}\n\n//ROCKET COMMANDS\n\nexport const cmd_ballheightplus: DecoupledCommand2 = {\n    name: () => 'Lift Ball',\n    command: () => 'rocket ballheight+',\n    change: (data) => `${data.rocketData.ball.height} -> ${nextBallHeightUpgrade(data.rocketData.ball.height)}`,\n    able: ballHeightUpgrade_able,\n    cost: ballHeightUpgrade_cost,\n    costName: 'j'\n}\n\nexport const cmd_ballmassplus: DecoupledCommand2 = {\n    name: () => 'Increase Ball Mass',\n    command: () => 'rocket ballmass+',\n    change: (data) => `${data.rocketData.ball.mass} -> ${nextBallMassUpgrade(data.rocketData.ball.mass)}`,\n    able: ballMassUpgrade_able,\n    cost: ballMassUpgrade_cost,\n    costName: 'USD'\n}\n\nexport const cmd_ballvelocityplus: DecoupledCommand2 = {\n    name: () => 'Increase Initial Ball Velocity',\n    command: () => 'rocket ballvelocity+',\n    change: (data) => `${data.rocketData.thrown_ball.initial_velocity} -> ${nextBallVelocityUpgrade(data.rocketData.thrown_ball.initial_velocity)}`,\n    able: ballVelocityUpgrade_able,\n    cost: ballVelocityUpgrade_cost,\n    costName: 'j',\n    hidden: (data) => data.rocketData.ball.mass === 0 || data.rocketData.ball.height === 0,\n}\n\nexport const cmd_ballbouncesplus: DecoupledCommand2 = {\n    name: () => 'Bounces',\n    command: () => 'rocket ballbounces+',\n    change: (data) => `${data.rocketData.bouncyball.bounces_upgrades} -> ${nextBallBounceUpgrade(data.rocketData.bouncyball.bounces_upgrades)}`,\n    able: ballBounceUpgrade_able,\n    cost: ballBounceUpgrade_cost,\n    hidden: (data) => data.rocketData.thrown_ball.initial_velocity === 0,\n    costName: 'j'\n}\n\nexport const cmd_dropball: DecoupledCommand2 = {\n    name: () => 'Drop Ball',\n    command: () => 'rocket dropball',\n    able: (data) => data.rocketData.ball.sim.active === false && data.rocketData.ball.height > 0,\n}\n\nexport const cmd_throwball: DecoupledCommand2 = {\n    name: () => 'Throw Ball',\n    command: () => 'rocket throwball',\n    able: (data) => data.rocketData.thrown_ball.sim.active === false,\n    hidden: (data) => data.rocketData.thrown_ball.initial_velocity === 0,\n}\n\nexport const cmd_bouncyball: DecoupledCommand2 = {\n    name: () => 'Bounce Ball',\n    command: () => 'rocket bounceball',\n    able: (data) => data.rocketData.bouncyball.sim.active === false,\n    hidden: (data) => data.rocketData.bouncyball.bounces_upgrades === 0,\n\n}\n/*\n    {\\displaystyle \\Delta v=v_{\\text{e}}\\ln {\\frac {m_{0}}{m_{f}}}=I_{\\text{sp}}g_{0}\\ln {\\frac {m_{0}}{m_{f}}}}\n\nwhere:\n\n    Δ v   {\\displaystyle \\Delta v\\ } \\Delta v\\ is delta-v – the maximum change of velocity of the vehicle (with no external forces acting).\n    m 0 {\\displaystyle m_{0}} m_{0} is the initial total mass, including propellant, also known as wet mass.\n    m f {\\displaystyle m_{f}} m_{f} is the final total mass without propellant, also known as dry mass.\n    v e = I sp g 0 {\\displaystyle v_{\\text{e}}=I_{\\text{sp}}g_{0}} {\\displaystyle v_{\\text{e}}=I_{\\text{sp}}g_{0}} is the effective exhaust velocity, where:\n\n        I sp {\\displaystyle I_{\\text{sp}}} I_{\\text{sp}} is the specific impulse in dimension of time.\n        g 0 {\\displaystyle g_{0}} g_{0} is standard gravity.\n*/\n\n/* PHYSICS */\n\n//h = 1/2gt2, m\n\n//h = 1/2vt\n\n//v = gt, m/s\n\nconst GRAVITY = -9.8\n\nexport function freefall_t_from_h(height: number) { //return s\n\n    let time = Math.sqrt(2 * height / -GRAVITY);\n\n    return time;\n}\n\nexport function freefall_vmax_from_h(height: number) { //return m/s\n    let vmax = GRAVITY * freefall_t_from_h(height);\n    return vmax;\n}\n\nexport function freefall_d_from_vat(velocity_in: number, acceleration: number, seconds: number) { //return m\n    let d = velocity_in * seconds + .5 * acceleration * seconds * seconds;\n    return d;\n}\n\nexport function freefall_vf_from_viat(velocity_in: number, acceleration: number, seconds: number) { //return m/s\n    let vf = velocity_in + acceleration * seconds;\n    return vf;\n}\n\nexport function freefall_vf_from_viad(velocity_in: number, acceleration: number, distance: number) { //return m/s\n\n    let vf_sq = ((velocity_in + 1) / Math.abs(velocity_in + 1)) * (velocity_in * velocity_in) + 2 * acceleration * distance;\n    let vf = Math.sqrt(Math.abs(vf_sq));\n    //console.log('ff_vf_viad', velocity_in, acceleration, distance, vf_sq, vf);\n    if (vf_sq < 0) return -vf\n    else return vf\n}\n\nexport function freefall_t_from_vivfd(v_i: number, v_f: number, distance: number) { //return s\n    let t = 2 * distance / (v_i + v_f)\n    return Math.abs(t)\n}\n\nexport function freefall_j_from_mv(v: number, m_kg: number, ) { //return j \n    return .5 * m_kg * v * v\n}\n\nexport function v_from_mj (mass: number, joules: number) {\n    let velocity = Math.sqrt( 2 * joules / mass )\n    return velocity;\n}\n\nexport function kinetic_energy_mgdh (mass: number, delta_h: number) {\n    return mass * delta_h * GRAVITY;    \n}","import CoreEngine from \"./CoreEngine\";\nimport ProphetModule from \"./modules/Prophet\";\nimport GameTime from \"./modules/Gametime\";\nimport NavArea from \"./modules/NavArea\";\nimport Followers from \"./modules/Followers\";\nimport { MINUTE_MS } from \"./util\";\nimport Rocket from \"./modules/Rocket\";\nimport NameAndCode from \"./modules/NameAndCode\";\n\nexport default class Engine extends CoreEngine {\n    \n    processDelta = (delta: number) => {\n        this.rocket.processDelta(delta)\n        if (this.datamap.nacData.name === 'DEVC') {\n            delta = delta * 10;\n        }\n        //console.log('tick');\n        this.prophet.processDetla(delta)\n        \n        this.gameTime.processDelta(delta)\n            this.stopOffline();\n\n    }\n\n    \n\n    newprocessDelta = (delta: number) => {\n        delta = delta * 6;\n        //console.log('tick');\n        if (delta < MINUTE_MS ) { \n            this.prophet.processDetla(delta) \n            this.gameTime.processDelta(delta)\n        }\n        else {\n            let ticks = Math.floor(delta/MINUTE_MS);\n\n            \n            for (let i = 0; i < ticks; i++) {\n                this.prophet.processDetla(MINUTE_MS) \n                this.gameTime.processDelta(MINUTE_MS)\n            }\n            this.prophet.processDetla(delta%MINUTE_MS) \n            this.gameTime.processDelta(delta%MINUTE_MS)\n\n            this.stopOffline();\n        }\n    }\n    \n    startOffline (delta: number) {\n        this.datamap.offline = {happening: true,totaltime: delta}\n        this.notify();\n    }\n\n    stopOffline () {\n        this.datamap.offline.happening = false;\n    }\n\n    executeCommand = (command: string) => {\n        let commands = command.split(' ');\n        //console.log(`process ${command}, ${commands}`);\n\n        switch (commands[0]) {\n            case '1hr':\n                this.processDelta(60 * 60 * 1000);\n                break;\n\n            case 'prophet':\n                this.prophet.processCommands(commands)\n                break;\n\n            case 'gametime':\n                this.gameTime.processCommands(commands);\n                break;\n\n            case 'save':\n                this.save();\n                break;\n\n            case 'load':\n                this.load();\n                break;\n\n            case 'nav':\n                if (commands[1] === 'main') {\n                    this.nav.changeMainArea(commands[2])\n                } else if (commands[1] === 'sub') {\n                    this.nav.changeSubArea(commands[2])\n                }\n                break;\n\n            case 'followers':\n                this.followers.handle_followers_command(commands)\n                break;\n\n            case 'rocket':\n                this.rocket.handle_rocket_command(commands);\n                break;\n            case 'keypress':\n                this.handleKey(commands[1]);\n                break;\n\n            case 'nac':\n                this.nac.nacCommand(commands)\n                break;\n       \n            default:\n                console.log('...the dev made a mistake.')\n                break;\n\n        }\n\n        this.notify();\n    }\n\n    handleKey = (key: string) => {\n        switch (key) {\n            case 'p':\n                this.prophet.pray();\n                break;\n\n            case 'm':\n                for (let index = 0; index < 10; index++) {                    \n                    this.prophet.buyMaxRelic(index.toString())\n                }\n                break;\n\n            case 'r':\n                this.prophet.prestige();\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    load = () => {\n        this.quietLoad();\n        this.startOffline(Date.now()-this.datamap.last)\n        this.notify();\n    }\n\n    prophet = new ProphetModule(this);\n    gameTime = new GameTime(this);\n    nav = new NavArea(this);\n    followers = new Followers(this)\n    rocket = new Rocket(this);\n    nac = new NameAndCode(this);\n}\n\n","import * as React from 'react';\nimport { Datamap, newDefaultMap } from '../engine/Datamap';\n\ntype AppContextType = {\n  data: Datamap;\n  submitCommand: (str:string)=>void;\n}\n\n// Create a context wrapping some shared state\nlet AppContext = React.createContext<AppContextType>({\n  data: newDefaultMap(),\n  submitCommand: (str)=>{},\n});\n\nexport default AppContext;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './TipFC.scss'\nimport ReactDOM from 'react-dom';\n\nconst TipFC: React.FC<{ tip?: ReactNode }> = (props) => {\n  \n  return ( <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC'>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n)}\n\nexport class classTipFC extends React.Component<{ tip: ReactNode }, {top: string|number, bottom: string|number}>{\n\n  constructor(props: Readonly<{ tip: React.ReactNode; }>) {\n    super(props)\n    this.state = {\n      top: \"\",\n      bottom: \"\"\n    }\n  }\n\n  static contextType = AppContext;\n\n  componentDidMount () {\n    this.setTB();\n  }\n  \n\n  componentDidUpdate() {\n    this.setTB();\n  }\n\n  setTB= ()=>{\n\n    let height = window.innerHeight;\n\n    let top: number | string = \"\"\n    let bottom: number | string = \"\"\n\n    let myDom = ReactDOM.findDOMNode(this);\n\n    if (myDom) {\n\n\n      let parent = ((ReactDOM.findDOMNode(this) as Element).parentElement as Element)\n\n      if (parent) {\n\n        parent = parent as Element;\n        let parentBounds = parent.getBoundingClientRect()\n\n        /*\n        if (parentBounds.right > width / 2) {\n          right = width - parentBounds.right;\n          left = \"\"\n        } else {\n          right = \"\"\n          left = parentBounds.left\n        }*/\n\n        if (parentBounds.bottom > height / 2) {\n          bottom = height - parentBounds.top;\n          top = \"\"\n        } else {\n          bottom = \"\";\n          top = parentBounds.bottom;\n        }\n\n        this.setState({top, bottom});\n      }\n    }\n\n  }\n\n  render() {\n    let props = this.props;\n\n    //let width = window.innerWidth;\n\n    //let left: number | string = \"\"\n    //let right: number | string = \"\"\n    \n\n    \n\n    return (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC' style={{top:this.state.top, bottom:this.state.bottom}}>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default TipFC;\n\n","import React, { ReactNode } from 'react';\nimport TipFC from './TipFC';\n\nexport interface ProgressProps {\n    value: number;\n    max: number;\n    color?: string;\n    background?: string;\n    label: string | ReactNode; \n    textColor?: string\n    tip?: ReactNode;\n}\n\n   \nconst ProgressFC: React.FC<ProgressProps> = (props) => {\n    let trueValue = Math.min(props.value, props.max)\n    let widthpercent = (trueValue * 100 / (props.max)).toString() + \"%\";\n    if (widthpercent === 'NaN%') widthpercent = '0%';\n    const [off, setOff] = React.useState(false);\n    if (off) widthpercent = '100%'\n\n    return (\n        <div className='ProgressFC' style={{backgroundSize:widthpercent}}>\n            <div className='InnerProgress' style={{width:widthpercent}} onClick={()=>setOff(!off)}>\n                <span style={{whiteSpace:'nowrap'}}>\n                    {props.label} \n                </span>\n            </div>\n            <TipFC tip={<div>{`${props.value}/${props.max}`}{props.tip}</div>} />\n        </div>\n    )\n}\n\n\nexport default ProgressFC;","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport ProgressFC from \"./comps/ProgressFC\";\nimport GameTime from \"../engine/modules/Gametime\";\n\nconst BottomBar: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='UIRow GameTimeRow'>\n            <div style={{display:'flex', width:'100%'}}>\n                <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.msprogress} max={GameTime.requiredMS} label={`Time - ${msToHM(data.gameTime.msprogress)}`} />\n                </div>\n                <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.day} max={GameTime.maxDays} label={`Day - ${data.gameTime.day}`} />\n            </div>\n            <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.month} max={GameTime.maxMonths} label={`Month - ${data.gameTime.month} ${MONTHS[data.gameTime.month - 1]}`} />\n            </div>\n            <div>\n                {`Year - ${data.gameTime.year}`}\n            </div>\n            </div>\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default BottomBar;\n\nfunction msToHM (msTime: number) {\n    \n    let hour = Math.floor(msTime/1000).toString();\n    if (hour.length === 1) hour = '0' + hour;\n\n    let minute = Math.floor((msTime%1000)/1000 * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n    \n    return `${hour}:${minute}`\n}\n\nconst MONTHS = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n]","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\n   \nconst CommandButtonFC: React.FC<DecoupledCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false} hidden={props.hidden?props.hidden(data):false} onClick={()=>{submitCommand(props.command)}}>\n            <div className='innerCommandRow'>\n            <span>{props.name}</span> \n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n      )}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButtonFC;\n","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport { formatNumber } from \"../engine/util\";\nimport { prophet_maxHolyPower } from \"../engine/modules/Prophet\";\n\nconst ProphetUI: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='ProphetUI'>\n\n            <div className='PietyDiv'>\n                \n\n                    {`Piety: ${formatNumber(data.prophetData.piety)}`}<br/>\n            </div>\n\n            <div hidden={data.prophetData.congregation.USD === 0} className='USDDiv'>\n            {`$${formatNumber(data.prophetData.congregation.USD)}`}<br/>\n            </div>\n\n            <div hidden={data.prophetData.congregation.unlocked === false} className='DevotionDiv'>\n                {`Devotion ${formatNumber(data.prophetData.devotion)} `}\n            </div>\n\n            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                    {`Holiness: ${formatNumber(data.prophetData.holiness)}`}\n            </div>\n\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default ProphetUI;\n\n","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './NavBar.scss';\nimport CommandButtonFC from './CommandButtonFC';\n\nconst NavBar: React.FC<{tip?: ReactNode}> = (props) => (\n  <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n        <div className={`NavBar selected${data.nav.mainArea+1}`}>\n          <CommandButtonFC name='Relics' command='nav main 0' />\n          <CommandButtonFC name='Reset' command='nav main 1' hidden={(datamap)=>{return datamap.prophetData.prestigeUnlocked === false && data.prophetData.holiness === 0}}/>\n          <CommandButtonFC name='Followers' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n          <CommandButtonFC name='Miracles' command='nav main 4' />\n        </div>\n      )}\n    </AppContext.Consumer>\n)\n\nexport default NavBar;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport CommandButtonFC from './CommandButtonFC';\n\nexport interface CCBProps {\n  command: DecoupledCommand;\n  warning: ReactNode\n}\n\nexport default class ConfirmCommandButton extends React.Component<CCBProps, {open:boolean}>{ \n\n  constructor(props:CCBProps) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  static contextType = AppContext;\n\n  fakeBuy = (ev: React.MouseEvent) => {\n    if (ev.shiftKey) {\n      this.context.submitCommand(this.props.command.command)\n    } else this.setState({open:!this.state.open})\n    \n  }\n\n  render () {\n    let data = this.context.data;\n\n    return (<div>\n        <div className='FakeButton' hidden={this.props.command.hidden?this.props.command.hidden(data):false}>\n        <button className='DCommandFC' disabled={this.props.command.able?!this.props.command.able(data):false} onClick={this.fakeBuy}>\n            <div className='innerCommandRow'>\n              <span>{this.props.command.name}</span> \n            <img hidden={this.props.command.img === undefined} src={this.props.command.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={this.props.command.tip} />\n        </button>\n        </div>\n        <div className='WarningBox' hidden={!this.state.open}>\n            <div className='WarningOverlay' onClick={this.fakeBuy}>\n              <div className='WarningPopup'>\n                {this.props.warning}\n                <div className='flexrow spacebetween'>\n                <CommandButtonFC {...this.props.command}/>\n                <button className='PlainD' onClick={this.fakeBuy}>\n                  cancel\n                </button>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>)\n  }\n}\n\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand2 } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport { percentOf } from '../../engine/util';\n   \nconst CommandButton2: React.FC<DecoupledCommand2> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n        let command = props.command(data);\n        let name = props.name(data);\n        let change = props.change?props.change(data):undefined;\n        let cost;\n        if (props.cost) {\n          cost = props.cost(data)\n        }\n\n        return (\n          <div hidden={props.hidden?props.hidden(data):false}>\n\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false}  onClick={()=>{submitCommand(command)}}>\n            <div className='innerCommandRow'>\n              <div className='flexcolumn'>\n            <span>{name}</span>\n            <span>{change}</span> \n      {cost&&<span>{cost} <span>{props.costName}</span> {props.resource&&<span>({percentOf(cost, props.resource)})</span>}</span>}\n            </div>\n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n          </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButton2;\n","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\nimport CommandButtonFC from \"./CommandButtonFC\";\n\nimport { prophet_prestige_gain, next_holiness_mult, holiness_mult, reincation_mult, CMD_prophet_devotedPrestige, devotedPrestige_cost, Building_Multi } from \"../../engine/modules/Prophet\";\n\nimport { holiness_holyPumpUpgrade_command, holiness_holyPumpUpgradeCost, holiness_maxHolyPowerUpgrade_command, holiness_maxHolyPowerUpgradeCost, holiness_holypower1, holiness_holyPowerUpgradeCost as holiness_holyPowerEffectivenessUpgradeCost, holiness_buildingMulti_command, holiness_buildingMultiCost, holiness_believerRetention_command, holiness_believerRetentionCost, holiness_exRelations_command, holiness_exRelationsCost } from \"../../engine/modules/PietyPurchases\";\nimport ConfirmCommandButton from \"./ConfirmCommandButton\";\nimport { formatNumber } from \"../../engine/util\";\nimport { availableDivinity, getDivinity, DivinityPurchase, divinityPurcase_getCost, dp_able, DP_Upgrades } from \"../../engine/modules/Followers\";\nimport CommandButton2 from \"./CommandButton2\";\n\nconst ResetUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className='HolinessUI'>\n                <div className='HeaderText'>Commands</div>\n                <div className='flexrow'>\n                    <ConfirmCommandButton\n                        command={{\n                            command: 'prophet prestige',\n                            name: `Reincarnate (+${prophet_prestige_gain(data).toExponential(2)} holiness)`,\n                            hidden: (datamap) => { return datamap.prophetData.prestigeUnlocked === false },\n                            tip: (<div>\n                                <div>\n                                    Holiness Mult After: x{next_holiness_mult(data).toFixed(1)}\n                                </div>\n                                <div className='PietyDiv'>\n                                    From max Piety this life: {data.prophetData.maxPiety.toExponential(2)}\n                                </div>\n                                <div>\n                                    Net from reincarnation {(prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness).toExponential(2)}\n                                </div>\n                            </div>)\n                        }}\n                        warning={<div>\n                            {`You will lose everything except things on this screen!`}\n                        </div>}\n\n                    />\n                    <div className='ParitionerButton'>\n\n                        <ConfirmCommandButton\n                            command={{\n                                ...CMD_prophet_devotedPrestige,\n                                tip: (<div>\n                                    <div>\n                                        Cost: {formatNumber(devotedPrestige_cost(data))} Devotion\n                                    </div>\n                                    <div>\n                                        Lose: Everything except divinity upgrades and increased reincarnation multiplier. <br />\n                                        Get: 100% increased reincarnation multiplier, +1 Divinity\n                                    </div>\n                                    <div>\n                                        x{data.followers.devotedPrestige + 1} -> x{data.followers.devotedPrestige + 2}\n                                    </div>\n                                </div>)\n                            }}\n                            warning={<div>\n                                {`You will lose everything except your devoted prestige level!`}\n                            </div>}\n                        />\n                    </div>\n                </div>\n\n                <div className='HeaderText'>Info</div>\n                <div>\n                    {`Holiness spent this life ${data.prophetData.startingHoliness - data.prophetData.holiness}`}\n                    </div><div>\n                    {`Net Holiness after reset ${(prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness).toExponential(2)}`}\n                </div>\n                <div className='HolinessDiv'>\n                    {`Holiness Mult: x${holiness_mult(data).toFixed(1)}`}\n                </div>\n                <div>\n                    {`Reincarnation Mult: x${reincation_mult(data).toFixed(1)}`}\n                </div>\n                <div className='HeaderText'>Holiness Upgrades</div>\n                <CommandButton2 \n                    name={()=>holiness_holyPumpUpgrade_command.name}\n                    command={()=>holiness_holyPumpUpgrade_command.command}\n                    hidden={holiness_holyPumpUpgrade_command.hidden}\n                    able={holiness_holyPumpUpgrade_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.holyPumpUpgrade}`}\n                    cost={holiness_holyPumpUpgradeCost}\n                    resource={data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Double Holy Power gain from Prayer<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_maxHolyPowerUpgrade_command.name}\n                    command={()=>holiness_maxHolyPowerUpgrade_command.command}\n                    hidden={holiness_maxHolyPowerUpgrade_command.hidden}\n                    able={holiness_maxHolyPowerUpgrade_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.maxHolyPowerUpgrade}`}\n                    cost={holiness_maxHolyPowerUpgradeCost}\n                    resource={data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Double maximum Holy Power<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_holypower1.name}\n                    command={()=>holiness_holypower1.command}\n                    hidden={holiness_holypower1.hidden}\n                    able={holiness_holypower1.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.holypowerUpgrade}`}\n                    cost={holiness_holyPowerEffectivenessUpgradeCost}\n                    resource={data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Increase the effectiveness of Holy Power<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_buildingMulti_command.name}\n                    command={()=>holiness_buildingMulti_command.command}\n                    able={holiness_buildingMulti_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.buildingMulti}`}\n                    hidden={holiness_buildingMulti_command.hidden}\n                    cost={holiness_buildingMultiCost}\n                    resource={data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        +0.1 \"Relic Production Per 25 Relics\" Multiplier<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_believerRetention_command.name}\n                    command={()=>holiness_believerRetention_command.command}\n                    able={holiness_believerRetention_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.believerRetention}`}\n                    cost={holiness_believerRetentionCost}\n                    hidden={holiness_believerRetention_command.hidden}\n                    resource={data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Halve the believers who leave each day.<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_exRelations_command.name}\n                    command={()=>holiness_exRelations_command.command}\n                    hidden={holiness_exRelations_command.hidden}\n                    able={holiness_exRelations_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.exRelations}`}\n                    cost={holiness_exRelationsCost}\n                    resource={data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Make the influence of ex members less effective.<br />\n                    </div>}\n                />\n                <div hidden={getDivinity(data) === 0}>\n                <div className='HeaderText'>Divinity Upgrades</div>\n\n                    <div>Available divinity: {availableDivinity(data)}</div>\n                    <div className='flexrow DivinityButtonWrapper flexwrap'>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_beliverGain}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_fasterRelicProduction}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_superHolyPump}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_heavyHolyPower}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_monthMultiplier}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_yearMultiplier}/>\n                    </div>\n\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default ResetUI;\n\n\n\n\nconst DPUpgradeComp: React.FC<{ dp: DivinityPurchase }> = (props) => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <CommandButtonFC {...props.dp.command}\n                able={(datamap)=>{return dp_able(datamap, props.dp)}}\n                tip={<div>\n                    Cost: {divinityPurcase_getCost(data, props.dp)}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n        )}\n    </AppContext.Consumer>\n)\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { Paritioners, paritioner_able, paritioner_maxBuyAmount, paritioner_cost, paritioner_maxBuyCost, paritioner_buyHalfMax_amount, paritioner_buyHalfMax_cost, proudBeliever_believer_gain } from '../../engine/modules/Followers';\n\n\nconst ParitionerBox: React.FC<{ paritionerIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.paritionerIndex > 0 && data.prophetData.congregation.paritioners[props.paritionerIndex - 1] === 0} className='ParitionerBox'>\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n          <div>\n            <span>\n           {Paritioners[props.paritionerIndex].name}\n            </span>\n            <div>\n            Count: {data.prophetData.congregation.paritioners[props.paritionerIndex]}\n          </div>\n          </div>\n          <div className='flexrow spacebetween'>\n\n          <CommandButtonFC\n            name={`Recruit`}\n            command={`followers recruitparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_able(datamap, props.paritionerIndex) }}\n            />\n            <CommandButtonFC\n              name={`Recruit 50% (${paritioner_buyHalfMax_amount(props.paritionerIndex, data)})`}\n              command={`followers recruithalfmaxparitioner ${props.paritionerIndex}`}\n              able={(datamap) => { return paritioner_buyHalfMax_amount(props.paritionerIndex, datamap) > 0 }}\n              tip={(<div>\n                Cost: {paritioner_buyHalfMax_cost(props.paritionerIndex, data).toExponential(3)}\n              </div>)}\n            />\n          <CommandButtonFC\n            name={`Recruit max (${paritioner_maxBuyAmount(props.paritionerIndex, data)})`}\n            command={`followers recruitmaxparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_maxBuyAmount(props.paritionerIndex, datamap) > 0 }}\n            tip={(<div>\n              Cost: {paritioner_maxBuyCost(props.paritionerIndex, data).toExponential(3)}\n            </div>)}\n          />\n              </div>\n\n              <div className='flexrow spacebetween'>\n                \n\n          \n          <div >\n            Cost: {paritioner_cost(data, props.paritionerIndex).toExponential(3)} Devotion\n          </div>\n              </div>\n\n              <div>\n                <ParitionerDetailts index={props.paritionerIndex} />\n              </div>\n\n          \n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default ParitionerBox;\n\nexport const ParitionerDetailts: React.FC<{ index: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div>\n        {(props.index === 0) && `Bringing in ${proudBeliever_believer_gain(data)} other believers a day`}\n        {(props.index === 1) && `Tithing ${data.prophetData.congregation.paritioners[props.index]} USD a day`}\n        {(props.index === 2) && `Asking ${data.prophetData.congregation.paritioners[props.index]} questions a day`}\n        {(props.index === 3) && `Providing ${data.prophetData.congregation.paritioners[props.index]} credibility a day `}\n        {(props.index === 4) && `Taking ${data.prophetData.congregation.paritioners[props.index]} crediblity a day`}\n        {(props.index === 5) && `Fix ${data.prophetData.congregation.paritioners[props.index]} a day`}\n      </div>\n    )}\n  </AppContext.Consumer>\n)","import AppContext from \"../context/context\";\n\nimport { helper_prophet_maxBelieversDecay, CMD_prophet_proselytize, helper_prophet_maxBeliverGain, helper_prophet_exBeliever_harm, helper_prophet_maxBeliverGainNet, preachers_max_deovtion_gain, devotee_devotion_gain, doorknocker_beliver_gain, helper_prophet_exBeliever_believerDecay, helper_prophet_size_believerDecay, availablePeople } from \"../engine/modules/Prophet\";\n\nimport TipFC from \"./comps/TipFC\";\n\nimport { devotion_mult, upgrade_preacher_cmd, preacher_upgrade_cost, recruit_preacher_cmd, preacher_cost, upgrade_devotee_cmd, devotee_upgrade_cost, recruit_devotee_cmd, devotee_cost, upgrade_doorknocker_cmd, doorknocker_upgrade_cost, recruit_doorknocker_cmd, doorknocker_cost, proudBeliever_believer_gain, UnlockAdornments, UnlockAdornments_cost } from \"../engine/modules/Followers\";\n\nimport CommandButtonFC from \"./comps/CommandButtonFC\";\n\nimport ParitionerBox from \"./comps/ParitionerBox\";\nimport React from \"react\";\nimport { formatNumber, WORLD_POP } from \"../engine/util\";\n\nconst FollowersUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div>\n\n\n\n                <div>\n\n                    <div>\n                        <span className='HeaderText'>Congregation Info</span>\n                    </div>\n                    <div>\n                        {`Believers: ${data.prophetData.believers}`}<br />\n                    </div>\n                    <div>\n                        {`Daily Believer Gain: ${doorknocker_beliver_gain(data) + proudBeliever_believer_gain(data)}`}\n                    </div>\n                    <div>\n                        {`Max Daily Believer Loss: ${helper_prophet_maxBelieversDecay(data)}`}<br />\n                        <TipFC tip={<div>It feels like people stop believing every day!<br />Both total followers and total ex followers are influences.<br/>\n                        Loss From Ex Followers: {helper_prophet_exBeliever_believerDecay(data)}<br/>\n                        Loss From Congregation Size: {helper_prophet_size_believerDecay(data)}<br/>\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Former Belivers: ${data.prophetData.ex_believers}`}<br />\n                        <TipFC tip={<div>Pesky ex-believers influence people to not believe!<br/>\n                            {`Removes ${helper_prophet_exBeliever_harm(data)} from possible gains`}<br/>\n                            {`Makes up to ${helper_prophet_exBeliever_believerDecay(data)} believers leave each day`}<br/>\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Possible Converts ${availablePeople(data)}`}\n                        <TipFC tip={<div>\n                            {`World Pop - ExBelievers - Believers`}<br/>\n                            {`${WORLD_POP} - ${data.prophetData.ex_believers} - ${data.prophetData.believers}`}<br/>\n                        </div>}/>\n                    </div>\n                    <div>\n                        {`Devotion Mult to Piety: x${devotion_mult(data).toFixed(1)}`}\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className='HeaderText'>Commands</div>\n                    <div className='flexrow'>\n                        <div className='HolinessButtonWrapper'>\n\n                            <CommandButtonFC {...CMD_prophet_proselytize}\n                                tip={<div>\n                                    Spend Holiness to make people believe<br />\n                                    {`Proselytize Beliver Gain: (${helper_prophet_maxBeliverGain(data)}-${helper_prophet_exBeliever_harm(data)})=${helper_prophet_maxBeliverGainNet(data)}`}<br />\n                                    (How many believers your piety attracts) - (How many believers your ex-believers detract)\n                            </div>}\n                            />\n                        </div>\n\n                        <div className='DevotionButtonWrapper'>\n\n                        <CommandButtonFC {...UnlockAdornments}\n                            tip={<div>\n                                <div>\n                                    Unlock Adornments that aren't lost through reincarnation\n                                </div>\n                                <div>\n                                    Cost: {formatNumber( UnlockAdornments_cost(data) )}\n                                </div>\n                            </div>}\n                        />\n                        </div>\n\n                    </div>\n                </div>\n\n                <div>\n\n                    <span className='HeaderText'>Use your Holiness to convert basic believers into Clergy</span>\n\n                    <div className='FollowerBox'>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.preachers} Preachers - Level {data.prophetData.congregation.preacherLevel}<br />\n                                    <span hidden={data.prophetData.congregation.preachers >= data.prophetData.congregation.old.preachers\n                                        && data.prophetData.congregation.preacherLevel >= data.prophetData.congregation.old.preacherLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.preachers} Preachers - Level {data.prophetData.congregation.old.preacherLevel}\n                                        <CommandButtonFC\n                                            command='followers recruit preachermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Up to ${preachers_max_deovtion_gain(data)} devotion per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_preacher_cmd} />\n                                    <span>\n                                        {`Cost: ${preacher_upgrade_cost(data)} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_preacher_cmd} />\n                                <span>\n                                    {`Cost: ${preacher_cost(data)} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.devotee} Devotees - Level {data.prophetData.congregation.devoteeLevel}<br />\n                                    <span hidden={data.prophetData.congregation.devotee >= data.prophetData.congregation.old.devotee\n                                        && data.prophetData.congregation.devoteeLevel >= data.prophetData.congregation.old.devoteeLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.devotee} Devotees - Level {data.prophetData.congregation.old.devoteeLevel}\n                                        <CommandButtonFC\n                                            command='followers recruit devoteemax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n                                </div>\n                                <div>\n                                    {`${devotee_devotion_gain(data)} devotion per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_devotee_cmd} />\n                                    <span>\n                                        {`Cost: ${devotee_upgrade_cost(data)} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_devotee_cmd} />\n                                <span>\n                                    {`Cost: ${devotee_cost(data)} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.doorknocker} Recruiters - Level {data.prophetData.congregation.doorknockerLevel}<br />\n                                    <span hidden={data.prophetData.congregation.doorknocker >= data.prophetData.congregation.old.doorknocker\n                                        && data.prophetData.congregation.doorknockerLevel >= data.prophetData.congregation.old.doorknockerLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.doorknocker} Recruiters - Level {data.prophetData.congregation.old.doorknockerLevel}\n                                        <CommandButtonFC\n                                            command='followers recruit doorknockermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Recruiting ${doorknocker_beliver_gain(data)} belivers per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_doorknocker_cmd} />\n                                    <span>\n                                        {`Cost: ${doorknocker_upgrade_cost(data)} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_doorknocker_cmd} />\n                                <span>\n                                    {`Cost: ${doorknocker_cost(data)} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                </div>\n\n                <div>\n\n\n                    <span className='HeaderText'>Use your Devotion to create exceptional Believers.</span>\n\n                    <div className='FollowerBox'>\n                        <ParitionerBox paritionerIndex={0} />\n                        <ParitionerBox paritionerIndex={1} />\n                        <ParitionerBox paritionerIndex={2} />\n                        <ParitionerBox paritionerIndex={3} />\n                        <ParitionerBox paritionerIndex={4} />\n                        <ParitionerBox paritionerIndex={5} />\n                    </div>\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default FollowersUI;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\nconst AdornmentUI: React.FC = () => (\n    <AppContext.Consumer>\n        {() => (\n            <div>\n                AdornmentUI <br/>\n                Not made yet! Sorry! D:\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default AdornmentUI;\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport './CommandButtonFC.scss'\nimport { msToFullHMS } from '../../engine/util';\n\n\nexport default class OfflineOverlay extends React.Component { \n\n  static contextType = AppContext;\n\n  fakeBuy () {\n\n  }\n\n  render () {\n    let data = this.context.data;\n\n    return (\n\n        <div className='WarningBox' hidden={data.offline.happening === false}>\n            <div className='WarningOverlay'>\n              <div className='WarningPopup'>\n                Offline Progress<br/>\n                HH:MM:SS<br/>\n                {msToFullHMS(data.offline.totaltime)}<br/>\n                Relic gain is calculated all at once, then days pass.\n              </div>\n            </div>\n        </div>\n    )\n  }\n}\n\n\n","import AppContext from \"../../context/context\";\nimport React from \"react\";\n   \nconst StatFC: React.FC<{name: string, value: number, units: string, estimate? :number}> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n\n\n        return (\n            <div className='flexrow spacebetween'>\n            <span>{props.name}</span>\n            <div className='flexcolumn flexgrow'>\n\n            <span className='flexrow flexend'>\n                <span>\n                    {`${props.value.toFixed(2)}`}\n                </span>\n                <span style={{textAlign:'right'}}>\n                    {`${props.units}`}\n                    </span>\n            </span>\n            {props.estimate !== undefined && \n            <span className='flexrow flexend'>\n                <span>\n                    {`${props.estimate.toFixed(2)}`}\n                </span>\n                <span style={{textAlign:'right'}}>\n                    {`${props.units}`}\n                </span>\n            </span>}\n            </div>\n            </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default StatFC;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\n\n\nimport CommandButton2 from \"./CommandButton2\";\nimport { cmd_ballheightplus, cmd_dropball, cmd_ballmassplus, cmd_throwball, cmd_ballvelocityplus, cmd_bouncyball, cmd_ballbouncesplus } from \"../../engine/modules/Rocket\";\nimport StatFC from \"./StatFC\";\n\nconst RocketUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='flexcolumn'>\n                <span className='HeaderText'>\n                    Rocket\n                </span>\n                <span className='HeaderText'>\n                    This is all WIP! Will be used later but you can ignore for now.\n                </span>\n                {`Joules: ${data.rocketData.joules}`}\n                <span></span>\n                <div className='flexrow'>\n                    <CommandButton2 {...cmd_ballmassplus} />\n                    <CommandButton2 {...cmd_ballheightplus} />\n                    <CommandButton2 {...cmd_dropball} />\n                    <CommandButton2 {...cmd_ballvelocityplus} />\n                    <CommandButton2 {...cmd_throwball} />\n                    <CommandButton2 {...cmd_ballbouncesplus} />\n                    <CommandButton2 {...cmd_bouncyball} />\n                </div>\n                <span className='HeaderText'>Dropped Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Mass' value={data.rocketData.ball.mass} units='kg' />\n                        <StatFC name='Starting Height' value={data.rocketData.ball.height} units='m' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.ball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.ball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.ball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.ball.sim.mass} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.ball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.ball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.ball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.ball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n                <span className='HeaderText'>Thrown Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Starting Velocity' value={data.rocketData.thrown_ball.initial_velocity} units='m/s' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.thrown_ball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.thrown_ball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.thrown_ball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.thrown_ball.sim.mass} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.thrown_ball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.thrown_ball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.thrown_ball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.thrown_ball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n                <span className='HeaderText'>Bouncy Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Bounces' value={data.rocketData.bouncyball.bounces_upgrades+1} units='m/s' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.bouncyball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.bouncyball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.bouncyball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.bouncyball.sim.mass} units='kg' />\n                        <StatFC name='Bounces' value={data.rocketData.bouncyball.sim.bounces} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.bouncyball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.bouncyball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.bouncyball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.bouncyball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default RocketUI;\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi, relic_maxBuyCost } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDPurchases';\nimport { formatNumber } from '../../engine/util';\n\n\nconst RelicTip: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      \n                <div>\n                  <div>\n                    Time: {RELICS[props.relicIndex].initialTime}\n                  </div>\n                  <div className='PietyDiv'>\n                    Production: {RELICS[props.relicIndex].initialRevenue}\n                  </div>\n                  <div>\n                    Multi: {formatNumber( relic_getProductionMulti(props.relicIndex, data))}\n                  </div>\n                  <div>\n                  {`x${Building_Multi(data, props.relicIndex)} production per 25 relics`} \n                  </div>\n                  \n                </div>\n              \n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicTip;","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi, relic_maxBuyCost } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDPurchases';\nimport RelicTip from './RelicTip';\n\n\nconst RelicBox: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.relicIndex > 0 && data.prophetData.relics[props.relicIndex - 1] === 0} className='RelicBox'>\n        <ProgressFC background={'yellow'} color='green' value={data.prophetData.relicTimers[props.relicIndex]} max={relic_getTime(props.relicIndex)} \n          label={`${RELICS[props.relicIndex].name} x${data.prophetData.relics[props.relicIndex]}`}\n          />\n        <div className='relicboxrow'>\n\n          <div hidden={data.prophetData.relicsetbuy !== 1}>\n\n            <CommandButtonFC name={`Make`} command={`prophet buyrelic ${props.relicIndex}`} able={(datamap) => { return relic_canBuy(props.relicIndex, datamap) }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n            />\n          </div>\n            \n          <div hidden={data.prophetData.relicsetbuy !== 99}>\n            <CommandButtonFC name={`Make Max (${relic_maxBuyAmount(props.relicIndex, data)})`} command={`prophet buymaxrelic ${props.relicIndex}`} \n              able={(datamap) => { return relic_maxBuyAmount(props.relicIndex, data) > 0 }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n             />\n          </div>\n            \n          <div hidden={data.prophetData.relicsetbuy !== 25}>\n\n            <CommandButtonFC name={`Make to 25x`} command={`prophet buyto25relic ${props.relicIndex}`} able={(datamap) => { return relic_canBuyNext(props.relicIndex, data, 25) }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n            />\n            </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 1}>\n            Cost: {relic_getCost(props.relicIndex, data).toExponential(2)}\n            </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 99}>\n            Cost: {relic_maxBuyCost(props.relicIndex, data).toExponential(2)}\n          </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 25}>\n            Cost: {relic_buyNextCost(props.relicIndex, data,25).toExponential(2)}\n          </div>\n            <div className='USDCommand' hidden={data.prophetData.congregation.paritioners[1] === 0}>\n              <CommandButtonFC\n                name={`Upgrade`}\n                command={`prophet relicupgrade ${props.relicIndex}`}\n                hidden={(datamap) => { return datamap.prophetData.congregation.paritioners[1] === 0 }}\n                able={(datamap) => { return relicUSDupgrade_able(datamap, props.relicIndex) }}\n                tip={<div>\n                  Level: {data.prophetData.relicUSDUpgrades[props.relicIndex]}<br />\n                  <div className='USDDiv'>\n                    Cost: {relicUSDupgrade_cost(data, props.relicIndex)} USD\n              </div>\n                  +0.1 to production mult per 25 relics<br />\n                {`x${Building_Multi(data, props.relicIndex)} production per 25 relics`}\n\n                </div>}\n              />\n            </div>\n\n\n          \n          \n\n          <div className='PietyDiv'>\n            <div>\n              Total P/S: {relic_getProductionPerecond(props.relicIndex, data).toExponential(2)}\n            </div>\n            <TipFC tip={<div>\n              Total Production: {relic_getProduction(props.relicIndex, data).toExponential(2)}\n            </div>} />\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicBox;","import AppContext from \"../../context/context\"\n\nimport CommandButtonFC from \"./CommandButtonFC\"\n\nimport { CMD_prophet_pray, prophet_maxHolyPower, relic_hoylPowerMulti, holiness_mult, reincation_mult, special_relic_mult, time_relic_mult, reincation_mult_from_superPrestiges } from \"../../engine/modules/Prophet\"\n\nimport { piety_purchase_hide_holypower, piety_purchase_canBuy_holypower, holyPowerCost, piety_purchase_hide_reincarnation, piety_purchase_canBuy_reincarnation, reincarnationCost, piety_purchase_hide_congregation, piety_purchase_canBuy_congregation, congregationCost } from \"../../engine/modules/PietyPurchases\"\n\nimport RelicBox from \"./RelicBox\"\n\nimport ProgressFC from \"./ProgressFC\"\n\nimport { devotion_mult } from \"../../engine/modules/Followers\"\n\nimport TipFC from \"./TipFC\"\nimport React from \"react\"\nimport StatFC from \"./StatFC\"\n\nconst RelicUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => {return(\n            <div className='RelicUI'>\n\n                <div className='flexrow'>\n\n                    <div className='flexcolumn flexgrow'>\n\n                        <div className='HeaderText'>Commands</div>\n\n                        <div className='ProphetCommands'>\n                            <CommandButtonFC {...CMD_prophet_pray} tip={<div>Pray to increase your piety.</div>} />\n\n                            <CommandButtonFC name='Empowering Prayer' command='prophet holypower'\n                                hidden={piety_purchase_hide_holypower}\n                                able={piety_purchase_canBuy_holypower}\n                                tip={<div className='PietyDiv'>Cost: {holyPowerCost}</div>}\n                            />\n                            <CommandButtonFC name='Blessing of Reincarnation' command='prophet reincarnate'\n                                hidden={piety_purchase_hide_reincarnation}\n                                able={piety_purchase_canBuy_reincarnation}\n                                tip={<div className='PietyDiv'>Cost: {reincarnationCost}</div>}\n                            />\n                            <CommandButtonFC name='Create Congregation!' command='prophet congregate'\n                                hidden={piety_purchase_hide_congregation}\n                                able={piety_purchase_canBuy_congregation}\n                                tip={<div className='PietyDiv'>Cost: {congregationCost}</div>}\n                            />\n                        </div>\n\n                        <div className='flexrow spacebetween'>\n                        <div className='HeaderText'>Relics</div>\n                        <div className='flexrow'>\n\n                        Make:\n                        <div>\n                                <CommandButtonFC\n                                    name='1'\n                                    command='prophet setbuyrelic 1'\n                                    />\n                        </div>\n                                <CommandButtonFC\n                                    name='x25'\n                                    command='prophet setbuyrelic 25'\n                                />\n                                <CommandButtonFC\n                                    name='Max'\n                                    command='prophet setbuyrelic max'\n                                    />\n                        </div>\n                                    </div>\n\n                        <div className='flexrow'>\n\n                        <div className='flexcolumn flexequal flexgrow'>\n\n                            <RelicBox relicIndex={0} />\n                            <RelicBox relicIndex={1} />\n                            <RelicBox relicIndex={2} />\n                            <RelicBox relicIndex={3} />\n                            <RelicBox relicIndex={4} />\n                        </div>\n                        {(data.prophetData.relics[4] != 0)&&\n                        <div className='flexcolumn flexequal flexgrow'>\n                            <RelicBox relicIndex={5} />\n                            <RelicBox relicIndex={6} />\n                            <RelicBox relicIndex={7} />\n                            <RelicBox relicIndex={8} />\n                            <RelicBox relicIndex={9} />\n                        </div>}\n                        </div>\n\n                    </div>\n\n                    <div className='flexcolumn'>\n                        <div className='HeaderText'>Relic Production Multipliers</div>\n                        <div className='multbox'>\n                            <div hidden={data.prophetData.holyPowerUnlocked === false} >\n\n                                <div hidden={data.prophetData.holyPowerUnlocked === false} className='HolyPowerWrapper'>\n                                    <ProgressFC max={prophet_maxHolyPower(data)}\n                                        label={<div className='flexrow spacebetween'>\n                                            <div>\n                                            {`Holy Power (${Math.floor(100 * data.prophetData.holyPower / prophet_maxHolyPower(data))}%) `} \n                                            </div>\n                                            <div>\n                                            {` x${relic_hoylPowerMulti(data)}`}\n                                            </div>\n                                        </div>}\n                                        value={data.prophetData.holyPower}\n                                        tip={<div>\n                                            Make more relics to increase your max Holy Power!\n                                        </div>}\n                                    />\n                                </div>\n                            </div>\n                            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                                <StatFC value={holiness_mult(data)} units=\"x\" name='Holiness' />\n                            </div>\n                            <div hidden={data.prophetData.devotion === 0} className='DevotionDiv'>\n                                <StatFC value={devotion_mult(data)} units=\"x\" name='Devotion' />\n                            </div>\n                            <div hidden={data.prophetData.save.reincarnationCount === 0}>\n                                <StatFC value={reincation_mult(data)} units=\"x\" name='Reincarnation'/>\n                                {data.followers.devotedPrestige > 0 && <TipFC tip={<div>\n                                    {`x${reincation_mult_from_superPrestiges(data)} from Divine Reincarnations`}\n                                </div>} />}\n                            </div>\n                            \n                            <div hidden={special_relic_mult(0, data) === 1}>\n                            <StatFC value={special_relic_mult(0,data)} units=\"x\" name='Special Mult'/>                \n                                <TipFC tip={<div>\n\n                                    <div>\n                                        {`Base: x1`}\n                                    </div>\n                                    <div hidden={data.followers.DPUpgrades.monthMultiplier + data.followers.DPUpgrades.yearMultiplier === 0}>\n                                        {`Time Based Mult: +x${time_relic_mult(data).toFixed(1)}`}\n                                    </div>\n                                </div>}\n                                />\n                            </div>\n                        </div>\n                        <div className='HeaderText'>\n                            Info\n                        </div>\n                        \n\n                    </div>\n\n                </div>\n\n\n\n\n\n            </div>\n        )}}\n    </AppContext.Consumer>\n)\n\n\nexport default RelicUI;","import React, { FormEvent } from 'react';\nimport Engine from '../engine/Engine';\nimport AppContext from '../context/context';\nimport { Datamap } from '../engine/Datamap';\nimport BottomBar from './BottomBar';\nimport CommandButtonFC from './comps/CommandButtonFC';\nimport ProphetUI from './ProphetUI';\nimport './App.scss'\nimport NavBar from './comps/NavBar';\nimport ResetUI from './comps/ResetUI';\nimport FollowersUI from './FollowersUI';\nimport { msToFullHMS, compressString } from '../engine/util';\nimport AdornmentUI from './comps/AdornmentUI';\nimport OfflineOverlay from './comps/OfflineOverlay';\nimport RocketUI from './comps/RocketUI';\nimport RelicUI from './comps/RelicUI';\nimport TipFC from './comps/TipFC';\n\n\nexport default class App extends React.Component<{}, { data: Datamap }> {\n\n    engine: Engine;\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.engine = new Engine(this.notify)\n        //this.engine.quietLoad();\n        this.state = {\n            data: this.engine.datamap\n        }\n        //this.engine.quietLoad();\n        window.addEventListener(\"keypress\", this.handleKey);\n    }\n\n    componentWillUnmount(){\n        window.removeEventListener('keypress', this.handleKey);\n    }\n\n    handleKey = (e: KeyboardEvent) => {\n        //this.engine.executeCommand(`keypress ` + e.key)\n    }\n\n    notify = () => {\n        this.setState({ data: this.engine.datamap })\n    }\n\n    submitCommand = (command: string) => {\n     this.engine.executeCommand(command)\n    }\n\n    setname = (ev: FormEvent<HTMLFormElement>)  => {\n        let target = ev.target as HTMLFormElement;\n        let children = target.children;\n        let textInput = children[0] as HTMLInputElement;\n        console.log(textInput.value);\n        this.submitCommand(`nac setname ${textInput.value}`)\n\n        ev.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className='App' style={{ width: `100%`, height: `100%` }}>\n                <AppContext.Provider value={{\n                    data: this.state.data,\n                    submitCommand: this.submitCommand\n                }}>\n                    <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n\n                        <div className='TopBar'>\n                            <CommandButtonFC command='save' name='Save' />\n\n                            {(this.state.data.nacData.name === '')  && <form onSubmit={this.setname}>\n                            <input type='text' defaultValue='noname' />\n                            <button className='DCommandFC' type='submit'>Set Name</button>\n                            </form> }\n\n            {(this.state.data.nacData.name !== '')  && <div onClick={()=>{this.submitCommand(`nac clearname`)}}>\n                {`The Prophet, ${this.state.data.nacData.name}!`}<TipFC tip={<div>Click to rename!</div>}/>\n            </div>}\n                            \n                            <div>\n                                {msToFullHMS(this.state.data.gameTime.currentRun.time)}\n                            </div>\n\n                            <CommandButtonFC command='load' name='Load' />\n                        </div>\n\n                        <ProphetUI />\n\n                        <NavBar />\n\n                        <div className='SelectedArea'>\n                            {MAINNAVS[this.state.data.nav.mainArea]}\n                        </div>\n\n                        <BottomBar />\n                        <OfflineOverlay/>\n                    </div>\n                </AppContext.Provider>\n            </div>\n        )\n    }\n}\n\n\n\nconst MAINNAVS = [<RelicUI />, <ResetUI />, <FollowersUI />, <AdornmentUI />, <RocketUI/>]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}