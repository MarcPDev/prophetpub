{"version":3,"sources":["engine/util.ts","engine/modules/PietyPurchases.ts","engine/modules/AbstractModule.ts","engine/interfaces/ExpoCurve.ts","engine/modules/PantheonBuys.ts","engine/modules/ItemPowers.ts","engine/modules/Exploring.ts","engine/modules/Followers.ts","engine/modules/USDRelicPurchases.ts","engine/modules/Pantheon/Time.ts","engine/modules/Pantheon/Production.ts","engine/modules/Pantheon/Wealth.ts","engine/modules/Pantheon/Persuasion.ts","engine/modules/Pantheon/Maintainance.ts","engine/modules/Pantheon/Greed.ts","engine/modules/Pantheon/Pantheons.tsx","engine/modules/Pantheon/Types.ts","engine/interfaces/ExpoCommand.ts","engine/modules/USDPurchases.ts","engine/modules/Prophet.ts","engine/modules/Gametime.ts","engine/modules/NavArea.ts","engine/modules/Adornments.ts","engine/modules/RocketTypes.ts","engine/modules/NameAndCode.ts","engine/modules/Answers.ts","engine/Datamap.ts","engine/CoreEngine.ts","engine/modules/Rocket.ts","engine/Engine.ts","context/context.ts","ui/comps/TipFC.tsx","ui/comps/ProgressFC.tsx","ui/BottomBar.tsx","ui/comps/CommandButtonFC.tsx","ui/ProphetUI.tsx","ui/comps/NavBar.tsx","ui/comps/ConfirmCommandButton.tsx","ui/comps/CommandButton2.tsx","ui/comps/ResetUI.tsx","ui/comps/ParitionerBox.tsx","ui/comps/ExpoButton.tsx","ui/FollowersUI.tsx","ui/comps/AdornmentUI.tsx","ui/comps/OfflineOverlay.tsx","ui/comps/StatFC.tsx","ui/comps/RocketUI.tsx","ui/comps/RelicTip.tsx","ui/comps/RelicBox.tsx","ui/comps/RelicUI.tsx","ui/comps/PantheonUI.tsx","ui/comps/AnswersUI.tsx","ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","formatNumber","num","abs","toString","toExponential","msToFullHMS","msTime","hour","HOUR_MS","minute","length","second","MINUTE_MS","SECOND_MS","WORLD_POP","congregationCost","reincarnationCost","holyPowerCost","piety_purchase_canBuy","data","cost","prophetData","piety","piety_purchase_canBuy_congregation","piety_purchase_canBuy_reincarnation","piety_purchase_canBuy_holypower","piety_purchase_hide_reincarnation","relics","prestigeUnlocked","piety_purchase_hide_congregation","congregation","unlocked","piety_purchase_hide_holypower","holyPowerUnlocked","holiness_holyPowerUpgradeCost","pow","holinessUpgrades","holypowerUpgrade","holiness_holypower1","name","command","able","holiness","hidden","maxHolyPowerUpgrade","holiness_holyPumpUpgradeCost","holyPumpUpgrade","holiness_holyPumpUpgrade_command","holiness_maxHolyPowerUpgradeCost","holiness_maxHolyPowerUpgrade_command","holiness_believerRetentionCost","believerRetention","holiness_believerRetention_command","holiness_exRelationsCost","exRelations","holiness_exRelations_command","ex_believers","holiness_buildingMultiCost","buildingMulti","holiness_buildingMulti_command","holiness_devotionEffectivenessCost","devotionEffectiveness","holiness_devotionEffectiveness_command","UnlockMiracles","AbstractModule","engine","expoI_getCost","expo","owned","initial","coefficient","expoI_maxBuyAmount","currency","b","r","k","c","logchange","log","expoI_maxBuyCost","expoI_buyNCost","n","ABC_cost","ABC_able","devotion","ABC_hidden","paritioners","ABC_bought","devotionUpgrades","abc","a","Devotion_Upgrade_ShorterDays","costName","change","Devotion_Upgrade_NoHPDecay","Devotion_Upgrade_RelicPower","DEF_cost","DEF_able","DEF_hidden","def","DEF_bought","Devotion_Upgrade_D","Devotion_Upgrade_E","Devotion_Upgrade_F","ITEM_POWERS","effective_devotee_mult","adornments","equiped","book","origin","level","devotee_power_mult","ring","prayer_upgrades","prodctionCallback","count","eq","cane","believers","USD","piety_eq_mult_gain","mult","cap","robe","devotion_eq_mult_gain","usd_eq_mult_gain","Exploring","hireExplorers","index","can_hire","datamap","explorerCount","hireToNegative","income","WealthyBeliever_USD_gain","firstSal","currentSalary","secondSal","net","individualcost","canhire","console","handle_explore_command","cmdArray","hireExplorer","hire10Explorer","fireExplorer","sendup","senddown","sendall","sendRuins","sendMart","sendShop","stopRuins","stopMart","stopShop","exploreDay","checkBelievers","checkSalary","checkOut","checkReady","exploreProgress","checkForFinshedAreas","exploreRuins","exploreMart","exploreShop","reset","explorers","ExplorersData_init","this","areas","ruins","beingExplored","readyForMission","assignedExplorers","mart","shop","availableExplorers","forEach","area","investedDays","goal","getAreaGoalDirct","exploredCount","AreaExpos","checkArea","getItem","EXPLORER_SALARY","areaExpo","explorData","val","pantheon","wealth","show_explore_area","areaKey","AREA_STRS","key","Followers","handle_followers_command","handle_recruit_command","handle_upgrade_command","recruitParitioner","recruitMaxParitioner","recruitHalfMaxParitioner","handle_unlock_command","handle_divinity_command","doDevotionUpgrade","Object","values","DP_Upgrades","dp","split","dp_key","divinityPurcase","dp_able","action","buy_divinityPurchase","DPUpgrades","recruit_preacher","recruit_devotee","recruit_doorknocker","recruit_preacher_max","recruit_devotee_max","recruit_doorknocker_max","automation","auto_buyToNext","upgrade_preacher","upgrade_devotee","upgrade_doorknocker","unlockAdornments","preacher_cmd_able","preachers","old","preacher_upgrade_cmd_able","preacherLevel","doorknocker_cmd_able","doorknocker","doorknocker_upgrade_cmd_able","doorknockerLevel","devotee_cmd_able","devotee","devotee_upgrade_cmd_able","devoteeLevel","preacher_cost","preacher_upgrade_cost","devotee_cost","devotee_upgrade_cost","doorknocker_cost","doorknocker_upgrade_cost","arg0","parseInt","paritioner_cost","amount","paritioner_maxBuyAmount","paritioner_buyNCost","paritioner_buyHalfMax_amount","days","proudDay","wealthDay","curiousDay","smartDay","dumbDay","badDay","dailyBelieverGain","proudBeliever_believer_gain","WealthyBeliever_Believer_gain","questions","crediblity","UnlockAdornments_able","followers","adornmentsUnlocked","devotion_mult","base","recruit_preacher_cmd","upgrade_preacher_cmd","recruit_devotee_cmd","upgrade_devotee_cmd","recruit_doorknocker_cmd","upgrade_doorknocker_cmd","ParitionerExpos","Paritioners","costbound","peopleBound","availablePeople","paritioner_maxBuyCost","full","paritioner_buyHalfMax_cost","gain","USDUpgrades","pamphlets","persuasion","harm","helper_prophet_exBeliever_harm","realPossibleGain","realGain","tithe","greed","estimatedDaysPerDay","time","UnlockAdornments_cost","UnlockAdornments","getDivinity","devotedPrestige","availableDivinity","specificSpentDivinity","DP_beliverGain","DP_fasterRelicProduction","DP_heavyHolyPower","DP_monthMultiplier","DP_superHolyPump","DP_yearMultiplier","spentDivinity","countFn","divinityPurcase_getCost","tierOne_Divinity_hidden","description","fasterRelicProduction","heavyHolyPower","monthMultiplier","superHolyPump","yearMultiplier","RelicUSDUpgradeExpos","relicUSDupgrade_cost","relicUSDUpgrades","ThisPantheon","do","buy_pantheonPurchase","Upgrade_A","Upgrade_B","Upgrade_C","buyMax_pantheonPurchase","getData","UpgradeData_init","bonusDays","production","godOfPersuasionBelieverGainMult","maintainance","TIME","PRODUCTION","WEALTH","PERSUASION","MAINTAINANCE","GREED","PANTHEON_COST","UnlockPantheonCommand","tip","pantheonPurchase","pantheonPurchase_able","pantheonPurchaseCost","pantheonPurchase_maxAmmount","ammount","pantheonPurchase_maxCost","CurrencyFn_USD","get","spend","expoCommand_buy","expoCommand","expoCommand_Able","currencyFns","expoCommand_Cost","countFns","ep","expoCommand_maxAmmount","expoCommand_buyMax","expoCommand_maxCost","USD_UpgradeTithe","currencyName","USD_Upgrade_Pamphlets","ProphetModule","believersLeave","i","loss","helper_prophet_maxBelieversDecay","boundLoss","holyDump","holyPower","holyPump","doubled","tenned","prophet_maxHolyPower","processDetla","delta","relicDeltaMult","RELICS","relicData","relicIndex","relicTimers","timeCost","relic_getTime","relic_getProduction","maxPiety","prestige","ppgain","prophet_prestige_gain","oldData","freeQs","sqrt","answers","superAnswerAnswers","oldMult","newCount","save","reincarnationCount","selected","relicsetbuy","newOld","init_ProphetData","startingHoliness","prestigeCleanup","devotedprestige","hardCleanup","gameTime","currentRun","nav","mainArea","rocket","exploring","pray","proselytize","preach","upgradeRelic","buyRelic","buyMaxRelic","buyToNRelic","piety_purchase_buy_reincarnation","piety_purchase_buy_holypower","holiness_holyPowerUpgrade_do","holiness_holyPumpUpgrade_do","holiness_maxHolyPowerUpgrade_do","holiness_believerRetention_do","holiness_exRelations_do","holiness_buildingMulti_do","holiness_devotionEffectiveness_do","rocketData","upgradeIndex","relic_getCost","relic_maxBuyAmount","relic_maxBuyCost","relic_buyNCost","needToN","doorknockers","dayTriggerParitioners","devotees","devotee_devotion_gain","doorknocker_beliver_gain","preachers_max_deovtion_gain","preach_max_deovtion_gain","helper_prophet_maxBeliverGainNet","prophet","decay","year","power","total_power","helper_prophet_size_believerDecay","helper_prophet_exBeliever_believerDecay","helper_prophet_maxBeliverGain","sum","ghijk","d","e","initialCost","initialTime","initialRevenue","cost_base","relic_getProductionMulti","holiness_mult","relic_holyPowerMulti","reincation_mult","special_relic_mult","item_relic_mult","pantheon_piety_mult","time_relic_mult","year_relic_mult","month","month_relic_mult","CALC_holy_mult","reincation_mult_from_superPrestiges","CUTOFF","next_holiness_mult","relic_getAllProductionPerecond","deltamult","prodTimesDeltamult","holypower","Building_Multi","relic_canBuyNext","next","relic_canBuyN","CMD_prophet_pray","CMD_prophet_buymax","CMD_prophet_buymaxreverse","CMD_prophet_proselytize","devotedPrestige_cost","CMD_prophet_devotedPrestige","GameTime","day","msprogress","eatenDays","processDelta","mscost","requiredMS","passDayAction","processCommands","commands","passDay","eatDay","daysForTriggers","dayTriggers","multiday","elapsed_days","totalDays","elapased_months","totalMonths","gainedYears","offline","happening","autosave","baseBonus","rngGoal","bonus","dayTrigger","joules","automateDays","maxDays","maxMonths","NavArea","changeMainArea","stringedNumber","number","subArea","changeSubArea","Adornments","handle_adornments_command","buyButton","items","push","iNo","sortAdornments","index_","item_","splice","gems","combine","unequipCap","unequipCane","unequipRobe","unequipRing","newring","unequipBook","sort","sortAreas","buyButtonCost","buttonsBought","check_item","matches","some","item","i_index","originA","originB","getAreaIndex","toPush","adornmentCount","getFullAdornmentItem","ItemNames","PowerDictionary","unused","Cap","Cane","Robe","Ring","Book","RocketDataInit","ball","height","mass","derived","estimatedTime","estimatedVMax","estimatedJouls","sim","current_h","current_v","impactJouls","active","elapsedTime","thrown_ball","initial_velocity","bouncyball","bounces_upgrades","loss_upgrades","bounces","NameAndCode","timeSet","Date","now","nacData","Answers","handle_answer_command","answer_pray","answer_make","modify_key","modify_upgrade","up","availaleQuestion","gemUpgradeForAnswerCost","keys","gemUpgrades","includes","automateMake","invest","rng","upgrades","polish","automatePray","recruit","superAnswerDay","superAnswerWorkers","superAnswerProgress","checkSuperAnswerTick","superAnswerGoal","prayCount","make","totalQuestions","usedQuestions","ANSWER_DATA","newDefaultMap","totaltime","x","y","z","ticks","last","ui","innerHeight","innerWidth","faithfulCongregation","CoreEngine","notify","loop","undefined","start","setInterval","tick","stop","clearTimeout","JSON","stringify","localStorage","setItem","load","quietLoad","combstr","oldobj","parse","_","newnow","Rocket","handle_rocket_command","ballHeightUpgrade_cost","nextBallHeightUpgrade","ballMassUpgrade_cost","nextBallMassUpgrade","ballVelocityUpgrade_cost","nextBallVelocityUpgrade","ballBounceUpgrade_cost","nextBallBounceUpgrade","throwball","dropball","bounceball","updateEstimates","ballsim","thrownballsim","bounceyball_sim","seconds","move_and_impact","ballimpact","thrown_ballimpact","GRAVITY","freefall_t_from_h","freefall_j_from_mv","v_in","acceleration","delta_t","delta_h","vf","estimatedDistance","velocity_in","freefall_d_from_vat","freefall_vf_from_viat","v_i","v_f","distance","t","freefall_t_from_vivfd","vf_sq","freefall_vf_from_viad","vin","h","vhat_sim","initial_time","bounce_ballimpact","bounce_energy","gainedJoules","velocity","newv","oldKE","bounce","cmd_ballheightplus","cmd_ballvelocityplus","cmd_ballbouncesplus","cmd_dropball","cmd_throwball","cmd_bouncyball","v","m_kg","Engine","mountTriggers","bounds","executeCommand","doPantheonUpgrade","import","export","handleKey","nac","nacCommand","startOffline","stopOffline","fakeLongOffline","daystofake","mstofake","lzutf8str","LZUTF8","require","arrayInt","map","value","magicArray","Uint8Array","of","encodeUTF8","decompress","merge","dataString","output","compress","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","AppContext","React","submitCommand","str","props","setTB","window","top","bottom","ReactDOM","findDOMNode","parent","parentElement","parentBounds","getBoundingClientRect","setState","state","className","Component","contextType","TipFC","Consumer","ProgressFC","widthpercent","useState","off","setOff","backgroundSize","width","onClick","whiteSpace","label","BottomBar","color","background","msToHM","MONTHS","CommandButtonFC","disabled","img","src","alt","ProphetUI","estimatedDays","salary","net_USD_gain","preacherGain","devoteeGain","net_Devotion_gain","PietyEstimate","piety_ps","piety_pp","secondsFromPrayer","prayer_Piety_seconds_gain","l","daily_Piety_prayer_gain","NavBar","areaIndex","areaUnlocked","ConfirmCommandButton","fakeBuy","ev","shiftKey","context","open","warning","CommandButton2","resource","ResetUI","toFixed","holiness_holyPowerEffectivenessUpgradeCost","DPUpgradeComp","ParitionerBox","paritionerIndex","justifyContent","flexDirection","costable","peopleable","paritioner_able","ParitionerDetailts","ExpoButton","FollowersUI","DevotionUpgrades","border","AdornmentUI","commandKey","itemData","slot","AreaBox","areaExpoKey","remainder","rate","getAreaETA","ItemBox","alignItems","EquippedItemBox","OfflineOverlay","StatFC","textAlign","units","estimate","RocketUI","padding","RelicTip","RelicBox","relic_canBuy","relic_buyNextCost","relicUSDupgrade_able","relic_getProductionPerecond","RelicUI","PantheonUI","dps","Pantheons","PantheonUpgradeBox_v2","children","PantheonUpgradeComp_v2","AnswersUI","ad","answer","upgradeLabel","AnswerBox","borderLeft","margin","App","setname","textInput","target","preventDefault","addEventListener","removeEventListener","Provider","onSubmit","type","defaultValue","checked","onChange","getElementById","id","list","files","file","reader","FileReader","readAsText","onload","readerEvent","content","result","MAINNAVS","Boolean","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.51654978.chunk.js","sourcesContent":["export function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}   \n\nexport function formatNumber(num:number): string {\n    if (Math.abs(num) < 1e6) return num.toString();\n    else return num.toExponential(2);\n}\nexport function percentOf (num: number, base: number) {\n    if (num === 0 || base === 0) return 'IDK';\n    else return Math.floor(100*num/base).toString() + '%';\n}\n\nexport function msToFullHMS (msTime: number) {\n    \n    let hour = Math.floor(msTime/HOUR_MS).toString();\n\n    let minute = Math.floor((msTime%HOUR_MS)/HOUR_MS * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n\n    let second = Math.floor((msTime%MINUTE_MS)/MINUTE_MS * 60).toString();\n    if (second.length === 1) second = '0' + second;\n    \n    \n    return `${hour}:${minute}:${second}`\n}\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = SECOND_MS * 60\nexport const HOUR_MS = MINUTE_MS * 60\n\nexport const WORLD_POP = 7.7e9\n\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nexport var compressString = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = '';\n    var currentCount = 0;\n    var charsIndex = 0;\n    for (var i = 0; i < chars.length; i++) {\n        \n        if (currentCount = 0) {\n            currentLetter = chars[i]\n            charsIndex++\n        } else {\n            \n            if (chars[i] === currentLetter) {\n                currentCount ++;\n            } else {\n                if (currentCount > 1) {\n                    chars[charsIndex] = currentCount.toString();\n                    charsIndex++\n                } \n                currentCount = 1\n                currentLetter = chars[i]\n                charsIndex++\n                \n            }\n        \n        }\n            \n    }\n    return charsIndex + 1\n};\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = chars[0];\n    var currentCount = 1;\n    var charsIndex = 0;\n    for (var i = 1; i < chars.length; i++) {\n        \n        if (chars[i] === currentLetter) {\n            currentCount ++;\n        } else {\n            \n            chars[charsIndex] = currentLetter\n            charsIndex++\n            \n            \n            if (currentCount > 1) {\n                var intStr = currentCount.toString();\n                for (var j = 0; j < intStr.length; j++) {\n                    chars[charsIndex] = intStr[i];\n                    charsIndex++                \n                }\n            } \n            currentCount = 1\n            currentLetter = chars[i]\n        }\n            \n    }\n    \n    chars[charsIndex] = currentLetter\n    charsIndex++        \n            \n    if (currentCount > 1) {\n        chars[charsIndex] = currentCount.toString();\n        charsIndex++\n    } \n    \n    return charsIndex\n};\n\ninterface LNode {\n    next: LNode | null;\n    val: number;\n}\nfunction ListNode(val: number): LNode {\n    return {\n        val, next: null\n    }\n}\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1: LNode | null, l2: LNode | null) {\n    var s1 = \"\";\n    var s2 = \"\";\n    \n    while(l1 !== null) {\n        s1 = s1 + l1.val.toString();\n        l1 = l1.next\n    }\n    \n    while(l2 !== null) {\n        s2 = s2 + l2.val.toString();\n        l2 = l2.next\n    }\n    \n    s1 = s1.split(\"\").reverse().join()\n    s2 = s2.split(\"\").reverse().join()\n    \n    var newVal = parseInt(s1) + parseInt(s2);\n    var newS = newVal.toString();\n    var newSSplit = newS.split(\"\");\n    \n    var popped = newSSplit.pop();\n        \n    var currentNode = null;\n    while (popped !== undefined) {\n        var newNode = ListNode(parseInt(popped))\n        newNode.next = currentNode;\n        currentNode = newNode;\n        popped = newSSplit.pop()\n    }\n    \n    return currentNode\n    \n    \n    \n    \n};","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand, DecoupledCommand2 } from \"../interfaces/ICommand\";\n\nexport default class PietyPurchases {\n\n}\n\n\nexport const congregationCost: number = 1e10;\nexport const reincarnationCost: number = 1e5;\nexport const holyPowerCost: number = 1e4;\n\nfunction piety_purchase_canBuy (data: Datamap, cost: number) {\n    return data.prophetData.piety >= cost;\n}\n\nexport function piety_purchase_canBuy_congregation (data:Datamap) {\n    return piety_purchase_canBuy(data, congregationCost)\n}\n\nexport function piety_purchase_canBuy_reincarnation (data:Datamap) {\n    return piety_purchase_canBuy(data, reincarnationCost)\n}\n\nexport function piety_purchase_canBuy_holypower (data:Datamap) {\n    return piety_purchase_canBuy(data, holyPowerCost)\n}\n\nexport function piety_purchase_buy_congregation (data: Datamap) {\n    if (piety_purchase_hide_congregation(data)) return\n    if (!piety_purchase_canBuy_congregation(data)) return;\n    data.prophetData.piety -= congregationCost;\n    data.prophetData.congregation.unlocked = true;\n}\n\nexport function piety_purchase_buy_reincarnation (data: Datamap) {\n    if (piety_purchase_hide_reincarnation(data)) return\n    if (!piety_purchase_canBuy_reincarnation(data)) return;\n    data.prophetData.piety -= reincarnationCost;\n    data.prophetData.prestigeUnlocked = true;\n}\n\nexport function piety_purchase_buy_holypower (data: Datamap) {\n    if (piety_purchase_hide_holypower(data)) return\n    if (!piety_purchase_canBuy_holypower(data)) return;\n    data.prophetData.piety -= holyPowerCost;\n    data.prophetData.holyPowerUnlocked = true;\n}\n\nexport function piety_purchase_hide_reincarnation (data: Datamap) {\n    let hidden=  data.prophetData.relics[2] === 0 || data.prophetData.prestigeUnlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_congregation (data: Datamap) {\n    let  hidden = data.prophetData.relics[4] === 0 || data.prophetData.congregation.unlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_holypower (data: Datamap) {\n    let hidden=  data.prophetData.relics[1] === 0 || data.prophetData.holyPowerUnlocked\n    return hidden;\n}\n\n\nexport function holiness_holyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(10,data.holinessUpgrades.holypowerUpgrade + 1)\n}\nexport const holiness_holypower1: DecoupledCommand = {\n    name: \"Holy Power Effectiveness\",\n    command: \"prophet holypowerUpgrade\",\n    able: (data)=>{return holiness_holyPowerUpgradeCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.maxHolyPowerUpgrade === 0}\n\n}\nexport function holiness_holyPowerUpgrade_do (data: Datamap) {\n    if (holiness_holypower1.able) if (!holiness_holypower1.able(data)) return;\n    let cost = holiness_holyPowerUpgradeCost(data);\n    data.holinessUpgrades.holypowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_holyPumpUpgradeCost (data: Datamap) {\n    return Math.pow(2, data.holinessUpgrades.holyPumpUpgrade + 1)\n}\nexport const holiness_holyPumpUpgrade_command: DecoupledCommand = {\n    name: \"Holy Power From Prayer\",\n    command: \"prophet holypumpupgrade\",\n    able: (data)=>{return holiness_holyPumpUpgradeCost(data) <= data.prophetData.holiness},\n}\nexport function holiness_holyPumpUpgrade_do (data: Datamap) {\n    if (holiness_holyPumpUpgrade_command.able) if (!holiness_holyPumpUpgrade_command.able(data)) return;\n    let cost = holiness_holyPumpUpgradeCost(data);\n    data.holinessUpgrades.holyPumpUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_maxHolyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(5, data.holinessUpgrades.maxHolyPowerUpgrade + 1)\n}\nexport const holiness_maxHolyPowerUpgrade_command: DecoupledCommand = {\n    name: \"Max Holy Power\",\n    command: \"prophet maxholypowerupgrade\",\n    able: (data)=>{return holiness_maxHolyPowerUpgradeCost(data) <=data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holyPumpUpgrade === 0}\n}\nexport function holiness_maxHolyPowerUpgrade_do (data: Datamap) {\n    if (holiness_maxHolyPowerUpgrade_command.able) if (!holiness_maxHolyPowerUpgrade_command.able(data)) return;\n    let cost = holiness_maxHolyPowerUpgradeCost(data);\n    data.holinessUpgrades.maxHolyPowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_believerRetentionCost (data: Datamap) {\n    return Math.floor(Math.pow(1.7, data.holinessUpgrades.believerRetention)+1)\n}\nexport const holiness_believerRetention_command: DecoupledCommand = {\n    name: \"Believer Retention\",\n    command: \"prophet believerretentionupgrade\",\n    able: (data)=>{return holiness_believerRetentionCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.maxHolyPowerUpgrade === 0 || data.prophetData.congregation.unlocked === false)}\n}\nexport function holiness_believerRetention_do (data: Datamap) {\n    if (holiness_believerRetention_command.able) if (!holiness_believerRetention_command.able(data)) return;\n    let cost = holiness_believerRetentionCost(data);\n    data.holinessUpgrades.believerRetention ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_exRelationsCost (data: Datamap) {\n    return Math.pow(3, data.holinessUpgrades.exRelations + 1)\n}\nexport const holiness_exRelations_command: DecoupledCommand = {\n    name: \"Ex Relations\",\n    command: \"prophet exrelationsupgrade\",\n    able: (data)=>{return holiness_exRelationsCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.believerRetention === 0 || data.prophetData.ex_believers === 0)}\n}\nexport function holiness_exRelations_do (data: Datamap) {\n    if (holiness_exRelations_command.able) if (!holiness_exRelations_command.able(data)) return;\n    let cost = holiness_exRelationsCost(data);\n    data.holinessUpgrades.exRelations ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_buildingMultiCost (data: Datamap) {\n    return Math.floor(Math.pow(3.69, data.holinessUpgrades.buildingMulti + 1) + 30)\n}\nexport const holiness_buildingMulti_command: DecoupledCommand = {\n    name: \"Relic Mult\",\n    command: \"prophet bmupgrade\",\n    able: (data)=>{return holiness_buildingMultiCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holypowerUpgrade === 0}\n}\nexport function holiness_buildingMulti_do (data: Datamap) {\n    if (holiness_buildingMulti_command.able) if (!holiness_buildingMulti_command.able(data)) return;\n    let cost = holiness_buildingMultiCost(data);\n    data.holinessUpgrades.buildingMulti ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_devotionEffectivenessCost (data: Datamap) {\n    return Math.floor(Math.pow(124, data.holinessUpgrades.devotionEffectiveness + 1))\n}\nexport const holiness_devotionEffectiveness_command: DecoupledCommand = {\n    name: \"Devotion Effectiveness\",\n    command: \"prophet de_upgrade\",\n    able: (data)=>{return holiness_devotionEffectivenessCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.exRelations === 0}\n}\nexport function holiness_devotionEffectiveness_do (data: Datamap) {\n    if (holiness_devotionEffectiveness_command.able) if (!holiness_devotionEffectiveness_command.able(data)) return;\n    let cost = holiness_devotionEffectivenessCost(data);\n    data.holinessUpgrades.devotionEffectiveness ++;\n    data.prophetData.holiness -= cost;\n}\n\n\nexport interface HolinessUpgrades {\n    holypowerUpgrade: number;\n    holyPumpUpgrade: number;\n    maxHolyPowerUpgrade: number;\n    believerRetention: number;\n    exRelations: number;\n    buildingMulti: number;\n    devotionEffectiveness: number;\n}\n\nexport function holinessUpgradesInit () {\n    return {\n        holypowerUpgrade: 0,\n        holyPumpUpgrade: 0,\n        maxHolyPowerUpgrade: 0,\n        believerRetention: 0,\n        exRelations: 0,\n        buildingMulti: 0,\n        devotionEffectiveness: 0,\n    }\n}\n\nconst MIRaCLES_COST = 1e30\nexport const UnlockMiracles: DecoupledCommand2 = {\n    command:()=>'prophet unlockmiracles',\n    name:()=> \"Unlock Miracles\",\n    cost:()=> MIRaCLES_COST,\n    hidden:(data)=>data.prophetData.relics[9] === 0 || data.rocketData.unlocked,\n    able:(data)=>data.prophetData.piety >= MIRaCLES_COST\n}","import Engine from \"../Engine\";\n\nexport default abstract class AbstractModule {\n    \n    constructor (public engine: Engine) {\n\n    }\n\n    get data () {\n        return {\n            \n        }\n    }\n\n}","export default interface ExpoCurve {\n    coefficient: number,\n    initial: number,\n}\n\nexport function expoI_getCost(expo: ExpoCurve, owned:number) {\n\n    \n    return Math.floor(expo.initial*Math.pow(expo.coefficient,owned))\n}\n\nexport function expoI_maxBuyAmount (expo: ExpoCurve, owned:number, currency: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n    let c = currency\n\n    let logresult = Math.log(1+((c*(r - 1))/(b*Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}  \n\nexport function expoI_maxBuyCost (expo: ExpoCurve, owned:number, currency: number) {\n\n    let n = expoI_maxBuyAmount(expo, owned, currency);\n    \n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport function expoI_buyNCost (expo: ExpoCurve, owned: number, n: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n\n    return Math.floor( b * (Math.pow(r,k)*(Math.pow(r,n)-1)) / (r - 1) )\n}\n\nexport function expoI_buyNextCost (expo: ExpoCurve, owned: number, next: number) {\n    let k = owned;\n    let n = next - k % next;\n\n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport interface ExpoObject {\n    [key:string]:ExpoCurve,\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand, DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport ExpoCurve from \"../interfaces/ExpoCurve\";\n\nexport default class DevotionPurchases {\n\n}\n\nexport function doDevotionUpgrade (data: Datamap, command: string) {\n    switch (command) {\n        case 'shorterdays':\n            data.prophetData.devotion -= ABC_cost(data);\n            data.prophetData.devotionUpgrades.abc.a = true;\n            break;\n\n        case 'productiveprayer':\n                data.prophetData.devotion -= ABC_cost(data);\n                data.prophetData.devotionUpgrades.abc.b = true;\n            break;\n\n        case 'relicpower':\n                data.prophetData.devotion -= ABC_cost(data);\n                data.prophetData.devotionUpgrades.abc.c = true;\n            break;\n\n        case 'd':\n                data.prophetData.devotion -= DEF_cost(data);\n                data.prophetData.devotionUpgrades.def.a = true;\n            break;\n\n        case 'e':\n                data.prophetData.devotion -= DEF_cost(data);\n                data.prophetData.devotionUpgrades.def.b = true;\n            break;\n\n        case 'f':\n                data.prophetData.devotion -= DEF_cost(data);\n                data.prophetData.devotionUpgrades.def.c = true;\n            break;\n    \n        default:\n            break;\n    }\n}\n\nfunction ABC_cost (data: Datamap) {\n    return 1e6\n}\n\nfunction ABC_able (data: Datamap) {\n    return data.prophetData.devotion >= ABC_cost(data) && ABC_hidden(data) === false;\n}\n\nexport function ABC_hidden (data: Datamap) {\n    return data.prophetData.congregation.paritioners[0] < 1 || ABC_bought(data);\n}\n\nexport function ABC_bought (data: Datamap) {\n    return data.prophetData.devotionUpgrades.abc.a || data.prophetData.devotionUpgrades.abc.b || data.prophetData.devotionUpgrades.abc.c\n}\n\n\nexport const Devotion_Upgrade_ShorterDays: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade shorterdays',\n    name: (data)=>`(A) God of Time`,\n    hidden: ABC_hidden,\n    cost: ABC_cost,\n    able: ABC_able,\n    costName: 'Devotion',\n    change: (data)=>`Days are only 12 seconds`,\n}\n\nexport const Devotion_Upgrade_NoHPDecay: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade productiveprayer',\n    name: (data)=>`(B) God of Production`,\n    change: (data)=>`Prayer gives 1s of relic time`,\n    hidden: ABC_hidden,\n    cost: ABC_cost,\n    able: ABC_able,\n    costName: 'Devotion',\n}\n\nexport const Devotion_Upgrade_RelicPower: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade relicpower',\n    name: (data)=>`(C) God of Wealth`,\n    change: (data)=>`Expensive relics produce more`,\n    cost: ABC_cost,\n    able: ABC_able,\n    costName: 'Devotion',\n}\n\nfunction DEF_cost (data: Datamap) {\n    return 1e8\n}\n\nfunction DEF_able (data: Datamap) {\n    return data.prophetData.devotion >= DEF_cost(data) && DEF_hidden(data) === false;\n}\n\nexport function DEF_hidden (data: Datamap) {\n    return data.prophetData.congregation.paritioners[1] < 1 || DEF_bought(data);\n}\n\nfunction DEF_bought (data: Datamap) {\n    return data.prophetData.devotionUpgrades.def.a || data.prophetData.devotionUpgrades.def.b || data.prophetData.devotionUpgrades.def.c\n}\n\n\nexport const Devotion_Upgrade_D: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade d',\n    name: (data)=>`(D) God of Persuasion`,\n    change: (data)=>`Double Believer Gain`,\n    hidden: DEF_hidden,\n    cost: DEF_cost,\n    able: DEF_able,\n    costName: 'Devotion',\n}\n\nexport const Devotion_Upgrade_E: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade e',\n    name: (data)=>`(E) God of Maintainance`,\n    change: (data)=>`No Holy Power Decay`,\n    hidden: DEF_hidden,\n    cost: DEF_cost,\n    able: DEF_able,\n    costName: 'Devotion',\n}\n\nexport const Devotion_Upgrade_F: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade f',\n    name: (data)=>`(F) God of Greed`,\n    change: (data)=>`Expensive relics produce more`,\n    hidden: DEF_hidden,\n    cost: DEF_cost,\n    able: DEF_able,\n    costName: 'Devotion',\n}\n\nexport interface DevotionUpgradeData {\n    abc: { a: boolean, b: boolean, c: boolean };\n    def: { a: boolean, b: boolean, c: boolean };\n    ghijk: { a: boolean, b: boolean, c: boolean, d: boolean, e: boolean };\n}\n\nexport function DevotionUpgradeData_init (): DevotionUpgradeData {\n    return {\n        abc: { a: false, b: false, c: false, },\n        def: { a: false, b: false, c: false, },\n        ghijk: { a: false, b: false, c: false, d: false, e: false },\n    }\n}","import { Datamap } from \"../Datamap\";\n\nconst ITEM_POWERS = {\n    effective_devotee_mult, devotee_power_mult, prayer_upgrades, \n    piety_eq_mult_gain, devotion_eq_mult_gain, usd_eq_mult_gain\n}\n\nexport default ITEM_POWERS;\n\nfunction effective_devotee_mult(data: Datamap) {\n    if (data.adornments.equiped.book) {\n        if (data.adornments.equiped.book.origin === 'ruins') {\n            return data.adornments.equiped.book.level + 1;\n        }\n    }\n    return 1;\n}\n\nfunction devotee_power_mult(data: Datamap) {\n    if (data.adornments.equiped.ring) {\n        if (data.adornments.equiped.ring.origin === 'ruins') {\n            return data.adornments.equiped.ring.level + 1;\n        }\n    }\n    return 1;\n}\n\nfunction prayer_upgrades(data: Datamap, prodctionCallback: (deltaMS: number)=>void, count: number = 1) {\n    let eq = data.adornments.equiped;\n    if (eq.cane) {\n        if (eq.cane.origin == 'ruins') {\n            data.prophetData.believers += eq.cane.level * count\n        }\n        if (eq.cane.origin == 'mart') {\n            data.prophetData.congregation.USD += eq.cane.level * count\n        }\n        if (eq.cane.origin == 'shop') {\n            prodctionCallback(eq.cane.level * 1000 * count)\n        }\n    }\n}\n\nfunction piety_eq_mult_gain (data: Datamap) {\n    let mult = 0;\n    let eq = data.adornments.equiped;\n    if (eq.cap) {\n        if (eq.cap.origin === 'ruins') {\n            mult += eq.cap.level;\n        }\n    } \n    //no book\n    if (eq.robe) {\n        if (eq.robe.origin === 'ruins') {\n            mult += eq.robe.level;\n        }\n    } \n    //no ring\n    return mult;\n}\n\nfunction devotion_eq_mult_gain (data: Datamap) {\n    let mult = 0;\n    let eq = data.adornments.equiped;\n    if (eq.cap) {\n        if (eq.cap.origin === 'mart') {\n            mult += eq.cap.level;\n        }\n    } \n    if (eq.book) {\n        if (eq.book.origin === 'mart') {\n            mult += eq.book.level;\n        }\n    }\n    if (eq.robe) {\n        if (eq.robe.origin === 'mart') {\n            mult += eq.robe.level;\n        }\n    } \n    if (eq.ring) {\n        if (eq.ring.origin === 'mart') {\n            mult += eq.ring.level;\n        }\n    } \n    return mult;\n}\n\nfunction usd_eq_mult_gain (data: Datamap) {\n    let mult = 0;\n    let eq = data.adornments.equiped;\n    if (eq.cap) {\n        if (eq.cap.origin === 'shop') {\n            mult += eq.cap.level;\n        }\n    } \n    if (eq.book) {\n        if (eq.book.origin === 'shop') {\n            mult += eq.book.level;\n        }\n    }\n    if (eq.robe) {\n        if (eq.robe.origin === 'shop') {\n            mult += eq.robe.level;\n        }\n    } \n    if (eq.ring) {\n        if (eq.ring.origin === 'shop') {\n            mult += eq.ring.level;\n        }\n    } \n    return mult;\n}","import AbstractModule from \"./AbstractModule\";\nimport { Datamap } from \"../Datamap\";\nimport ExpoCurve, { ExpoObject, expoI_getCost } from \"../interfaces/ExpoCurve\";\nimport { WealthyBeliever_USD_gain } from \"./Followers\";\n\nexport default class Exploring extends AbstractModule {\n\n    sendRuins() {\n        if (this.data.areas.ruins.beingExplored || this.data.readyForMission === 0) return;\n        this.data.areas.ruins.assignedExplorers = this.data.readyForMission;\n        this.data.areas.ruins.beingExplored = true;\n        this.data.readyForMission = 0;\n    }\n\n    sendMart() {\n        if (this.data.areas.mart.beingExplored || this.data.readyForMission === 0) return;\n        this.data.areas.mart.assignedExplorers = this.data.readyForMission;\n        this.data.areas.mart.beingExplored = true;\n        this.data.readyForMission = 0;\n    }\n\n    sendShop() {\n        if (this.data.areas.shop.beingExplored || this.data.readyForMission === 0) return;\n        this.data.areas.shop.assignedExplorers = this.data.readyForMission;\n        this.data.areas.shop.beingExplored = true;\n        this.data.readyForMission = 0;\n    }\n\n    stopRuins() {\n        this.data.areas.ruins.assignedExplorers = 0;\n        this.data.areas.ruins.beingExplored = false;\n    }\n    \n    stopMart() {\n        this.data.areas.mart.assignedExplorers = 0;\n        this.data.areas.mart.beingExplored = false;\n    }\n\n    stopShop() {\n        this.data.areas.shop.assignedExplorers = 0;\n        this.data.areas.shop.beingExplored = false;\n    }\n\n    hireExplorer ( ) {\n        if (can_hire(this.engine.datamap) === false) return;\n        this.data.explorerCount ++;\n    }\n\n    hire10Explorer ( ) {\n        if (can_hire(this.engine.datamap) === false) return;\n        this.data.explorerCount += 10;\n    }\n\n    hireExplorers = (count: number) => {\n        for (let index = 0; index < count; index++) {\n            if (can_hire(this.engine.datamap) === false) return;\n            this.data.explorerCount ++;          \n        }\n    }\n\n    hireToNegative = () => {\n        let income = WealthyBeliever_USD_gain(this.engine.datamap);\n        let firstSal = currentSalary(this.engine.datamap);\n        this.data.explorerCount ++;          \n        let secondSal = currentSalary(this.engine.datamap);\n        let net = income - secondSal;\n        let individualcost = secondSal - firstSal;\n        let canhire = Math.floor(net/individualcost);\n        this.data.explorerCount += canhire - 1;\n        console.log(income,firstSal,secondSal,net,individualcost,canhire);\n        \n    }\n\n    fireExplorer () {\n        if (this.data.explorerCount > 0) {\n            this.data.explorerCount --;\n            this.engine.datamap.prophetData.believers --;\n        }\n    }\n\n    get data () {\n        return this.engine.datamap.adornments.explorers;\n    }\n \n    handle_explore_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'hire':\n                this.hireExplorer();\n                break;\n\n            case 'hire10':\n                this.hire10Explorer();\n                break;\n\n            case 'hire100':\n                this.hireExplorers(100);\n                break;\n\n            case 'hiremax':\n                this.hireToNegative();\n                break;\n\n            case 'fire':\n                this.fireExplorer();\n                break;\n            \n            case 'sendup':\n                this.sendup();\n                break;\n\n            case 'senddown':\n                this.senddown();\n                break;\n\n            case 'sendall':\n                this.sendall();\n                break;\n\n            case 'ruins':\n                this.sendRuins();\n                break;\n            \n            case 'mart':\n                this.sendMart();\n                break;\n\n            case 'shop':\n                this.sendShop();\n                break;\n\n                case 'stopruins':\n                this.stopRuins();\n                break;\n            \n            case 'stopmart':\n                this.stopMart();\n                break;\n\n            case 'stopshop':\n                this.stopShop();\n                break;\n            \n                default:\n                break;\n        }\n    }\n\n    exploreDay = () => {\n\n        this.checkBelievers();\n        this.checkSalary();\n        this.checkOut();\n\n        this.checkReady();\n\n        this.exploreProgress();\n    }\n\n    checkBelievers () {\n        if (this.engine.datamap.prophetData.believers < this.data.explorerCount) {\n            this.data.explorerCount = this.engine.datamap.prophetData.believers;\n        }\n    }\n\n    checkReady () {\n        if (availableExplorers(this.engine.datamap) < this.data.readyForMission) {\n            this.data.readyForMission = availableExplorers(this.engine.datamap);\n        }\n    }\n\n    checkOut () {\n        if (availableExplorers(this.engine.datamap) < 0) {\n            this.stopRuins();\n            this.stopMart();\n            this.stopShop();\n        }\n    }\n\n\n    \n\n    checkSalary () {\n        if (this.engine.datamap.prophetData.congregation.USD < currentSalary(this.engine.datamap)) {\n            this.engine.datamap.prophetData.congregation.USD = 0;\n            this.engine.datamap.prophetData.believers -= this.data.explorerCount;\n            this.data.explorerCount = 0;\n        } else {\n            this.engine.datamap.prophetData.congregation.USD -= currentSalary(this.engine.datamap);\n        }\n    }\n\n    sendup () {\n        this.data.readyForMission = Math.min(availableExplorers(this.engine.datamap), this.data.readyForMission + 1)\n    }\n\n    sendall () {\n            this.data.readyForMission = availableExplorers(this.engine.datamap)\n    }\n\n    senddown () {\n        this.data.readyForMission = Math.max(0, this.data.explorerCount - 1)\n    }\n\n    exploreProgress () {\n        let areas = this.data.areas;\n\n        [areas.ruins, areas.mart, areas.shop].forEach(area => {\n            if (area.beingExplored) {\n                area.investedDays += area.assignedExplorers;\n            }\n        });\n        this.checkForFinshedAreas();\n    }\n\n    checkForFinshedAreas = () => {\n        this.exploreRuins();\n        this.exploreMart();\n        this.exploreShop();\n    }\n\n    checkArea(area: AreaData, expo: ExpoCurve) {\n        let goal = getAreaGoalDirct(area,expo)\n        if (area.investedDays >= goal) {\n            area.investedDays -= goal;\n            area.exploredCount ++;\n            return true;\n        } else return false;\n    }\n\n    exploreRuins () {\n        let area = this.data.areas.ruins;\n        let expo = AreaExpos.ruins;\n        let key = 'ruins';\n        \n        let done = this.checkArea(area,expo);\n        if (done) {\n            this.engine.adornments.getItem(key, area.exploredCount);\n        }\n    }\n\n    exploreMart () {\n        let area = this.data.areas.mart;\n        let expo = AreaExpos.mart;\n        let key = 'mart';\n        \n        let done = this.checkArea(area,expo);\n        if (done) {\n            this.engine.adornments.getItem(key, area.exploredCount);\n        }\n    }\n\n    exploreShop () {\n        let area = this.data.areas.shop;\n        let expo = AreaExpos.shop;\n        let key = 'shop';\n        \n        let done = this.checkArea(area,expo);\n        if (done) {\n            this.engine.adornments.getItem(key, area.exploredCount);\n        }\n    }\n\n    reset = () => {\n        this.engine.datamap.adornments.explorers = ExplorersData_init();\n    }\n\n}\n\nconst EXPLORER_SALARY = 10;\n\nexport const AreaExpos: ExpoObject = {\n    ruins: { coefficient: 4, initial: 365 },\n    mart: { coefficient: 2, initial: 365 * 10 },\n    shop: { coefficient: 3, initial: 365 * 100 },\n}\n\nexport function getAreaGoal (area: AreaData, areaExpoKey: string) {\n    return expoI_getCost(AreaExpos[areaExpoKey], area.exploredCount)\n}\n\nexport function getAreaETA (area: AreaData, areaExpoKey: string) {\n    let goal = expoI_getCost(AreaExpos[areaExpoKey], area.exploredCount)\n    let current = area.investedDays;\n    let remainder = goal - current;\n    let rate = area.assignedExplorers;\n    return Math.ceil(remainder/rate)\n}\n\nexport function getAreaGoalDirct (area: AreaData, areaExpo: ExpoCurve) {\n    return expoI_getCost(areaExpo, area.exploredCount)\n}\n\n\n\nexport function can_hire (data: Datamap) {\n    return data.prophetData.believers > data.adornments.explorers.explorerCount;\n}\n\nexport function availableExplorers (data:Datamap) {\n    let explorData = data.adornments.explorers;\n    return explorData.explorerCount - explorData.areas.ruins.assignedExplorers - explorData.areas.shop.assignedExplorers - explorData.areas.mart.assignedExplorers\n}\n\nexport function currentSalary (data:Datamap) {\n    let val = data.adornments.explorers.explorerCount * EXPLORER_SALARY\n    if (data.pantheon.wealth.c > 0) {\n        val = val * Math.pow(.95, data.pantheon.wealth.c)\n    } \n    return Math.floor(val);\n    \n}\n\nexport interface AreaData {\n    exploredCount: number,\n    investedDays: number,\n    assignedExplorers: number,\n    beingExplored: boolean,\n}\n\nexport function AreaData_init (): AreaData {\n    return {\n        exploredCount: 0,\n        investedDays: 0,\n        assignedExplorers: 0,\n        beingExplored: false,\n    }\n\n}\n\n\nexport interface ExplorersData {\n    explorerCount: number;\n    readyForMission: number;\n    areas: {\n        ruins: AreaData;\n        shop: AreaData;\n        mart: AreaData;\n    }\n}\n\nexport function ExplorersData_init(): ExplorersData {\n    return {\n        explorerCount: 0,\n        readyForMission: 0,\n        areas: {\n            ruins: AreaData_init(),\n            shop: AreaData_init(),\n            mart: AreaData_init(),\n        }\n    }\n}\n\nexport function show_explore_area (data:Datamap, areaKey: string) {\n    switch (areaKey) {\n        case 'mart':\n            return getAreaGoalDirct(data.adornments.explorers.areas.ruins, AreaExpos.ruins) > AreaExpos.mart.initial;\n            break;\n\n        case 'shop':\n            return getAreaGoalDirct(data.adornments.explorers.areas.mart, AreaExpos.mart) > AreaExpos.shop.initial;\n            break;\n    \n        default:\n            return true\n            break;\n    }\n}\n\nconst RUINS_STRS = {\n    key: 'ruins',\n    name: 'Ruins'\n}\n\nconst MART_STRS = {\n    key: 'mart',\n    name: 'Mart'\n}\n\nconst SHOP_STRS = {\n    key: 'shop',\n    name: 'Shop'\n}\n\nexport const AREA_STRS = {\n    RUINS_STRS, MART_STRS, SHOP_STRS\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_maxBuyCost, expoI_buyNCost, expoI_buyNextCost } from \"../interfaces/ExpoCurve\";\nimport { helper_prophet_exBeliever_harm, availablePeople, preachers_max_deovtion_gain, devotee_devotion_gain } from \"./Prophet\";\nimport { doDevotionUpgrade } from \"./PantheonBuys\";\nimport ITEM_POWERS from \"./ItemPowers\";\nimport { currentSalary } from \"./Exploring\";\n\nexport default class Followers extends AbstractModule {\n\n\n    get data() {\n        return this.engine.datamap.followers;\n    }\n\n    handle_followers_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'recruit':\n                this.handle_recruit_command(cmdArray)\n                break;\n\n            case 'upgrade':\n                this.handle_upgrade_command(cmdArray)\n                break;\n\n            case 'recruitparitioner':\n                this.recruitParitioner(cmdArray[2]);\n                break;\n\n            case 'recruitmaxparitioner':\n                this.recruitMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'recruithalfmaxparitioner':\n                this.recruitHalfMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'unlock':\n                this.handle_unlock_command(cmdArray);\n                break;\n\n            case 'divinity':\n                this.handle_divinity_command(cmdArray);\n                break;\n\n            case 'devotionupgrade':\n                doDevotionUpgrade(this.engine.datamap, cmdArray[2])\n                break;\n\n\n            default:\n                break;\n        }\n    }\n\n    handle_divinity_command = (cmdArray: string[]) => {\n        let data = this.engine.datamap;\n\n        Object.values(DP_Upgrades).forEach(dp => {\n            if (cmdArray[2] === dp_key(dp)) {\n                buy_divinityPurchase(data, dp)\n            }\n        })\n\n        if (cmdArray[2] === 'reset_toggle') {\n            this.data.DPUpgrades.reset = !this.data.DPUpgrades.reset\n        }\n\n    }\n\n    handle_recruit_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.recruit_preacher()\n                break;\n            case 'devotee':\n                this.recruit_devotee()\n                break;\n            case 'doorknocker':\n                this.recruit_doorknocker()\n                break;\n            case 'preachermax':\n                this.recruit_preacher_max()\n                break;\n            case 'devoteemax':\n                this.recruit_devotee_max()\n                break;\n            case 'doorknockermax':\n                this.recruit_doorknocker_max()\n                break;\n            case 'autotoggle':\n                this.engine.datamap.automation.auto_buyToNext = !this.engine.datamap.automation.auto_buyToNext\n            break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_upgrade_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.upgrade_preacher()\n                break;\n\n            case 'devotee':\n                this.upgrade_devotee();\n                break;\n\n            case 'doorknocker':\n                this.upgrade_doorknocker();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_unlock_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'adornments':\n                this.unlockAdornments();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    recruit_preacher_max = () => {\n        while (preacher_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preachers < this.engine.datamap.prophetData.congregation.old.preachers)) {\n            this.recruit_preacher();\n        }\n        while (preacher_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preacherLevel < this.engine.datamap.prophetData.congregation.old.preacherLevel)) {\n            this.upgrade_preacher();\n        }\n    }\n\n    recruit_doorknocker_max = () => {\n        while (doorknocker_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknocker < this.engine.datamap.prophetData.congregation.old.doorknocker)) {\n            this.recruit_doorknocker();\n        }\n        while (doorknocker_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknockerLevel < this.engine.datamap.prophetData.congregation.old.doorknockerLevel)) {\n            this.upgrade_doorknocker();\n        }\n    }\n\n    recruit_devotee_max = () => {\n        while (devotee_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devotee < this.engine.datamap.prophetData.congregation.old.devotee)) {\n            this.recruit_devotee();\n        }\n        while (devotee_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devoteeLevel < this.engine.datamap.prophetData.congregation.old.devoteeLevel)) {\n            this.upgrade_devotee();\n        }\n    }\n\n    recruit_preacher = () => {\n        if (preacher_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= preacher_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preachers++;\n    }\n\n    upgrade_preacher = () => {\n        if (preacher_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= preacher_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preacherLevel++;\n    }\n\n    recruit_devotee = () => {\n        if (devotee_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= devotee_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devotee++;\n    }\n\n    upgrade_devotee = () => {\n        if (devotee_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= devotee_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devoteeLevel++;\n    }\n\n    recruit_doorknocker = () => {\n        if (doorknocker_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= doorknocker_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknocker++;\n    }\n\n    upgrade_doorknocker = () => {\n        if (doorknocker_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= doorknocker_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknockerLevel++;\n    }\n\n    recruitParitioner(arg0: string) {\n        console.log('recruiting!');\n\n        let index = parseInt(arg0);\n        let amount = 1;\n        let cost = paritioner_cost(this.engine.datamap, index);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_maxBuyAmount(index, this.engine.datamap);\n        let cost = paritioner_buyNCost(index, this.engine.datamap, amount);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitHalfMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_buyHalfMax_amount(index, this.engine.datamap);\n        let cost = paritioner_buyNCost(index, this.engine.datamap, amount);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    dayTriggerParitioners(days: number) {\n        if (this.engine.datamap.prophetData.congregation.paritioners[0] > 0) this.proudDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[1] > 0) this.wealthDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[2] > 0) this.curiousDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[3] > 0) this.smartDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[4] > 0) this.dumbDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[5] > 0) this.badDay(days)\n    }\n\n    dailyBelieverGain(days:number) {\n        this.engine.datamap.prophetData.believers += this.data.DPUpgrades.dailyBelieverGain;\n    }\n\n    proudDay(days: number) {\n        this.engine.datamap.prophetData.believers += proudBeliever_believer_gain(this.engine.datamap) * days\n    }\n    wealthDay(days: number) {\n        this.engine.datamap.prophetData.congregation.USD += WealthyBeliever_USD_gain(this.engine.datamap) * days\n        this.engine.datamap.prophetData.believers += WealthyBeliever_Believer_gain(this.engine.datamap) * days\n    }\n    curiousDay(days: number) {\n        this.engine.datamap.prophetData.congregation.questions += this.engine.datamap.prophetData.congregation.paritioners[2] * days\n    }\n    smartDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity += this.engine.datamap.prophetData.congregation.paritioners[3] * days\n    }\n    dumbDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity -= this.engine.datamap.prophetData.congregation.paritioners[4] * days\n    }\n    badDay(days: number) {\n        this.engine.datamap.prophetData.ex_believers = Math.max(0, this.engine.datamap.prophetData.ex_believers - this.engine.datamap.prophetData.congregation.paritioners[5] * days)\n    }\n\n    unlockAdornments() {\n        let data = this.engine.datamap;\n        if (UnlockAdornments_able(data) === false) return;\n        else {\n            data.prophetData.devotion -= UnlockAdornments_cost(data)\n            data.followers.adornmentsUnlocked = true;\n        }\n    }\n}\n\nexport interface FollowerData {\n    faithfulCongregation: boolean;\n    adornmentsUnlocked: boolean;\n    devotedPrestige: number;\n    DPUpgrades: DPUpgrades_Data;\n}\n\n\nexport function followerDataInit() {\n    return {\n        faithfulCongregation: false,\n        adornmentsUnlocked: false,\n        devotedPrestige: 0,\n        DPUpgrades: DPUpgrades_Init()\n    }\n}\n\nexport interface DPUpgrades_Data {\n    reset: boolean;\n    dailyBelieverGain: number;\n    heavyHolyPower: number;\n    superHolyPump: number;\n    fasterRelicProduction: number;\n    monthMultiplier: number;\n    yearMultiplier: number;\n}\n\nexport function DPUpgrades_Init () {\n    return {\n        reset: false,\n        dailyBelieverGain: 0,\n        heavyHolyPower: 0,\n        superHolyPump: 0,\n        fasterRelicProduction: 0,\n        monthMultiplier: 0,\n        yearMultiplier: 0\n    }\n}\n\nexport function devotion_mult(data: Datamap) {\n    let base = Math.log(data.prophetData.devotion + 1) + 1;\n    base += base * data.holinessUpgrades.devotionEffectiveness;\n    return base\n\n    /**\n    let devotion = data.prophetData.devotion\n    const CUTOFF = 10000\n    let base = Math.sqrt(devotion) + 1\n    if (base > CUTOFF) {\n        let rest = Math.sqrt(Math.sqrt(devotion - CUTOFF * CUTOFF))\n        return rest + CUTOFF\n    }\n    return base\n    /**/\n}\n\n\n//clergy\n\n//preacher\n\nexport function preacher_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preachers;\n    return Math.pow(10, count) + 10;\n}\nfunction preacher_cmd_able(data: Datamap) {\n    return (data.prophetData.believers >= 1) && (data.prophetData.holiness > preacher_cost(data))\n}\nexport const recruit_preacher_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit preacher',\n    able: preacher_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function preacher_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preacherLevel;\n    return Math.pow(4, count) + 10;\n}\nfunction preacher_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > preacher_upgrade_cost(data))\n}\nexport const upgrade_preacher_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade preacher',\n    able: preacher_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n///devotee\n\nexport function devotee_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devotee + 1;\n    return Math.pow(3, count) + 5\n}\nfunction devotee_cmd_able(data: Datamap) {\n    return (data.prophetData.believers >= 1) && (data.prophetData.holiness > devotee_cost(data))\n}\nexport const recruit_devotee_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit devotee',\n    able: devotee_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function devotee_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devoteeLevel;\n    return Math.pow(5, count) + 5\n}\nfunction devotee_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > devotee_upgrade_cost(data))\n}\nexport const upgrade_devotee_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade devotee',\n    able: devotee_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n//door knocker\n\nexport function doorknocker_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknocker;\n    return Math.pow(2, count) + 10\n}\nfunction doorknocker_cmd_able(data: Datamap) {\n    return (data.prophetData.believers >= 1) && (data.prophetData.holiness > doorknocker_cost(data))\n}\nexport const recruit_doorknocker_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit doorknocker',\n    able: doorknocker_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function doorknocker_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknockerLevel;\n    return Math.pow(4, count) + 10\n}\nfunction doorknocker_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > doorknocker_upgrade_cost(data))\n}\nexport const upgrade_doorknocker_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade doorknocker',\n    able: doorknocker_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n//paritioners\n\nexport const ParitionerExpos: ExpoCurve[] = [\n    { coefficient: 1.02, initial: 1000 },\n    { coefficient: 1.04, initial: 1000000 },\n    { coefficient: 1.06, initial: 1000000000 },\n    { coefficient: 1.08, initial: 1000000000000 },\n    { coefficient: 1.10, initial: 1000000000000000 },\n    { coefficient: 1.12, initial: 1000000000000000000 },\n]\n\nexport const Paritioners: ParitionerStats[] = [\n    { name: 'Proud Believers', expo: ParitionerExpos[0] },\n    { name: 'Wealthy Believers', expo: ParitionerExpos[1] },\n    { name: 'Curious Believers', expo: ParitionerExpos[3] },\n    { name: 'Educated Believers', expo: ParitionerExpos[2] },\n    { name: 'Political Believers', expo: ParitionerExpos[4] },\n    { name: 'Violent Believers', expo: ParitionerExpos[5] },\n]\n\ninterface ParitionerStats {\n    expo: ExpoCurve;\n    name: string;\n}\n\nexport function paritioner_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.congregation.paritioners[index];\n    return expoI_getCost(Paritioners[index].expo, owned)\n}\n\nexport function paritioner_able(data: Datamap, index: number) {\n    let costable = paritioner_cost(data, index) <= data.prophetData.devotion\n    let peopleable =  availablePeople(data) > 0;\n    return costable && peopleable;\n}\nexport function paritioner_maxBuyAmount(index: number, data: Datamap) {\n    let costbound = expoI_maxBuyAmount(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n    let peopleBound = availablePeople(data);\n    return Math.min(costbound, peopleBound)\n}\n\nexport function paritioner_maxBuyCost(index: number, data: Datamap) {\n    let costbound = expoI_maxBuyCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n    let peopleBound = expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], paritioner_maxBuyAmount(index, data))\n    return Math.min(costbound, peopleBound)\n}\n\nexport function paritioner_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], n)\n}\n\nexport function paritioner_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], next)\n}\n\nexport function paritioner_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = paritioner_buyNCost(index, data, n);\n    return data.prophetData.devotion >= cost\n}\n\nexport function paritioner_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.congregation.paritioners[index];\n    let n = next - k % next;\n    return paritioner_canBuyN(index, data, n);\n}\n\nexport function paritioner_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = paritioner_maxBuyAmount(index, data);\n    let half = Math.floor(full / 2);\n    return half;\n}\n\nexport function paritioner_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = paritioner_buyHalfMax_amount(index, data);\n    return paritioner_buyNCost(index, data, half)\n}\n\nexport function proudBeliever_believer_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[0]\n    if (data.prophetData.devotionUpgrades.def.a) gain = gain * 2\n    gain += gain * data.prophetData.congregation.USDUpgrades.pamphlets\n    gain += gain * data.followers.DPUpgrades.dailyBelieverGain;\n    gain += gain * .10 * (data.pantheon.persuasion.a + data.pantheon.persuasion.b + data.pantheon.persuasion.c);\n\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain);\n    return Math.floor(realGain);\n}\n\nexport function WealthyBeliever_USD_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[1];\n    gain += gain * data.prophetData.congregation.USDUpgrades.tithe;\n    gain += gain * .10 * data.pantheon.wealth.a\n    gain += gain * .10 * (data.pantheon.greed.a + data.pantheon.greed.b + data.pantheon.greed.c);\n    gain += gain * ITEM_POWERS.usd_eq_mult_gain(data);\n\n    return Math.floor(gain);\n}\n\nexport function estimatedDaysPerDay (data: Datamap) {\n    let base = 1;\n    let certain = Math.floor( data.pantheon.time.c / 10 );\n    let percent = (data.pantheon.time.c % 10) / 10;\n    return base + certain + percent\n}\n\nexport function net_USD_gain (data:Datamap) {\n    let estimatedDays = estimatedDaysPerDay(data);\n    let gain = WealthyBeliever_USD_gain(data);\n    let salary = currentSalary(data);\n    return Math.floor((gain-salary) * estimatedDays);\n}\n\nexport function net_Devotion_gain (data:Datamap) {\n    let preacherGain = preachers_max_deovtion_gain(data)\n    let devoteeGain = devotee_devotion_gain(data)\n    let estimatedDays = estimatedDaysPerDay(data);\n    return Math.floor((preacherGain + devoteeGain) * estimatedDays)\n}\n\nexport function dailyBelieverMult (data :Datamap) {\n    let mult = 1;\n}\n\nexport function WealthyBeliever_Believer_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[1] / 100;\n    gain = gain * data.pantheon.wealth.b;\n    gain += gain * data.prophetData.congregation.USDUpgrades.tithe;\n    gain += gain * data.followers.DPUpgrades.dailyBelieverGain;\n    gain += gain * .10 * ( data.pantheon.greed.a + data.pantheon.greed.b + data.pantheon.greed.c);\n    gain += gain * .10 * (data.pantheon.persuasion.a + data.pantheon.persuasion.b + data.pantheon.persuasion.c);\n    \n    if (data.prophetData.devotionUpgrades.def.a) gain = gain * 2\n    \n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain);\n    return Math.floor(realGain);\n}\n\nexport function UnlockAdornments_cost(data: Datamap) {\n    return 1e10\n}\nexport function UnlockAdornments_able(data: Datamap) {\n    return data.prophetData.devotion >= UnlockAdornments_cost(data)\n}\nexport const UnlockAdornments: DecoupledCommand = {\n    command: 'followers unlock adornments',\n    name: \"Unlock Adornments\",\n    hidden: (data) => { return data.prophetData.congregation.paritioners[1] === 0 || data.followers.adornmentsUnlocked },\n    able: UnlockAdornments_able,\n}\n\nexport function getDivinity(data: Datamap) {\n    return data.followers.devotedPrestige\n}\n\nexport function availableDivinity(data: Datamap) {\n    return getDivinity(data) - spentDivinity(data);\n}\n\nexport function spentDivinity (data: Datamap) {\n    let base = 0;\n    let dpu = DP_Upgrades;\n    base += specificSpentDivinity(data, DP_Upgrades.DP_beliverGain);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_fasterRelicProduction);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_heavyHolyPower);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_monthMultiplier);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_superHolyPump);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_yearMultiplier);\n    return base;\n}\n\nexport function specificSpentDivinity (data: Datamap, dp : DivinityPurchase ) {\n    return expoI_buyNCost(dp.expo, 0, dp.countFn(data))\n}\n\nexport interface DivinityPurchase {\n    command: DecoupledCommand;\n    expo: ExpoCurve;\n    countFn: (data: Datamap) => number;\n    action: (data: Datamap) => void;\n    description: string;\n}\n\n\nexport function buy_divinityPurchase(data: Datamap, divinityPurcase: DivinityPurchase) {\n    if (dp_able(data, divinityPurcase) === false) { return; }\n    else {\n        divinityPurcase.action(data)\n    }\n}\n\nexport function divinityPurcase_getCost(data: Datamap, divinityPurcase: DivinityPurchase) {\n    return expoI_getCost(divinityPurcase.expo, divinityPurcase.countFn(data))\n\n}\n\nexport function dp_able(data: Datamap, dp: DivinityPurchase) {\n    return divinityPurcase_getCost(data, dp) <= availableDivinity(data);\n}\nexport function dp_key(dp: DivinityPurchase) {\n    return dp.command.command.split(' ')[2]\n}\n\nexport function tierOne_Divinity_hidden(data: Datamap): boolean {\n    return getDivinity(data) === 0\n}\n\n\n\nconst believerGain_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction believerGain_count(data: Datamap): number {\n    return data.followers.DPUpgrades.dailyBelieverGain;\n}\nexport const DP_beliverGain: DivinityPurchase = {\n    command: {\n        command: 'followers divinity believergain',\n        name: `x2 Daily Believer Gain`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: believerGain_expo,\n    countFn: believerGain_count,\n    description: 'Gain 100% increased believers each day',\n    action: (data) => {\n        data.followers.DPUpgrades.dailyBelieverGain++;\n    }\n}\n\nconst heavyHolyPower_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction heavyHolyPower_count(data: Datamap): number {\n    return data.followers.DPUpgrades.heavyHolyPower;\n}\nexport const DP_heavyHolyPower: DivinityPurchase = {\n    command: {\n        command: 'followers divinity heavyholypower',\n        name: `Holy Power Effect and Decay`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: heavyHolyPower_expo,\n    countFn: heavyHolyPower_count,\n    description: 'Holy Power decays 100% faster and gives 100% increased Relic Production Multiplier',\n    action: (data) => {\n        data.followers.DPUpgrades.heavyHolyPower++;\n    }\n}\n\nconst superHolyPump_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction superHolyPump_count(data: Datamap): number {\n    return data.followers.DPUpgrades.superHolyPump;\n}\nexport const DP_superHolyPump: DivinityPurchase = {\n    command: {\n        command: 'followers divinity superholypump',\n        name: `10x Holy Power from Prayer`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: superHolyPump_expo,\n    countFn: superHolyPump_count,\n    description: '900% more Holy Power from prayer',\n    action: (data) => {\n        data.followers.DPUpgrades.superHolyPump++;\n    }\n}\n\nconst fasterRelicProduction_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction fasterRelicProduction_count(data: Datamap): number {\n    return data.followers.DPUpgrades.fasterRelicProduction;\n}\nexport const DP_fasterRelicProduction: DivinityPurchase = {\n    command: {\n        command: 'followers divinity fasterrelicproduction',\n        name: `Faster Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: fasterRelicProduction_expo,\n    countFn: fasterRelicProduction_count,\n    description: '10% faster relic production',\n    action: (data) => {\n        data.followers.DPUpgrades.fasterRelicProduction++;\n    }\n}\n\nconst monthMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction monthMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.monthMultiplier;\n}\nexport const DP_monthMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity monthmultiplier',\n        name: `Month Based Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: monthMultiplier_expo,\n    countFn: monthMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with year based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.monthMultiplier++;\n    }\n}\n\nconst yearMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction yearMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.yearMultiplier;\n}\nexport const DP_yearMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity yearmultiplier',\n        name: `Year Based Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: yearMultiplier_expo,\n    countFn: yearMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with month based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.yearMultiplier++;\n    }\n}\n\n\nexport const DP_Upgrades = {\n    DP_beliverGain, DP_fasterRelicProduction, DP_heavyHolyPower,\n    DP_monthMultiplier, DP_superHolyPump, DP_yearMultiplier\n}","\nimport ExpoCurve, { expoI_buyNextCost, expoI_maxBuyCost, expoI_maxBuyAmount, expoI_getCost, expoI_buyNCost } from \"../interfaces/ExpoCurve\";\n\nimport { Datamap } from \"../Datamap\";\n\nexport const RelicUSDUpgradeExpos: ExpoCurve[] = [\n    { coefficient: 3.0, initial: 150 },\n    { coefficient: 2.8, initial: 140 },\n    { coefficient: 2.6, initial: 130 },\n    { coefficient: 2.4, initial: 120 },\n    { coefficient: 2.2, initial: 110 },\n    { coefficient: 2.0 , initial: 1000 },\n    { coefficient: 1.8, initial: 2000 },\n    { coefficient: 1.6, initial: 3000 },\n    { coefficient: 1.4, initial: 4000 },\n    { coefficient: 1.2, initial: 5000 },\n]\n\nexport function relicUSDupgrade_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.relicUSDUpgrades[index];\n    return expoI_getCost(RelicUSDUpgradeExpos[index], owned)\n}\n\nexport function relicUSDupgrade_able(data: Datamap, index: number) {\n    return relicUSDupgrade_cost(data, index) <= data.prophetData.congregation.USD\n}\nexport function relicUSDupgrade_maxBuyAmount(index: number, data: Datamap) {\n    return expoI_maxBuyAmount(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_maxBuyCost(index: number, data: Datamap) {\n    return expoI_maxBuyCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], n)\n}\n\nexport function relicUSDupgrade_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], next)\n}\n\nexport function relicUSDupgrade_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = relicUSDupgrade_buyNCost(index, data, n);\n    return data.prophetData.congregation.USD >= cost\n}\n\nexport function relicUSDupgrade_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.relicUSDUpgrades[index];\n    let n = next - k % next;\n    return relicUSDupgrade_canBuyN(index, data, n);\n}\n\nexport function relicUSDupgrade_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = relicUSDupgrade_maxBuyAmount(index, data);\n    let half = Math.floor(full/2);\n    return half;\n}\n\nexport function relicUSDupgrade_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = relicUSDupgrade_buyHalfMax_amount(index, data);\n    return relicUSDupgrade_buyNCost(index, data, half)\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\n\ninterface TimePantheonUpgradeSet extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\nconst TimePantheonUpgrades: TimePantheonUpgradeSet = {\n    key: 'time',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.time,\n}\nexport const ThisPantheon = TimePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% Faster Relics`,\n    }, expo: { coefficient: 100, initial:  1e20},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `Each upgrade provides .1 seconds per second more time for relics`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% Faster Days`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `Each upgrade provides .1 seconds per second more time for days`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% Chance for Double Days`,\n    }, expo: { coefficient: 100, initial: 1e30},\n    countFn: (data)=>ThisPantheon.getData(data).c,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).c += count;\n    },\n    description: `10% Chance for 2 Days worth of (positive and negative) effects instead of 1.`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number,\n    bonusDays: number;\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0,\n        bonusDays: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\ninterface ProductionPantheonUpgradeSet extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\nconst ProductionPantheonUpgrades: ProductionPantheonUpgradeSet = {\n    key: 'production',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.production,\n}\nexport const ThisPantheon = ProductionPantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10x Maximum Holy Power`,\n    }, expo: { coefficient: 100, initial:  1e20},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10x Maximum Holy Power`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `2x Holy Power Effectiveness`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `2x Holy Power Effectiveness`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `Add 1s to God of Production's power`,\n    }, expo: { coefficient: 100, initial: 1e30},\n    countFn: (data)=>ThisPantheon.getData(data).c,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).c += count;\n    },\n    description: `+1s of Relic Production from Prayer. Doesn't work without the God of Production`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'wealth',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.wealth,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% more USD from Wealthy Believers`,\n    }, expo: { coefficient: 100, initial:  1e20},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: ``,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `Wealthy Believers Also Recruit Believers`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: ``,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `5% less salary for explorer`,\n    }, expo: { coefficient: 100, initial: 1e30},\n    countFn: (data)=>ThisPantheon.getData(data).c,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).c += count;\n    },\n    description: ``,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'persuasion',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.persuasion,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% More Believers`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10% More Believers`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% More Believers`,\n    }, expo: { coefficient: 100, initial:  1e30},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% More Believers`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% more believers`,\n    }, expo: { coefficient: 100, initial: 1e35},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% More Believers`,\n\n}\n\nexport function godOfPersuasionBelieverGainMult(data:Datamap) {\n    \n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'maintainance',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.maintainance,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% more Piety from Relics`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10% more Piety from Relics`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% more Piety from Relics`,\n    }, expo: { coefficient: 100, initial:  1e30},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% more Piety from Relics`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% more Piety from Relics`,\n    }, expo: { coefficient: 100, initial: 1e35},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% more Piety from Relics`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'greed',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.greed,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% Stronger Wealthy Believers`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10% Stronger Wealthy Believers`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% Stronger Wealthy Believers`,\n    }, expo: { coefficient: 100, initial:  1e30},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Stronger Wealthy Believers`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% Stronger Wealthy Believers`,\n    }, expo: { coefficient: 100, initial: 1e35},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Stronger Wealthy Believers`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { ABC_bought } from \"../PantheonBuys\";\nimport { Datamap } from \"../../Datamap\";\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\n\n\nimport * as TIME from './Time';\nimport * as PRODUCTION from './Production';\nimport * as WEALTH from './Wealth';\n\nimport * as PERSUASION from './Persuasion';\nimport * as MAINTAINANCE from './Maintainance';\nimport * as GREED from './Greed';\n\nexport default {TIME, PRODUCTION, WEALTH, \n    PERSUASION, MAINTAINANCE, GREED}\n\nexport const PANTHEON_COST = 5e4;\nexport const UnlockPantheonCommand: DecoupledCommand2 = {\n    name: ()=>\"Unlock Pantheon Upgrades\",\n    hidden: (data)=>!ABC_bought(data) || data.pantheon.unlocked,\n    able: (data)=>data.prophetData.congregation.USD > PANTHEON_COST,\n    cost: ()=>PANTHEON_COST,\n    command: ()=>\"pantheon unlock\",\n    costName: 'USD',\n    tip: `Pantheon upgrades persist through Reincarnation`\n}\n","import ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_buyNCost } from \"../../interfaces/ExpoCurve\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\n\nimport * as TIME from './Time';\nimport * as PRODUCTION from './Production';\nimport * as WEALTH from './Wealth';\n\nimport * as PERSUASION from './Persuasion';\nimport * as MAINTAINANCE from './Maintainance';\nimport * as GREED from './Greed';\n\nimport { Datamap } from \"../../Datamap\";\nimport { PANTHEON_COST } from \"./Pantheons\";\n\n\nexport interface BasePanteonUpgradeSet {\n    key: string;\n    do: (data:Datamap, command: string) => void;\n}\n\nexport interface BasePantheonUpgrade {\n    expo: ExpoCurve,\n    command: DecoupledCommand2,\n    countFn: (data: Datamap) => number;\n    action: (data: Datamap, count: number) => void;\n    description: string;\n}\n\nexport function doPantheonUpgrade(data: Datamap, commands: string[]) {\n\n    switch (commands[1]) {\n        case 'unlock':\n            data.prophetData.congregation.USD -= PANTHEON_COST;\n            data.pantheon.unlocked = true;\n            break;\n\n        case TIME.ThisPantheon.key:\n            TIME.ThisPantheon.do(data, commands[2])\n            break;\n\n        case PRODUCTION.ThisPantheon.key:\n            PRODUCTION.ThisPantheon.do(data, commands[2])\n            break;\n\n        case WEALTH.ThisPantheon.key:\n            WEALTH.ThisPantheon.do(data, commands[2]);\n            break;\n\n        case PERSUASION.ThisPantheon.key:\n            PERSUASION.ThisPantheon.do(data, commands[2]);\n            break;\n\n            case MAINTAINANCE.ThisPantheon.key:\n                MAINTAINANCE.ThisPantheon.do(data, commands[2]);\n                break;\n\n                case GREED.ThisPantheon.key:\n            GREED.ThisPantheon.do(data, commands[2]);\n            break;\n\n        default:\n            break;\n    }\n}\n\nexport interface PantheonData {\n    unlocked: boolean;\n    \n    time: TIME.UpgradeData;\n    production: PRODUCTION.UpgradeData;\n    wealth: WEALTH.UpgradeData;\n\n    persuasion: PERSUASION.UpgradeData;\n    maintainance: MAINTAINANCE.UpgradeData;\n    greed: GREED.UpgradeData;\n}\n\nexport function PantheonData_init(): PantheonData {\n    return {\n        unlocked: false,\n        time: TIME.UpgradeData_init(), \n        production: PRODUCTION.UpgradeData_init(),\n        wealth : WEALTH.UpgradeData_init(),\n\n        persuasion : PERSUASION.UpgradeData_init(),\n        maintainance : MAINTAINANCE.UpgradeData_init(),\n        greed : GREED.UpgradeData_init(),\n    }\n}\n\n\n\nexport function buy_pantheonPurchase(data: Datamap, pantheonPurchase: BasePantheonUpgrade) {\n    if (pantheonPurchase_able(data, pantheonPurchase) === false) { return; }\n    else {\n        data.prophetData.piety -= pantheonPurchaseCost(data, pantheonPurchase)\n        pantheonPurchase.action(data, 1)\n    }\n}\n\nexport function pantheonPurchaseCost(data: Datamap, divinityPurcase: BasePantheonUpgrade) {\n    return expoI_getCost(divinityPurcase.expo, divinityPurcase.countFn(data))\n\n}\n\nexport function pantheonPurchase_able(data: Datamap, dp: BasePantheonUpgrade) {\n    return pantheonPurchaseCost(data, dp) <= data.prophetData.piety;\n}\n\nexport function pantheonPurchase_maxAmmount(data: Datamap, dp: BasePantheonUpgrade) {\n    return expoI_maxBuyAmount(dp.expo, dp.countFn(data),data.prophetData.piety);\n}\nexport function pantheonPurchase_maxCost(data: Datamap, dp: BasePantheonUpgrade) {\n    let ammount = pantheonPurchase_maxAmmount(data, dp);\n    return expoI_buyNCost(dp.expo, dp.countFn(data),ammount);\n}\n\nexport function buyMax_pantheonPurchase(data: Datamap, dp: BasePantheonUpgrade) {\n    let ammount = pantheonPurchase_maxAmmount(data,dp);\n    let cost = pantheonPurchase_maxCost(data,dp)\n\n        if (data.prophetData.piety >= cost) {\n            data.prophetData.piety -= cost;\n            dp.action(data, ammount);\n        }\n}","import ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_buyNCost } from \"./ExpoCurve\";\n\nimport { DecoupledCommand2 } from \"./ICommand\";\n\nimport { Datamap } from \"../Datamap\";\nimport { ReactNode } from \"react\";\n\nexport default interface ExpoCommand {\n    expo: ExpoCurve,\n    countFns: CountFns;\n    currencyFns: CurrencyFns;\n    \n    //command: DecoupledCommand2,\n    name: string;\n    command: string;\n    currencyName?: string;\n\n    hidden: (data: Datamap) => boolean;\n\n    change?: (data: Datamap) => string;\n    img?: string;\n    tip?: ReactNode;\n}\n\nexport interface CountFns {\n    get: (data: Datamap) => number;\n    gain: (data: Datamap, ammount: number) => void;\n}\n\nexport interface CurrencyFns {\n    get: (data: Datamap) => number;\n    spend: (data: Datamap, ammount: number) => void;\n}\n\nexport const CurrencyFn_USD: CurrencyFns = {\n    get: (data: Datamap) => data.prophetData.congregation.USD,\n    spend: (data: Datamap, ammount: number) => { data.prophetData.congregation.USD -= ammount }\n}\n\n\nexport function expoCommand_buy(data: Datamap, expoCommand: ExpoCommand) {\n    if (expoCommand_Able(data, expoCommand) === false) { return; }\n    else {\n        expoCommand.currencyFns.spend(data, expoCommand_Cost(data, expoCommand));\n        expoCommand.countFns.gain(data, 1);\n    }\n}\n\nexport function expoCommand_Cost(data: Datamap, expoCommand: ExpoCommand) {\n    return expoI_getCost(expoCommand.expo, expoCommand.countFns.get(data))\n}\n\nexport function expoCommand_Able(data: Datamap, ep: ExpoCommand) {\n    return expoCommand_Cost(data, ep) <= ep.currencyFns.get(data);\n}\n\nexport function expoCommand_maxAmmount(data: Datamap, ep: ExpoCommand) {\n    return expoI_maxBuyAmount(ep.expo, ep.countFns.get(data), ep.currencyFns.get(data));\n}\nexport function expoCommand_maxCost(data: Datamap, ep: ExpoCommand) {\n    let ammount = expoCommand_maxAmmount(data, ep);\n    return expoI_buyNCost(ep.expo, ep.countFns.get(data), ammount);\n}\n\nexport function expoCommand_buyMax(data: Datamap, ep: ExpoCommand) {\n    let ammount = expoCommand_maxAmmount(data,ep);\n    let cost = expoCommand_maxCost(data,ep)\n\n        if (ep.currencyFns.get(data) >= cost) {\n            ep.currencyFns.spend(data, cost );\n            ep.countFns.gain(data, ammount);\n        }\n}\n\n","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand, DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport ExpoCurve from \"../interfaces/ExpoCurve\";\nimport ExpoCommand, { CurrencyFn_USD } from \"../interfaces/ExpoCommand\";\n\n\nexport const USD_UpgradeTithe: ExpoCommand = {\n    name: `Invest in Tithe Extraction`,\n    command: `prophet usdupgrade tithe`,\n    currencyName: `USD`,\n    \n    countFns: {\n        get: (data) => data.prophetData.congregation.USDUpgrades.tithe,\n        gain: (data, ammount) => { data.prophetData.congregation.USDUpgrades.tithe += ammount }\n    },\n    expo: { initial: 100, coefficient: 15 },\n    currencyFns: CurrencyFn_USD,\n    tip: `Increase Effectiveness of Wealthy Believers`,\n\n    hidden: (data) => data.prophetData.congregation.paritioners[1] === 0,\n}\n\nexport const USD_Upgrade_Pamphlets: ExpoCommand = {\n    name: `Invest in 'Why Us?' Pamphlets`,\n    command: `prophet usdupgrade pamphlets`,\n    currencyName: `USD`,\n    \n    countFns: {\n        get: (data) => data.prophetData.congregation.USDUpgrades.pamphlets,\n        gain: (data, ammount) => { data.prophetData.congregation.USDUpgrades.pamphlets += ammount }\n    },\n    expo: { initial: 5000, coefficient: 300 },\n    tip: `Increase Effectiveness of Proud Believer`,\n    currencyFns: CurrencyFn_USD,\n\n    hidden: (data) => data.prophetData.congregation.USDUpgrades.tithe === 0,\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { getRandomInt, WORLD_POP } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport { piety_purchase_buy_congregation, piety_purchase_buy_reincarnation, piety_purchase_buy_holypower, holiness_holyPowerUpgrade_do, holiness_holyPumpUpgrade_do, holiness_maxHolyPowerUpgrade_do, holiness_believerRetention_do, holiness_exRelations_do, holiness_buildingMulti_do, holinessUpgradesInit, UnlockMiracles, holiness_devotionEffectiveness_do } from \"./PietyPurchases\";\nimport { devotion_mult, DP_Upgrades, DPUpgrades_Init } from \"./Followers\";\nimport { relicUSDupgrade_cost } from \"./USDRelicPurchases\";\nimport { DevotionUpgradeData, DevotionUpgradeData_init } from \"./PantheonBuys\";\nimport ITEM_POWERS from \"./ItemPowers\";\nimport { PantheonData_init } from \"./Pantheon/Types\";\nimport { expoCommand_buy, expoCommand_buyMax } from \"../interfaces/ExpoCommand\";\nimport { USD_UpgradeTithe, USD_Upgrade_Pamphlets } from \"./USDPurchases\";\n\nexport default class ProphetModule {\n\n    constructor(public engine: Engine) {\n\n    }\n\n    get data() {\n        return this.engine.datamap.prophetData;\n    }\n\n    processCommands(cmdArray: string[]) {\n        switch (cmdArray[1]) {\n            case 'pray':\n                this.pray();\n                break;\n\n            case 'proselytize':\n                this.proselytize();\n                break;\n\n            case 'preach':\n                this.preach();\n                break;\n\n            case 'relicupgrade':\n                this.upgradeRelic(cmdArray[2])\n                break;\n\n\n            case 'buyrelic':\n                this.buyRelic(cmdArray[2]);\n                break;\n\n            case 'buymaxrelic':\n                this.buyMaxRelic(cmdArray[2]);\n                break;\n\n            case 'buyto25relic':\n                this.buyToNRelic(cmdArray[2], 25);\n                break;\n\n            case 'setbuyrelic':\n                switch (cmdArray[2]) {\n                    case '1':\n                        this.data.relicsetbuy = 1;\n                        break;\n\n                    case '25':\n                        this.data.relicsetbuy = 25;\n                        break;\n\n                    case 'max':\n                        this.data.relicsetbuy = 99;\n\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            case 'prestige':\n                this.prestige();\n                break;\n\n            case 'devotedprestige':\n                this.devotedprestige();\n                break;\n\n            case 'congregate':\n                piety_purchase_buy_congregation(this.engine.datamap)\n                break;\n\n            case 'reincarnate':\n                piety_purchase_buy_reincarnation(this.engine.datamap)\n                break;\n\n            case 'holypower':\n                piety_purchase_buy_holypower(this.engine.datamap)\n                break;\n\n            case 'holypowerUpgrade':\n                holiness_holyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'holypumpupgrade':\n                holiness_holyPumpUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'maxholypowerupgrade':\n                holiness_maxHolyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'believerretentionupgrade':\n                holiness_believerRetention_do(this.engine.datamap);\n                break;\n\n            case 'exrelationsupgrade':\n                holiness_exRelations_do(this.engine.datamap);\n                break;\n\n            case 'bmupgrade':\n                holiness_buildingMulti_do(this.engine.datamap);\n                break;\n\n            case 'de_upgrade':\n                holiness_devotionEffectiveness_do(this.engine.datamap);\n                break;\n\n            case 'unlockmiracles':\n                this.engine.datamap.rocketData.unlocked = true;\n                if (UnlockMiracles.cost) this.engine.datamap.prophetData.piety -= UnlockMiracles.cost(this.engine.datamap);\n                break;\n\n            case 'usdupgrade':\n                switch (cmdArray[2]) {\n                    case 'tithe':\n                        expoCommand_buy(this.engine.datamap, USD_UpgradeTithe)\n                        break;\n\n                    case 'tithemax':\n                        expoCommand_buyMax(this.engine.datamap, USD_UpgradeTithe);\n                        break;\n\n                    case 'pamphlets':\n                        expoCommand_buy(this.engine.datamap, USD_Upgrade_Pamphlets)\n                        break;\n\n                    case 'pamphletsmax':\n                        expoCommand_buyMax(this.engine.datamap, USD_Upgrade_Pamphlets);\n                        break;\n                \n                    default:\n                        console.log('broken in prophet->usdupgrade');\n                        \n                        break;\n                }\n                break\n\n            default:\n                console.log('broke in prophet comand');\n\n                break;\n        }\n    }\n\n    upgradeRelic(arg0: string) {\n        let upgradeIndex = parseInt(arg0);\n        let cost = relicUSDupgrade_cost(this.engine.datamap, upgradeIndex);\n\n        if (this.data.congregation.USD >= cost) {\n            this.data.congregation.USD -= cost;\n            this.data.relicUSDUpgrades[upgradeIndex]++;\n        }\n    }\n\n\n    buyRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_getCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex]++;\n        }\n    }\n\n    buyMaxRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let ammount = relic_maxBuyAmount(relicIndex, this.engine.datamap)\n        let cost = relic_maxBuyCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += ammount;;\n        }\n    }\n\n    buyNRelic(arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, n)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += n;\n        }\n    }\n\n    buyToNRelic(arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let remainder = this.data.relics[relicIndex] % n;\n        let needToN = n - remainder;\n\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, needToN)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += needToN;\n        }\n    }\n\n    dayTrigger(days: number) {\n\n        \n\n        if (this.data.holyPower > 0) this.holyDump(days);\n\n        if (this.data.congregation.doorknocker > 0) this.doorknockers(days);\n        this.engine.followers.dayTriggerParitioners(days);\n        if (this.data.believers > 0) this.believersLeave(days);\n\n\n        if (this.data.congregation.preachers > 0) this.preachers(days);\n        if (this.data.congregation.devotee > 0) this.devotees(days);\n\n        if (this.engine.datamap.automation.auto_buyToNext && this.data.congregation.unlocked) {\n            this.engine.followers.recruit_doorknocker_max();\n            this.engine.followers.recruit_devotee_max();\n            this.engine.followers.recruit_preacher_max();\n        }\n        \n    }\n\n    devotees(days: number) {\n        this.data.devotion += devotee_devotion_gain(this.engine.datamap) * days\n    }\n\n    doorknockers(days: number) {\n        this.data.believers += (doorknocker_beliver_gain(this.engine.datamap)) * days\n    }\n\n    believersLeave = (days: number) => {\n        for (let i = 0; i < days; i++) {\n\n            let loss = getRandomInt(0, helper_prophet_maxBelieversDecay(this.engine.datamap));\n            let boundLoss = Math.min(this.data.believers, loss)\n            this.data.ex_believers += boundLoss;\n            this.data.believers -= boundLoss;\n\n        }\n    }\n\n    holyDump = (days: number) => {\n        if (this.data.devotionUpgrades.def.b) return;\n        this.data.holyPower = Math.max(this.data.holyPower - (24 * (1 + this.engine.datamap.followers.DPUpgrades.heavyHolyPower)), 0);\n    }\n\n    preachers(days: number) {\n        let gain = getRandomInt(0, preachers_max_deovtion_gain(this.engine.datamap));\n        this.data.devotion += gain * days;\n    }\n\n    preach() {\n        this.data.devotion += getRandomInt(0, preach_max_deovtion_gain(this.engine.datamap));\n    }\n\n    proselytize() {\n        if (this.engine.datamap.prophetData.holiness === 0) return;\n        this.engine.datamap.prophetData.holiness--;\n        let gain = getRandomInt(0, helper_prophet_maxBeliverGainNet(this.engine.datamap));\n        this.data.believers += gain;\n    }\n\n    \n    pray() {\n        //console.log('PRAY');\n        \n        this.data.piety++;\n        if (this.data.holyPowerUnlocked) {\n            this.holyPump();\n        }\n        if (this.data.devotionUpgrades.abc.b) {\n            let delta = 1000;\n            delta += delta * this.engine.datamap.pantheon.production.c\n            this.processDetla(delta);\n        }\n        //add to item powers oops \n        ITEM_POWERS.prayer_upgrades(this.engine.datamap, this.engine.prophet.processDetla);\n        \n    }\n\n    prayCount (count: number) {\n        //console.log(`PRAY ${count}`);\n\n        this.data.piety += count;\n\n        if (this.data.holyPowerUnlocked) {\n            this.holyPump(count);\n        }\n        if (this.data.devotionUpgrades.abc.b) {\n            let delta = 1000 * count;\n            delta += delta * this.engine.datamap.pantheon.production.c\n            this.processDetla(delta);\n        }\n        //add to item powers oops \n        ITEM_POWERS.prayer_upgrades(this.engine.datamap, this.engine.prophet.processDetla,count);\n    }\n\n    holyPump = (count: number = 1)  => {\n        let base = 10 * count;\n        let doubled = this.engine.datamap.holinessUpgrades.holyPumpUpgrade;\n        let tenned = this.engine.datamap.followers.DPUpgrades.superHolyPump;\n        base += base * doubled;\n        base += base * tenned * 9;\n        this.data.holyPower = Math.min(\n                this.data.holyPower + base,\n                //Math.floor(this.data.holyPower + 1 * Math.pow(2, this.engine.datamap.holinessUpgrades.holyPumpUpgrade) * Math.pow(2, this.engine.datamap.followers.DPUpgrades.superHolyPump)) , \n                prophet_maxHolyPower(this.engine.datamap)\n            );\n    }\n\n    processDetla=(delta: number)=> {\n\n        delta = delta * relicDeltaMult(this.engine.datamap)\n\n        RELICS.forEach((relicData, relicIndex) => {\n            if (this.data.relics[relicIndex] === 0) return;\n            this.data.relicTimers[relicIndex] += delta;\n            let timeCost = relic_getTime(relicIndex);\n\n            if (this.data.relicTimers[relicIndex] >= timeCost) {\n                let count = Math.floor(this.data.relicTimers[relicIndex] / timeCost)\n                this.data.relicTimers[relicIndex] -= timeCost * count;\n                this.data.piety += relic_getProduction(relicIndex, this.engine.datamap) * count\n            }\n        });\n\n        if (this.data.piety > this.data.maxPiety) {\n            this.data.maxPiety = this.data.piety;\n        }\n\n    }\n\n    pietyDecay(delta: number) {\n        //lookup math to simulate this over time\n        let decay = (delta / 1000) * (helper_prophet_pietyDecay(this.engine.datamap));\n        decay = Math.floor(decay);\n        return decay;\n    }\n\n    prestige = () => {\n        \n        let ppgain = prophet_prestige_gain(this.engine.datamap);\n        if (ppgain === 0 || this.data.prestigeUnlocked === false) return;\n        \n        let oldData = this.data;\n        \n        let itemDevotion = 0;\n\n        let freeQs = Math.min(this.engine.datamap.prophetData.congregation.paritioners[2], Math.floor(Math.sqrt(this.engine.datamap.answers.superAnswerAnswers)))\n\n        /*\n        if (this.engine.datamap.adornments.equiped.robe) {\n            if (this.engine.datamap.adornments.equiped.robe.origin === 'ruins') {\n                itemDevotion = Math.floor(this.engine.datamap.adornments.equiped.robe.level * .01 * oldData.devotion);\n            }\n        }\n        */\n\n\n        let oldMult = oldData.holiness;\n        let newCount = this.data.save.reincarnationCount + 1;\n        let selected = this.data.relicsetbuy;\n        let newOld = {\n            preachers: this.data.congregation.preachers,\n            preacherLevel: this.data.congregation.preacherLevel,\n            devotee: this.data.congregation.devotee,\n            devoteeLevel: this.data.congregation.devoteeLevel,\n            doorknocker: this.data.congregation.doorknocker,\n            doorknockerLevel: this.data.congregation.doorknockerLevel,\n        }\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.data.holiness = oldMult + Math.floor(ppgain);\n        if (this.data.holiness < 0) this.data.holiness = 0;\n        this.data.startingHoliness = this.data.holiness\n        this.data.relicsetbuy = selected;\n        this.data.save.reincarnationCount = newCount;\n        this.data.congregation.old = newOld;\n        this.data.devotion += itemDevotion\n        this.data.congregation.paritioners[2] = freeQs;\n\n        this.prestigeCleanup();\n    }\n\n    devotedprestige = () => {\n        let newCount = this.data.save.reincarnationCount + 1;\n\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.engine.datamap.followers.devotedPrestige++;\n        this.data.save.reincarnationCount = newCount;\n        \n        this.prestigeCleanup();\n        this.hardCleanup();\n    }\n    \n    hardCleanup = () => {\n        this.engine.datamap.pantheon = PantheonData_init();\n        this.engine.datamap.holinessUpgrades = holinessUpgradesInit()\n    }\n\n    prestigeCleanup = () => {\n        this.engine.datamap.gameTime.currentRun.time = 0;\n        this.engine.datamap.nav.mainArea = 0\n        this.engine.gameTime.reset();\n        this.engine.rocket.reset();\n        this.engine.answers.reset();\n        this.engine.adornments.exploring.reset();\n        if (this.engine.datamap.followers.DPUpgrades.reset) {\n            this.engine.datamap.followers.DPUpgrades = DPUpgrades_Init();\n        }\n    }\n}\n\nexport function relicDeltaMult(data:Datamap){\n    let mult = 1;\n    \n    mult += (.1 * data.followers.DPUpgrades.fasterRelicProduction)\n    mult += (.1 * data.pantheon.time.a);\n\n    return mult;\n}\n\nexport function availablePeople (data:Datamap) {\n    let congregation = data.prophetData.congregation\n    return WORLD_POP - data.prophetData.believers - data.prophetData.ex_believers - congregation.devotee - congregation.doorknocker - congregation.preachers\n}\n\nexport function preach_max_deovtion_gain(data: Datamap) {\n    return data.prophetData.believers;\n}\n\nexport function devotee_devotion_gain(data: Datamap) {\n    let count = data.prophetData.congregation.devotee\n    let power = data.prophetData.congregation.devoteeLevel + 1;\n    count = count * ITEM_POWERS.effective_devotee_mult(data);\n    power = power * ITEM_POWERS.devotee_power_mult(data);    \n    return count * power\n}\n\nexport function doorknocker_beliver_gain(data: Datamap) {\n    let gain = data.prophetData.congregation.doorknocker * (1 + data.prophetData.congregation.doorknockerLevel)\n    gain += gain * data.followers.DPUpgrades.dailyBelieverGain;\n    if (data.prophetData.devotionUpgrades.def.a) gain = gain * 2\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain)\n    return realGain;\n\n}\n\nexport function preachers_max_deovtion_gain(data: Datamap) {\n    let base = preach_max_deovtion_gain(data) \n    let basetotal = base * data.prophetData.congregation.preachers \n    let totalWithLevels = basetotal * (1 + data.prophetData.congregation.preacherLevel);\n    let toalWithEquipment = totalWithLevels * (1 + ITEM_POWERS.devotion_eq_mult_gain(data))\n    return toalWithEquipment;\n}\n\nexport function helper_prophet_maxBelieversDecay(data: Datamap) {\n    let total_power = helper_prophet_size_believerDecay(data) + helper_prophet_exBeliever_believerDecay(data);\n\n    return Math.floor(total_power)\n\n}\n\n\nexport function helper_prophet_size_believerDecay(data: Datamap) {\n    let size = data.prophetData.believers;\n    let power = size / 10;\n    let total_power = power / (1 + data.holinessUpgrades.believerRetention);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGain(data: Datamap) {\n    return Math.floor(Math.log(1 + data.prophetData.piety))\n}\n\nexport function helper_prophet_exBeliever_harm(data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex / 10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_exBeliever_believerDecay(data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex / 10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    total_power = total_power / (1 + data.holinessUpgrades.believerRetention);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGainNet(data: Datamap) {\n    let gain = helper_prophet_maxBeliverGain(data);\n    let harm = helper_prophet_exBeliever_harm(data);\n    return Math.max(0, gain - harm)\n}\n\nexport function helper_prophet_pietyDecay(data: Datamap) {\n    return Math.floor(data.prophetData.piety / 10000) * data.gameTime.year;\n}\n\nexport function prophet_maxHolyPower(data: Datamap) {\n    let relics = data.prophetData.relics;\n    let sum = relics[0] + relics[1] + relics[2] + relics[3] + relics[4];\n    sum = sum * (1 + data.holinessUpgrades.maxHolyPowerUpgrade)\n    sum += sum * data.pantheon.production.a * 10\n    return sum;\n}\n\nexport interface I_PropheData {\n    piety: number;\n    devotionUpgrades: DevotionUpgradeData;\n    maxPiety: number;\n    believers: number;\n    ex_believers: number;\n    relics: number[];\n    relicsetbuy: number;\n    relicTimers: number[];\n    relicUSDUpgrades: number[];\n    holiness: number;\n    startingHoliness: number;\n    prestigeUnlocked: boolean;\n    holyPower: number;\n    devotion: number;\n    holyPowerUnlocked: boolean;\n    save: {\n        reincarnationCount: number,\n    }\n    congregation: {\n        unlocked: boolean;\n        old: {\n            preachers: number;\n            preacherLevel: number;\n            devotee: number;\n            devoteeLevel: number;\n            doorknocker: number;\n            doorknockerLevel: number;\n        }\n        preachers: number;\n        preacherLevel: number;\n        devotee: number;\n        devoteeLevel: number;\n        doorknocker: number;\n        doorknockerLevel: number;\n        USDUpgrades : {\n            tithe: number,\n            pamphlets: number,\n        }\n\n        paritioners: number[];\n\n        USD: number;\n        questions: number;\n        crediblity: number;\n\n\n\n    }\n}\n\nexport function init_ProphetData(): I_PropheData {\n    return {\n        piety: 0,\n        devotionUpgrades: DevotionUpgradeData_init(),\n        maxPiety: 0,\n        believers: 0,\n        relicsetbuy: 1,\n        ex_believers: 0,\n        relics: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        relicTimers: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        relicUSDUpgrades: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        save: {\n            reincarnationCount: 0\n        },\n        holiness: 0,\n        startingHoliness: 0,\n        holyPowerUnlocked: false,\n        holyPower: 0,\n        devotion: 0,\n        prestigeUnlocked: false,\n        congregation: {\n            unlocked: false,\n            USDUpgrades: {\n                tithe: 0,\n                pamphlets: 0,\n            },\n            preachers: 0,\n            preacherLevel: 0,\n            devotee: 0,\n            devoteeLevel: 0,\n            doorknocker: 0,\n            doorknockerLevel: 0,\n            old: {\n                preachers: 0,\n                preacherLevel: 0,\n                devotee: 0,\n                devoteeLevel: 0,\n                doorknocker: 0,\n                doorknockerLevel: 0,\n            },\n\n            paritioners: [0, 0, 0, 0, 0, 0],\n\n            USD: 0,\n            crediblity: 0,\n            questions: 0\n\n        }\n    }\n}\n\n\ninterface KongGenerator {\n    name: string;\n    initialCost: number;\n    coefficient: number;\n    initialTime: number;\n    initialRevenue: number;\n}\n\nconst LemonadeStand: KongGenerator = {\n    name: \"Holy Sponge\",\n    initialCost: 5,\n    coefficient: 1.12,\n    initialTime: 1,\n    initialRevenue: 1,\n}\n\nconst NewspaperDelivery: KongGenerator = {\n    name: \"Holy Thorn\",\n    initialCost: 500,\n    coefficient: 1.15,\n    initialTime: 8,\n    initialRevenue: 160,\n}\n\nconst CarWash: KongGenerator = {\n    name: \"Holy Nail\",\n    initialCost: 50000,\n    coefficient: 1.14,\n    initialTime: 24,\n    initialRevenue: 7400,\n}\n\nconst PizzaDelivery: KongGenerator = {\n    name: \"Holy Lance\",\n    initialCost: 5000000,\n    coefficient: 1.13,\n    initialTime: 2 * 24,\n    initialRevenue: 53200,\n}\n\nconst DonutShop: KongGenerator = {\n    name: \"True Cross\",\n    initialCost: 5000000000,\n    coefficient: 1.12,\n    initialTime: 7 * 24,\n    initialRevenue: 988400,\n}\n\n\nconst FakeNews1: KongGenerator = {\n    name: \"SuperSponge\",\n    initialCost: 1e15,\n    coefficient: 1.22,\n    initialTime: 1,\n    initialRevenue: 4e5,\n}\n\nconst FakeNews2: KongGenerator = {\n    name: \"Crown of Thorns\",\n    initialCost: 1e18,\n    coefficient: 1.22,\n    initialTime: 8,\n    initialRevenue: 16e6,\n}\n\nconst FakeNews3: KongGenerator = {\n    name: \"Holy Nailgun\",\n    initialCost: 1e21,\n    coefficient: 1.22,\n    initialTime: 24,\n    initialRevenue: 64e7,\n}\n\nconst FakeNews4: KongGenerator = {\n    name: \"Holier Lance\",\n    initialCost: 1e24,\n    coefficient: 1.22,\n    initialTime: 2 * 24,\n    initialRevenue: 128e8,\n}\n\nconst FakeNews5: KongGenerator = {\n    name: \"Inverted Cross\",\n    initialCost: 1e27,\n    coefficient: 1.22,\n    initialTime: 7 * 24,\n    initialRevenue: 256e9,\n}\n\n\nexport const RELICS = [LemonadeStand, NewspaperDelivery, CarWash, PizzaDelivery, DonutShop,\n    FakeNews1, FakeNews2, FakeNews3, FakeNews4, FakeNews5]\n\nexport function relic_getCost(relicIndex: number, data: Datamap) {\n    let relicData = RELICS[relicIndex];\n\n    let owned = data.prophetData.relics[relicIndex];\n    let cost_base = relicData.initialCost;\n    let coefficient = relicData.coefficient;\n\n    return Math.floor(cost_base * Math.pow(coefficient, owned))\n}\n\nexport function relic_canBuy(relicIndex: number, data: Datamap) {\n    let cost = relic_getCost(relicIndex, data);\n    return data.prophetData.piety >= cost;\n}\n\nexport function relic_getTime(relicIndex: number) {\n    return RELICS[relicIndex].initialTime * 1000;\n}\n\nexport function relic_getProduction(relicIndex: number, data: Datamap) {\n    let val = Math.floor(\n        data.prophetData.relics[relicIndex] *\n        RELICS[relicIndex].initialRevenue *\n        relic_getProductionMulti(relicIndex, data) *\n        holiness_mult(data) *\n        relic_holyPowerMulti(data) *\n        devotion_mult(data) *\n        reincation_mult(data) *\n        special_relic_mult(relicIndex, data) *\n        item_relic_mult(relicIndex, data) * \n        pantheon_piety_mult(data)\n    )\n    return val\n}\n\nfunction pantheon_piety_mult (data: Datamap) {\n    let mult = 1\n    mult += .10 * (data.pantheon.maintainance.a + data.pantheon.maintainance.b + data.pantheon.maintainance.c);\n    return mult;\n}\n\nexport function item_relic_mult(index:number, data :Datamap) {\n    let mult = 1;\n    mult += ITEM_POWERS.piety_eq_mult_gain(data);\n    return mult;\n}\n\nexport function special_relic_mult(index: number, data: Datamap) {\n    let mult = 1;\n    mult += time_relic_mult(data)\n    if (data.prophetData.devotionUpgrades.abc.c) mult = mult * (index + 1);\n    if (data.prophetData.devotionUpgrades.def.c) mult = mult * (index + 1);\n    return mult;\n}\n\nexport function time_relic_mult(data: Datamap) {\n    return year_relic_mult(data) + month_relic_mult(data)\n}\n\nexport function year_relic_mult(data: Datamap) {\n    return data.followers.DPUpgrades.yearMultiplier * data.gameTime.year\n}\n\nexport function month_relic_mult(data: Datamap) {\n    return data.followers.DPUpgrades.monthMultiplier * data.gameTime.month\n}\n\nexport function holiness_mult(data: Datamap) {\n    return CALC_holy_mult(data.prophetData.startingHoliness)\n}\n\nexport function reincation_mult(data: Datamap) {\n    return (data.prophetData.save.reincarnationCount + 1) * reincation_mult_from_superPrestiges(data)\n}\n\nexport function reincation_mult_from_superPrestiges (data:Datamap) {\n    return data.followers.devotedPrestige + 1\n}\n\nfunction CALC_holy_mult(holiness: number) {\n    //return Math.log(holiness + 1)\n    \n    const CUTOFF = 10000\n    let base = Math.sqrt(holiness) + 1\n    if (base > CUTOFF) {\n        let rest = Math.sqrt(Math.sqrt(holiness - CUTOFF * CUTOFF))\n        return rest + CUTOFF\n    }\n    return base\n}\n\nexport function next_holiness_mult(data: Datamap) {\n    return CALC_holy_mult(data.prophetData.holiness + prophet_prestige_gain(data))\n}\n\nexport function relic_getProductionPerecond(relicIndex: number, data: Datamap) {\n    return Math.floor(relic_getProduction(relicIndex, data) / RELICS[relicIndex].initialTime * relicDeltaMult(data))\n}\n\nexport function net_Piety_gain (data:Datamap) {\n    let prod = relic_getAllProductionPerecond(data);\n    return prod;\n}\n\nexport function daily_Piety_prayer_gain (data:Datamap) {\n    return data.answers.pray;\n}\n\nexport function prayer_Piety_seconds_gain (data:Datamap) {\n    let secondsFromPrayer = 0;\n    if (data.prophetData.devotionUpgrades.abc.b) {\n        secondsFromPrayer += data.pantheon.production.c\n    }\n    let eq = data.adornments.equiped;\n    if (eq.cane) {\n        if (eq.cane.origin == 'shop') {\n            secondsFromPrayer += eq.cane.level\n        }\n    }\n    return secondsFromPrayer; \n}\n\nexport function relic_getAllProductionPerecond(data: Datamap) {\n    let deltamult = relicDeltaMult(data)\n    let prodSum = (\n        (relic_getProduction(0, data) / RELICS[0].initialTime) + \n        (relic_getProduction(1, data) / RELICS[1].initialTime) + \n        (relic_getProduction(2, data) / RELICS[2].initialTime) + \n        (relic_getProduction(3, data) / RELICS[3].initialTime) + \n        (relic_getProduction(4, data) / RELICS[4].initialTime) + \n   \n        (relic_getProduction(5, data) / RELICS[5].initialTime) + \n        (relic_getProduction(6, data) / RELICS[6].initialTime) + \n        (relic_getProduction(7, data) / RELICS[7].initialTime) + \n        (relic_getProduction(8, data) / RELICS[8].initialTime) + \n        (relic_getProduction(9, data) / RELICS[9].initialTime)\n    )\n    let prodTimesDeltamult = prodSum * deltamult;\n    return Math.floor(prodTimesDeltamult)\n}\n\nexport function relic_holyPowerMulti(data: Datamap) {\n    let HPPower = Math.log(data.prophetData.holyPower + 1);\n    let mult1 = data.holinessUpgrades.holypowerUpgrade + 1;\n    let mult2 = data.followers.DPUpgrades.heavyHolyPower + 1;\n    let mult3 = data.pantheon.production.b + 1;\n    let val = HPPower * mult1 * mult2 * mult3;\n    if (data.answers.holypower) val += val * data.answers.holypower\n    val = Math.floor(val);\n    return val + 1\n}\n\nexport const PRODMULTIPER25 = 1.5\n\nexport function Building_Multi(data: Datamap, index: number) {\n    return 1.5 + (.1 * (data.holinessUpgrades.buildingMulti + data.prophetData.relicUSDUpgrades[index]))\n}\n\nexport function relic_getProductionMulti(relicIndex: number, data: Datamap) {\n    return Math.pow(Building_Multi(data, relicIndex), Math.floor(data.prophetData.relics[relicIndex] / 25))\n}\n\nexport function relic_maxBuyAmount(relicIndex: number, data: Datamap) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n    let c = data.prophetData.piety;\n\n    let logresult = Math.log(1 + ((c * (r - 1)) / (b * Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}\n\nexport function prophet_prestige_gain(data: Datamap) {\n    return Math.floor(Math.sqrt(Math.sqrt(data.prophetData.maxPiety) / 100))\n}\n\nexport function relic_maxBuyCost(relicIndex: number, data: Datamap) {\n\n    let n = relic_maxBuyAmount(relicIndex, data);\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_buyNCost(relicIndex: number, data: Datamap, n: number) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n\n    return Math.floor(b * (Math.pow(r, k) * (Math.pow(r, n) - 1)) / (r - 1))\n}\n\nexport function relic_buyNextCost(relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_canBuyN(relicIndex: number, data: Datamap, n: number) {\n    let cost = relic_buyNCost(relicIndex, data, n);\n    return data.prophetData.piety >= cost\n}\n\nexport function relic_canBuyNext(relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_canBuyN(relicIndex, data, n);\n}\n\nexport const CMD_prophet_pray: DecoupledCommand = {\n    name: \"(P)ray\",\n    command: 'prophet pray',\n}\n\nexport const CMD_prophet_buymax: DecoupledCommand = {\n    name: \"(M)ax Relics\",\n    command: 'keypress m',\n}\n\nexport const CMD_prophet_buymaxreverse: DecoupledCommand = {\n    name: \"Max Relics Reversed (N)\",\n    command: 'keypress n',\n}\n\nexport const CMD_prophet_proselytize: DecoupledCommand = {\n    name: \"Proselytize\",\n    command: 'prophet proselytize',\n}\n\nexport const CMD_prophet_preach: DecoupledCommand = {\n    name: \"Preach\",\n    command: 'prophet preach',\n}\n\nfunction can_devotedPrestige(data: Datamap) {\n    return data.prophetData.devotion >= devotedPrestige_cost(data);\n}\n\nexport function devotedPrestige_cost(data: Datamap) {\n    return 1e8 * Math.pow(69.69, data.followers.devotedPrestige);\n}\n\nfunction hide_devotedPrestige(data: Datamap) {\n    return (data.prophetData.congregation.paritioners[1] === 0) && (data.followers.devotedPrestige === 0)\n}\n\nexport const CMD_prophet_devotedPrestige: DecoupledCommand = {\n    name: \"Devoted Reincarnation\",\n    command: 'prophet devotedprestige',\n    able: can_devotedPrestige,\n    hidden: hide_devotedPrestige,\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { Datamap } from \"../Datamap\";\nimport { getRandomInt } from \"../util\";\n\nexport default class GameTime {\n\n    constructor(public engine: Engine) {\n\n    }\n    \n    get data () {\n        return this.engine.datamap.gameTime;\n    }\n\n    reset = () => {\n        this.engine.datamap.gameTime = GameTimeInit();\n    }\n\n    static get requiredMS () {\n        return 24000;\n    }\n    static maxDays = 30;\n    static maxMonths = 12;\n\n\n    processDelta = (delta: number) => {\n        this.data.currentRun.time += delta;\n        \n\n        if (this.engine.datamap.prophetData.devotionUpgrades.abc.a) {\n            delta = delta * 2;    \n        }\n        if (this.engine.datamap.pantheon.time.b) {\n            delta = delta * (1 + .1 * this.engine.datamap.pantheon.time.b);\n        }\n   \n\n        let mscost = GameTime.requiredMS;\n        this.data.msprogress += delta;\n        if (this.data.msprogress >= mscost) {\n            this.passDayAction();\n        }\n    }\n\n    processCommands = (commands: string[]) => {\n        switch (commands[1]) {\n            case 'passday':\n                this.passDay();\n                break;\n\n            case 'eatday':\n                this.eatDay();\n                break;\n        \n            default:\n                console.log('error in gametime processCommands')\n                break;\n        }\n    }\n\n    passDayAction = () => {\n\n        \n        \n        let daysForTriggers = Math.floor(this.data.msprogress / GameTime.requiredMS)\n        \n        //console.log(`skipping ${daysForTriggers} days worth of triggers because my code is garbage, sorry`);\n        \n        this.dayTriggers(daysForTriggers);\n        \n        this.multiday();\n        /*\n        this.data.day ++;\n        if (this.data.day > GameTime.maxDays) {\n            this.data.day -= GameTime.maxDays;\n            this.data.month ++; \n            if (this.data.month > GameTime.maxMonths) {\n                this.data.month -= GameTime.maxMonths;\n                this.data.year ++;\n            }\n        }\n        */\n\n\n    }\n\n    multiday = () => {\n        let mscost = GameTime.requiredMS;\n        let startms = this.data.msprogress;\n\n        let elapsed_days = Math.floor(this.data.msprogress / mscost);\n        this.data.msprogress = this.data.msprogress % GameTime.requiredMS;\n        \n        let totalDays = elapsed_days + this.data.day;\n        this.data.day = ((totalDays - 1) % 30) + 1;\n        \n        let elapased_months = Math.floor((totalDays - 1) / 30);\n        \n        let totalMonths = this.data.month + elapased_months;\n        this.data.month = ((totalMonths- 1)%12)+1;\n        \n        let gainedYears = Math.floor((totalMonths - 1) / 12)\n        this.data.year +=  gainedYears;\n        \n        //console.log('multiday!', startms, elapsed_days, elapased_months, gainedYears);\n        if (elapased_months > 0 && this.engine.datamap.offline.happening === false && this.engine.datamap.autosave === true) {\n            this.engine.save(); \n        }\n\n    }\n\n    dayTriggers(days: number) {\n\n        let baseBonus = Math.floor( this.engine.datamap.pantheon.time.c / 10 );\n        let rngGoal = this.engine.datamap.pantheon.time.c % 10;\n\n        //need to get rid of all of this//\n        let i = 0\n        for (i = 0; i < days; i++) {\n            \n            let rng = getRandomInt(1,10);\n            let bonus = baseBonus;\n            \n            if (rng <= rngGoal) {\n                bonus ++;\n            }\n        \n            this.engine.datamap.pantheon.time.bonusDays += bonus;\n            this.engine.prophet.dayTrigger(1 + bonus);\n            this.engine.datamap.rocketData.joules ++;\n            this.engine.adornments.dayTrigger();\n        \n            this.engine.answers.automateDays();\n            //this.engine.notify();\n            //console.log('day',i);\n            \n        }\n        //console.log('days done',i);\n\n\n    }\n\n    passDay = () => {\n        this.passDayAction()\n    }\n\n    eatDay = () => {\n        if (this.data.day < 2) return;\n        this.data.day --;\n        this.data.eatenDays ++;\n    }\n    \n}\n\nexport interface GameTimeData {\n    msprogress: number;\n    day: number;\n    month: number;\n    year: number;\n    eatenDays: number;\n    currentRun: {\n        time: number;\n    }\n}\n\nexport function GameTimeInit (): GameTimeData {\n    return {\n        day: 1,\n        month: 1,\n        year: 0,\n        msprogress: 0,\n        eatenDays: 0,\n        currentRun: {\n            time: 0\n        }\n    }\n}\n\nexport const COMMAND_EAT_DAY: DecoupledCommand = {\n    name: 'Eat Day',\n    command: 'gametime eatday',\n    able: (datamap:Datamap) => {\n        return datamap.gameTime.day > 1;\n    }\n}\n\nexport const COMMAND_pass_day: DecoupledCommand = {\n    name: \"Pass Day\",\n    command: 'gametime passday',\n}\n","import AbstractModule from \"./AbstractModule\";\nimport { Datamap } from \"../Datamap\";\n\nexport default class NavArea extends AbstractModule {\n\n    get data (): NavAreaData {\n        return this.engine.datamap.nav;\n    }\n\n    changeMainArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.mainArea = number;\n        this.data.subArea = 0;\n    }\n\n    changeSubArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.subArea = number;\n    }\n\n}\n\nexport type NavAreaData = {\n    mainArea: number;\n    subArea: number;\n}\n\nexport function NavAreaDataInit (): NavAreaData {\n    return {\n        mainArea: 0,\n        subArea: 0,\n    }\n}\n\nexport function areaUnlocked(areaIndex:number, data: Datamap) {\n    switch (areaIndex) {\n        case 0:\n            return true\n            break;\n\n        case 1: \n            return data.prophetData.prestigeUnlocked === true || data.prophetData.save.reincarnationCount > 0\n            break;\n        default:\n            return false;\n    }\n}\n\n/* hidden={(datamap)=>{return datamap.prophetData.prestigeUnlocked === false && data.prophetData.holiness === 0}}/>\n          <CommandButtonFC name='Followers' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n          */","import AbstractModule from \"./AbstractModule\";\nimport * as TimePantheon from \"./Pantheon/Time\";\nimport ExpoCurve from \"../interfaces/ExpoCurve\";\nimport Exploring, { AreaData, AreaData_init, ExplorersData, ExplorersData_init } from \"./Exploring\";\nimport { getRandomInt } from \"../util\";\nimport { string } from \"prop-types\";\nimport { Datamap } from \"../Datamap\";\nimport { DecoupledCommand2 } from \"../interfaces/ICommand\";\n\nexport default class Adornments extends AbstractModule {\n\n\n    get data() {\n        return this.engine.datamap.adornments;\n    }\n\n    handle_adornments_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'buybutton':\n                this.buyButton();\n                break;\n\n            case 'explorer':\n                this.exploring.handle_explore_command(cmdArray);\n                break;\n\n            case 'empty':\n                this.data.items.push({iNo:3,level:2,origin:'shop'})\n            //this.data.items = [];\n                break;\n\n            case 'sort':\n                this.sortAdornments(cmdArray[2]);\n                break;\n\n            case 'sell':\n                let index_ = parseInt(cmdArray[2]);\n                let item_ = this.data.items[index_]\n                this.data.items.splice(index_, 1);\n                this.data.gems += Math.pow(item_.level, 2) ;\n                break;\n\n            case 'combine':\n                this.combine(parseInt(cmdArray[2]));\n                break;\n\n            case 'combineall':\n                for (let index = this.data.items.length - 1; index > 0; index--) {\n                    this.combine(index);\n                }\n                break;\n\n            case 'equip':\n                let index = parseInt(cmdArray[2]);\n                let item = this.data.items[index]\n                switch (item.iNo) {\n                    case 1:\n                        this.unequipCap()\n                        this.data.equiped.cap = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 2:\n                        this.unequipCane()\n                        this.data.equiped.cane = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 3:\n                        this.unequipRobe()\n                        this.data.equiped.robe = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 4:\n                        this.unequipRing()\n                        let newring = this.data.items.splice(index, 1)[0];\n                        this.data.equiped.ring = newring;\n                        console.log(newring);\n                        \n                        break;\n\n                    case 5:\n                        this.unequipBook();\n                        this.data.equiped.book = this.data.items.splice(index, 1)[0];\n\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            case 'unequip':\n                switch (cmdArray[2]) {\n                    case 'cane':\n                        this.unequipCane();\n                        break;\n\n                    case 'robe':\n                        this.unequipRobe();\n\n                        break;\n\n                    case 'cap':\n                        this.unequipCap();\n\n                        break;\n\n                    case 'book':\n                        this.unequipBook();\n\n                        break;\n\n                    case 'ring':\n                        this.unequipRing();\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    sortAdornments = (command: string) => {\n       \n        switch (command) {\n            case 'level':\n                this.data.items.sort((a,b)=>{\n                    return a.level - b.level\n                })\n                break;\n\n            case 'origin':\n                this.data.items.sort((a,b)=>{\n                    return this.sortAreas(a.origin,b.origin)\n                })\n                break;\n\n            case 'type':\n                this.data.items.sort((a,b)=>{\n                    return a.iNo - b.iNo\n                })\n        \n            default:\n                break;\n        }\n    }\n\n    buyButton = () => {\n        let cost = buyButtonCost(this.engine.datamap);\n\n        if ( cost > this.data.gems ) return\n        else {\n            this.data.gems -= cost;\n            this.data.buttonsBought ++;\n        }\n    }\n\n    sortAreas (originA: string, originB: string) {\n        let originAnum = this.getAreaIndex(originA)\n        let originBnum = this.getAreaIndex(originB)\n        return originAnum - originBnum\n    }\n\n    getAreaIndex (area: string) {\n        switch (area) {\n            case 'ruins':\n                return 0;\n                break;\n\n            case 'mart':\n                return 1;\n                break;\n\n            case 'shop':\n                return 2;\n                break;\n        \n            default:\n                return -1\n                break;\n        }\n    }\n\n    unequipCap() {\n        if (this.data.equiped.cap) {\n            let toPush = this.data.equiped.cap;\n            this.data.equiped.cap = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    combine = (index: number) => {\n        let check_item = this.data.items[index];\n        if (check_item.level >= 10) return;\n\n        let matches: number[] = [];\n        this.data.items.some((item, i_index) => {\n            if (index === i_index) return false;\n            if (check_item.iNo === item.iNo) {\n                if (check_item.level === item.level) {\n                    if (check_item.origin === item.origin) {\n                        matches.push(i_index);\n                        return true;\n                    }\n                }\n            }\n            return false;\n        })\n        if (matches.length > 0) {\n            this.data.items[index].level++;\n            this.data.items.splice(matches[0], 1)\n        }\n\n    }\n\n    unequipCane() {\n        if (this.data.equiped.cane) {\n            let toPush = this.data.equiped.cane;\n            this.data.equiped.cane = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    unequipRobe() {\n        if (this.data.equiped.robe) {\n            let toPush = this.data.equiped.robe;\n            this.data.equiped.robe = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    unequipRing() {\n        if (this.data.equiped.ring) {\n            let toPush = this.data.equiped.ring;\n            this.data.equiped.ring = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    unequipBook() {\n        if (this.data.equiped.book) {\n            let toPush = this.data.equiped.book;\n            this.data.equiped.book = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n\n    dayTrigger() {\n        this.exploring.exploreDay();\n    }\n\n    getItem(origin: string, level: number) {\n        this.data.adornmentCount++;\n        let iNo = getRandomInt(1, 5)\n        this.data.items.push({ origin, level, iNo })\n    }\n\n    exploring = new Exploring(this.engine)\n}\n\nconst AdornmentCurve: ExpoCurve = {\n    coefficient: 1e2,\n    initial: 1e2\n}\n\nexport interface AdornmentItem {\n    origin: string,\n    level: number,\n    iNo: number,\n}\n\nexport interface FullAdornmentItem {\n    data: AdornmentItem;\n    name: string;\n    power: string;\n}\n\nexport function getFullAdornmentItem(item: AdornmentItem): FullAdornmentItem {\n    return {\n        data: item,\n        name: `${ItemNames[item.iNo]} of ${item.origin}`,\n        power: PowerDictionary[ItemNames[item.iNo]](item)\n    }\n}\n\nconst ItemNames: string[] = [\n    'unused',\n    'Cap', 'Cane', 'Robe', 'Ring', 'Book'\n]\n\nconst PowerDictionary: I_PowerDict = {\n    unused: () => 'BROKE',\n    Cap: capStats,\n    Cane: caneStats,\n    Robe: robeStats,\n    Ring: ringStats,\n    Book: bookStats,\n}\n\nfunction capStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Piety Production`\n            break;\n\n        case 'mart':\n            return `+${item.level}x Devotion Production`\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        case 'shop':\n            return `+${item.level}x USD Production`\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        default:\n            return 'ERROR CAP - NO ORIGIN'\n            break;\n    }\n}\n\nfunction caneStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `Prayer gives +${item.level} Believers`\n            break;\n\n        case 'mart':\n            return `Prayer Gives +${item.level} USD`\n            break;\n\n        case 'shop':\n            return `Prayer Gives +${item.level} seconds relic production`\n            return `Proseltyzing gives USD at ${item.level}0%  instead of Believers `\n            break;\n\n        default:\n            return 'ERROR CANE - NO ORIGIN'\n            break;\n    }\n}\n\nfunction bookStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Effective Devotee Count`\n            break;\n\n        case 'mart':\n            return `+${item.level}x Devotion Production`\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        case 'shop':\n            return `+${item.level}x USD Production`\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        default:\n            return 'ERROR BOOK - NO ORIGIN'\n            break;\n    }\n}\n\nfunction robeStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Piety Production`\n            break;\n\n        case 'mart':\n            return `+${item.level}x Devotion Production`\n            break;\n\n        case 'shop':\n            return `+${item.level}x USD Production`\n            break;\n         /*   \n        case 'ruins':\n    \n            return `Nothing yet - make a suggestion!`\n            return `Retain ${item.level}% of Devotees on Reincarnation`\n            break;\n\n        case 'mart':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        case 'shop':\n            return `Nothing yet - make a suggestion!`\n            break;\n*/\n        default:\n            return 'ERROR ROBE - NO ORIGIN'\n            break;\n    }\n}\n\nfunction ringStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Devotee Deovtion Production`\n            break;\n\n            case 'mart':\n                return `+${item.level}x Devotion Production`\n                break;\n    \n            case 'shop':\n                return `+${item.level}x USD Production`\n                break;\n\n        default:\n            return 'ERROR RING - NO ORIGIN'\n            break;\n    }\n}\n\ninterface I_PowerDict {\n    [key: string]: (item: AdornmentItem) => string;\n}\n\nfunction buyButtonCost (data: Datamap) {\n    return Math.pow(10,data.adornments.buttonsBought) \n}\n\nexport  const buyButton: DecoupledCommand2 = {\n    name: ()=>'Buy a new Button!',\n   command: ()=>'adornments buybutton',\n   cost: buyButtonCost,\n   able: (data)=>{return data.adornments.gems >= buyButtonCost(data)},\n   costName: 'Gems',\n   hidden: (data)=>{return data.adornments.buttonsBought >= 5}\n}\n\n\nexport interface AdornmentData {\n    adornmentCount: number;\n    items: AdornmentItem[];\n    equiped: {\n        cap: AdornmentItem | null;\n        cane: AdornmentItem | null;\n        robe: AdornmentItem | null;\n        ring: AdornmentItem | null;\n        book: AdornmentItem | null;\n    }\n    gems: number;\n    explorers: ExplorersData;\n    buttonsBought: number;\n}\n\nexport function adornmentDataInit(): AdornmentData {\n    return {\n        equiped: {\n            book: null,\n            cane: null,\n            cap: null,\n            ring: null,\n            robe: null,\n        },\n        items: [],\n        gems: 0,\n        adornmentCount: 0,\n        explorers: ExplorersData_init(),\n        buttonsBought: 0\n    }\n}\n\n","export interface SimData {\n    mass: number;\n            current_v: number;\n            current_h: number;\n            active: boolean;\n            elapsedTime: number;\n            impactJouls: number\n}\n\nexport function SimDataInit ():SimData {\n    return {\n        mass: 1,\n        current_h: 0,\n        current_v: 0,\n        impactJouls: 0,\n        active: false,\n        elapsedTime: 0,\n    }\n}\n\nexport interface DerivedData {\n    estimatedTime: number;\n    estimatedVMax: number;\n    estimatedJouls: number;\n}\n\nexport function DerivedDataInit ():DerivedData {\n    return {\n        estimatedTime: 0,\n        estimatedVMax: 0,\n        estimatedJouls: 0,\n    }\n}\n\nexport interface RocketData {\n    unlocked: boolean;\n    ball: {\n        height: number,\n        mass: number,\n        derived: DerivedData;\n        sim: SimData\n    }\n    thrown_ball: {\n        initial_velocity: number,\n        derived: DerivedData;\n        sim: SimData\n    }\n    bouncyball: {\n        bounces_upgrades: number;\n        loss_upgrades: number;\n        derived: DerivedData;\n        sim: SimData & {bounces: number;};\n    }\n    joules: number;\n}\n\nexport function RocketDataInit(): RocketData {\n    return {\n        unlocked: false,\n        ball: {\n            height: 0,\n            mass: 0,\n            derived: DerivedDataInit(),\n            sim: SimDataInit(),\n        },\n        thrown_ball: {\n            initial_velocity: 0,\n            derived: DerivedDataInit(),\n            sim: SimDataInit()\n        },\n        bouncyball: {\n            bounces_upgrades: 0,\n            loss_upgrades: 0,\n            derived: DerivedDataInit(),\n            sim: {...SimDataInit() ,bounces: 0},\n\n        },\n        joules: 0\n    }\n}\n","import AbstractModule from \"./AbstractModule\";\nimport Engine from \"../Engine\";\n\nexport default class NameAndCode extends AbstractModule {\n    constructor(public engine: Engine) {\n        super(engine);\n    }\n\n    nacCommand (commands: string []) {\n        console.log(commands);\n        \n        switch (commands[1]) {\n            case 'setname':\n                this.data.name = commands[2];\n                this.data.timeSet = Date.now();\n                if (this.data.name === 'DREP'){\n                    this.engine.prophet.devotedprestige();\n                }\n                break;\n\n            case 'clearname':\n                this.data.name = '';\n                this.data.timeSet = 0;\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    get data() {\n        return this.engine.datamap.nacData;\n    }\n\n    \n}\n\nexport interface NameAndCode_Data {\n    name: string;\n    timeSet: number;\n}\n\nexport function NameAndCode_Init (): NameAndCode_Data {\n    return {\n        name: '', timeSet: 0\n    }\n}","import AbstractModule from \"./AbstractModule\";\nimport ExpoCurve, {  } from \"../interfaces/ExpoCurve\";\nimport { Datamap } from \"../Datamap\";\nimport { getRandomInt } from \"../util\";\nimport { USD_UpgradeTithe, USD_Upgrade_Pamphlets } from \"./USDPurchases\";\nimport { expoCommand_buy } from \"../interfaces/ExpoCommand\";\n\nexport default class Answers extends AbstractModule {\n\n    get data () {\n        return this.engine.datamap.answers\n    }\n \n    handle_answer_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'pray':\n                this.answer_pray(cmdArray[2]==='up')\n                break;\n\n            case 'make':\n                this.answer_make(cmdArray[2]==='up')\n                break;\n            \n            case 'polish':\n            case 'invest':\n            case 'holypower':\n            case 'recruit':\n            case 'superAnswerWorkers':\n                this.modify_key(cmdArray[1],cmdArray[2]==='up')\n                break;\n            case 'upgrade':\n                this.modify_upgrade(cmdArray[2]);\n                break;\n\n\n\n            default:\n                console.log('error in answers.ts', cmdArray);\n                    \n                break;\n        }\n    }\n\n    modify_key = (key: string, up:boolean) => {\n        console.log(key, up);\n        \n        if (up) {\n            if (availaleQuestion(this.engine.datamap) > 0) this.data[key]++;\n        } else {\n            this.data[key] = Math.max(0, this.data[key] - 1)       \n        }\n    }\n\n    modify_upgrade = (key:string) => {\n        //get cost\n        let cost = gemUpgradeForAnswerCost(key)\n        //return if broke\n        if (cost > this.engine.datamap.adornments.gems) return;\n        //check for existence of the key in the upgrade data\n        if (Object.keys(this.data.gemUpgrades).includes(key)) {\n            //sanity return for already bought - stops double buys\n            if (this.data.gemUpgrades[key]) return\n\n            //remove gems -- buy\n            this.engine.datamap.adornments.gems -= cost;\n            //set data -- buy\n            this.data.gemUpgrades[key] = true;\n        }\n    }\n\n    answer_pray (up:boolean) {\n        if (up) {\n            if (availaleQuestion(this.engine.datamap) > 0) this.data.pray = this.data.pray + 1\n        } else {\n            this.data.pray = Math.max(0, this.data.pray - 1)\n        }\n    }\n\n    answer_make (up:boolean) {\n        if (up) {\n            if (availaleQuestion(this.engine.datamap) > 0) this.data.make = this.data.make + 1\n        } else {\n            this.data.make = Math.max(0, this.data.make - 1)\n        }\n    }\n\n    automateDays = () => {\n\n        this.automateMake();\n\n        if (this.data.invest > 0) {\n            for (let index = 0; index < this.data.invest; index++) {\n                let rng = getRandomInt(0,1)\n                let upgrades = [USD_UpgradeTithe, USD_Upgrade_Pamphlets]\n                expoCommand_buy(this.engine.datamap, upgrades[rng])                \n            }\n        }\n\n        if (this.data.polish > 0) {\n            for (let index = 0; index < this.data.polish; index++) {\n                let rng = getRandomInt(0,9);\n                this.engine.prophet.upgradeRelic(rng.toString())\n            }\n        }\n\n        this.automatePray();\n\n        if (this.data.holypower > 0) {\n            this.engine.datamap.prophetData.holyPower = Math.floor(Math.pow(.9999,this.data.holypower)*this.engine.datamap.prophetData.holyPower)\n        }\n\n        if (this.data.recruit > 0) {\n            for (let index = 0; index < this.data.recruit; index++) {\n                let rng = getRandomInt(0,2);\n                this.engine.followers.recruitParitioner(rng.toString())\n            }\n        }\n\n        this.superAnswerDay();\n\n    }\n\n    superAnswerDay = () => {\n        if (this.data.superAnswerWorkers < 1) return;\n\n        this.data.superAnswerProgress += this.data.superAnswerWorkers;\n        \n        this.checkSuperAnswerTick();\n    }\n\n    checkSuperAnswerTick = () => {\n        let goal = superAnswerGoal(this.data.superAnswerAnswers);\n        if (this.data.superAnswerProgress >= goal) {\n                this.data.superAnswerProgress -= goal;\n                this.data.superAnswerAnswers ++;\n        }\n    }\n\n    automatePray = () => {\n        if (this.data.pray) this.engine.prophet.prayCount(this.data.pray);\n    }\n\n    automateMake () {\n        for (let index = 0; index < this.data.make; index++) {\n            let rng = getRandomInt(0,9);\n            this.engine.prophet.buyRelic(rng.toString())\n        }\n    }\n    \n\n    reset = () => {\n        this.engine.datamap.answers = AnswerData_init();\n    }\n\n}\n\nexport function usedQuestions  (data: Datamap)  {\n    return data.answers.pray + data.answers.make + data.answers.polish + data.answers.invest + data.answers.holypower + data.answers.superAnswerWorkers + data.answers.recruit\n}\n\nexport function totalQuestions  (data:Datamap)  {\n    return data.prophetData.congregation.paritioners[2]\n}\n\nexport function availaleQuestion (data:Datamap) {\n    return totalQuestions(data) - usedQuestions(data)\n}\n\nexport function superAnswerGoal (superAnswerAnswers: number) {\n    return 10 * superAnswerAnswers;\n}\n\nexport function superAnswerBoxVisible (superAnswerProgress: number, superAnswerAnswers: number) {\n    return superAnswerProgress > 0 || superAnswerAnswers > 0\n}\n\nexport function gemUpgradeForAnswerCost(key: string) {\n    if (key === ANSWER_DATA[0][0]) return 10;\n    if (key === ANSWER_DATA[1][0]) return 100;\n    if (key === ANSWER_DATA[2][0]) return 100;\n    if (key === ANSWER_DATA[3][0]) return 100;\n    if (key === ANSWER_DATA[4][0]) return 1000;\n    if (key === ANSWER_DATA[5][0]) return 1000;\n    if (key === ANSWER_DATA[6][0]) return 1;\n\n\n    return 69;\n}\n\n\n\nexport const ANSWER_DATA: [string, string, string][] = [\n    ['pray','Pray for the Piety of the Church','Unlock upgrades'],\n    ['make','Make Relics for the Church','Unlock selection'],\n    ['invest', 'Invest in Congregation Upgrades','Unlock selection'],\n    ['polish', \"Upgrade Relics with the Church's USD\",'Unlock selection'],\n    ['holypower', 'Consume Holy Power to increase its effectiveness','Unlock discretion'],\n    ['recruit', 'Recruit a random believer with the Church`s Devotion','Unlock discretion'],\n    ['superAnswerWorkers', 'Recruit people to join again... in their next life.','Unlock information'],\n]\n\nexport interface AnswerData {\n    pray: number;\n    make: number;\n    invest: number;\n    polish: number;\n    holypower: number;\n    recruit: number;\n    superAnswerWorkers: number;\n    superAnswerProgress: number;\n    superAnswerAnswers: number;\n    [key:string]: number | any;\n    gemUpgrades: {\n        pray: boolean;\n        make: boolean;\n         invest: boolean;\n        polish: boolean;\n        holypower: boolean;\n        recruit: boolean;\n        superAnswerWorkers: boolean;\n        [key:string]: boolean;\n    }\n}\n\nexport function AnswerData_init(): AnswerData {\n    return {\n        pray: 0,\n        invest: 0,\n        make: 0,\n        polish: 0,\n        holypower: 0,\n        superAnswerWorkers: 0,\n        superAnswerProgress: 0,\n        superAnswerAnswers: 0,\n        recruit: 0,\n        gemUpgrades: {\n            holypower: false,\n            invest: false,\n            make: false,\n            polish: false,\n            pray: false,\n            recruit: false,\n            superAnswerWorkers: false\n        }\n    }\n}\n\n","import { I_PropheData, init_ProphetData } from \"./modules/Prophet\";\nimport { GameTimeData, GameTimeInit } from \"./modules/Gametime\";\nimport { NavAreaData, NavAreaDataInit } from \"./modules/NavArea\";\nimport { HolinessUpgrades, holinessUpgradesInit } from \"./modules/PietyPurchases\";\nimport { FollowerData, followerDataInit } from \"./modules/Followers\";\nimport { AdornmentData, adornmentDataInit } from \"./modules/Adornments\";\nimport { RocketData, RocketDataInit } from \"./modules/RocketTypes\";\nimport { NameAndCode_Data, NameAndCode_Init } from \"./modules/NameAndCode\";\nimport { PantheonData, PantheonData_init } from \"./modules/Pantheon/Types\";\nimport { AnswerData, AnswerData_init } from \"./modules/Answers\";\n\nexport interface Datamap {\n    offline: {\n        happening: boolean;\n        totaltime: number;\n    }\n    x: number;\n    y: number;\n    z: number;\n    ticks: number;\n    last: number;\n    autosave: boolean;\n    ui: {\n        innerWidth: number;\n        innerHeight: number;\n    }\n    prophetData: I_PropheData;\n    gameTime: GameTimeData;\n    nav: NavAreaData,\n    holinessUpgrades: HolinessUpgrades,\n    followers: FollowerData,\n    adornments: AdornmentData,\n    rocketData: RocketData,\n    nacData: NameAndCode_Data,\n    automation: {\n        auto_buyToNext: boolean,\n    },\n    pantheon: PantheonData;\n    answers: AnswerData;\n}\n\nexport function newDefaultMap () {\n    let map: Datamap = {\n        offline: {\n            happening: false,\n            totaltime: 0,\n        },\n        x: 0, \n        y: 0, \n        autosave: false,\n        z: 0,\n        ticks: 0,\n        last: Date.now(),\n        ui: {\n            innerHeight: 600,\n            innerWidth: 800,\n        },\n        prophetData: init_ProphetData(),\n        gameTime: GameTimeInit(),\n        nav: NavAreaDataInit(),\n        holinessUpgrades: holinessUpgradesInit(),\n        followers: followerDataInit(),\n        adornments: adornmentDataInit(),\n        rocketData: RocketDataInit(),\n        nacData: NameAndCode_Init(),\n        automation: {\n            auto_buyToNext: false,\n        },\n        pantheon: PantheonData_init(),\n        answers: AnswerData_init(),\n    }\n    return map;\n}","import {Datamap, newDefaultMap} from './Datamap';\nimport * as _ from 'lodash'\n\nexport default abstract class CoreEngine {\n\n    datamap: Datamap = newDefaultMap();\n    loop: NodeJS.Timeout | undefined = undefined;\n\n    constructor(public notify: VoidFunction){\n        this.datamap.last = Date.now();\n        this.start();\n    }\n\n    start = () => {\n        if (!this.loop) {\n            this.loop = setInterval(this.tick, 200);\n        }\n    }\n\n    stop = () => {\n        if (this.loop){\n            clearTimeout(this.loop);\n            this.loop = undefined;\n        } \n    }\n\n    save= () => {\n        console.log('saving');\n        \n        let datamap = JSON.stringify(this.datamap);\n        localStorage.setItem('datamap', datamap);\n        console.log('saved');\n\n    }\n\n    load= () => {\n        this.quietLoad();        \n        this.notify();\n    }\n\n    reset = () => {\n        this.datamap = newDefaultMap();\n        this.notify();\n    }\n\n    quietLoad = () => {\n        let combstr = localStorage.getItem('datamap');\n        if (combstr != null){\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n    }\n\n    tick = () => {\n\n        if (this.datamap.offline.happening == true) return;\n        \n        let newnow = Date.now();\n        let oldnow = this.datamap.last;\n        let delta = newnow - oldnow;\n\n        this.datamap.last = newnow;\n        \n        this.processDelta(delta)\n        this.notify();\n    }\n\n    abstract processDelta (delta: number): void;\n    abstract executeCommand (command: string): void;\n \n}\n\n\n","import { DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport { SECOND_MS } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport Engine from \"../Engine\";\nimport { SimData, RocketDataInit } from \"./RocketTypes\";\n\nexport default class Rocket extends AbstractModule {\n\n    constructor(engine: Engine) {\n        super(engine);\n        this.updateEstimates();\n    }\n\n    get data() {\n        return this.engine.datamap.rocketData;\n    }\n\n    reset () {\n        this.engine.datamap.rocketData = RocketDataInit();\n    }\n\n    handle_rocket_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'ballheight+':\n                this.data.joules -= ballHeightUpgrade_cost(this.engine.datamap);\n                this.data.ball.height = nextBallHeightUpgrade(this.data.ball.height);\n                break;\n\n            case 'ballmass+':\n                this.engine.datamap.prophetData.congregation.USD -= ballMassUpgrade_cost(this.engine.datamap)\n                this.data.ball.mass = nextBallMassUpgrade(this.data.ball.mass)\n                break;\n\n            case 'ballvelocity+':\n                this.data.joules -= ballVelocityUpgrade_cost(this.engine.datamap);\n                this.data.thrown_ball.initial_velocity = nextBallVelocityUpgrade(this.data.thrown_ball.initial_velocity);\n                break;\n\n            case 'ballbounces+':\n                    this.engine.datamap.prophetData.congregation.USD -= ballBounceUpgrade_cost(this.engine.datamap);\n                    this.data.bouncyball.bounces_upgrades = nextBallBounceUpgrade(this.data.bouncyball.bounces_upgrades);\n                    break;\n\n            case 'throwball':\n                this.throwball();\n                break;\n\n            case 'dropball':\n                this.dropball();\n                break;\n\n            case 'bounceball':\n                this.bounceball();\n                break;\n\n            default:\n                break;\n        }\n        this.updateEstimates();\n    }\n\n    dropball = () => {\n        let ball = this.data.ball;\n\n        ball.sim = {\n            active: true,\n            current_h: ball.height,\n            current_v: 0,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n        ball.height = 0;\n    }\n\n    throwball = () => {\n        let ball = this.data.ball;\n\n        this.data.thrown_ball.sim = {\n            active: true,\n            current_h: ball.height  ,\n            current_v: this.data.thrown_ball.initial_velocity,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n\n        ball.height = 0;\n        this.data.thrown_ball.initial_velocity = 0;\n    }\n\n    bounceball () {\n        //console.log('bounce');\n        \n        let ball = this.data.ball;\n        let thrown_ball = this.data.thrown_ball\n\n        this.data.bouncyball.sim = {\n            active: true,\n            current_h: ball.height,\n            bounces: this.data.bouncyball.bounces_upgrades + 1,\n            current_v: thrown_ball.initial_velocity,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n\n        ball.height = 0;\n        this.data.thrown_ball.initial_velocity = 0;\n        this.data.bouncyball.bounces_upgrades = 0;\n    }\n\n    updateEstimates() {\n        let estimatedVMax = freefall_vmax_from_h(this.data.ball.height);\n        let estimatedTime = freefall_t_from_h(this.data.ball.height);\n\n        this.data.ball.derived.estimatedTime = estimatedTime\n        this.data.ball.derived.estimatedVMax = estimatedVMax\n        this.data.ball.derived.estimatedJouls = freefall_j_from_mv(estimatedVMax, this.data.ball.mass)\n    }\n\n    processDelta = (delta: number) => {\n        if (this.data.ball.sim.active === true) this.ballsim(delta / SECOND_MS);\n        if (this.data.thrown_ball.sim.active === true) this.thrownballsim(delta / SECOND_MS);\n        if (this.data.bouncyball.sim.active === true) this.bounceyball_sim(delta / SECOND_MS);\n    }\n\n    vhat_sim (v_in: number, height: number, acceleration: number, seconds: number) {\n        let estimatedDistance = freefall_d_from_vat(v_in, GRAVITY, seconds)\n        let delta_t, delta_h, vf;\n\n        if (estimatedDistance + height > 0) {\n\n            delta_t = seconds;\n            delta_h = estimatedDistance\n            vf = freefall_vf_from_viat(v_in, acceleration, seconds)\n        } else { //need to solve FROM d\n\n            vf = freefall_vf_from_viad(v_in, GRAVITY, height);\n\n            delta_t = freefall_t_from_vivfd(v_in, vf, height)\n            delta_h = -height\n        }\n        return {delta_t, delta_h, vf}\n    }\n\n    move_and_impact(sim: SimData, seconds: number){\n        let vin = sim.current_v;\n        let h = sim.current_h;\n\n\n        let {delta_t, delta_h, vf} = this.vhat_sim(vin,h,GRAVITY,seconds);\n\n        sim.elapsedTime += delta_t;\n        sim.current_h += delta_h;\n        sim.current_v = vf;\n        return sim.current_h <= 0\n    }\n\n    ballsim = (seconds: number) => {\n\n        \n        let ball = this.data.ball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.active = false;\n            this.ballimpact();\n        }\n\n    }\n\n\n    thrownballsim = (seconds: number) => {\n\n        let ball = this.data.thrown_ball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.active = false;\n            this.thrown_ballimpact();\n        }\n\n\n    }\n    \n    bounceyball_sim (seconds: number) {\n        let initial_time =  this.data.bouncyball.sim.elapsedTime\n        let ball = this.data.bouncyball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.bounces --\n            if (ball.sim.bounces < 0) {\n                ball.sim.active = false;\n                this.bounce_ballimpact();\n            } else {\n                let bounce_energy = this.bounce_ballimpact();\n                ball.sim.current_v = v_from_mj(ball.sim.mass, bounce_energy)\n                this.bounceyball_sim(seconds - (initial_time - this.data.bouncyball.sim.elapsedTime))\n            }\n        }\n    }\n\n    impact() {\n        let gainedJoules = freefall_j_from_mv(this.data.ball.sim.current_v, this.data.ball.mass);\n        this.data.ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor(gainedJoules)\n    }\n\n    ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.ball.sim.current_v, this.data.ball.mass);\n        this.data.ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor(gainedJoules)\n    }\n\n    thrown_ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.thrown_ball.sim.current_v, this.data.ball.mass);\n        this.data.thrown_ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor( gainedJoules )\n    }\n\n    bounce_ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.bouncyball.sim.current_v, this.data.ball.mass);\n        this.data.bouncyball.sim.impactJouls += gainedJoules;\n        this.data.joules += Math.floor( gainedJoules )\n        return (gainedJoules) * .8\n    }\n\n}\n\n\n\n//CLASS HELPERS \n\nexport function nextBallHeightUpgrade(height: number) {\n    return 1 + height;\n}\n\nexport function ballHeightUpgrade_cost(data: Datamap) {\n    return Math.floor(-kinetic_energy_mgdh(data.rocketData.ball.mass, 1))\n}\n\nexport function ballHeightUpgrade_able(data: Datamap) {\n    return ballHeightUpgrade_cost(data) <= data.rocketData.joules && data.rocketData.ball.mass > 0;\n}\n\nexport function nextBallMassUpgrade(mass: number) {\n    return 1 + mass;\n}\n\nexport function ballMassUpgrade_cost(data: Datamap) {\n    return data.rocketData.ball.mass * data.rocketData.ball.mass + 1;\n}\n\nexport function ballMassUpgrade_able(data: Datamap) {\n    return ballMassUpgrade_cost(data) <= data.prophetData.congregation.USD;\n}\n\nexport function nextBallVelocityUpgrade(velocity: number) {\n    return 2 + velocity;\n}\n\nexport function ballVelocityUpgrade_cost(data: Datamap) {\n    // ke = 1/2mvv\n    let velocity = data.rocketData.thrown_ball.initial_velocity;\n    let newv = nextBallVelocityUpgrade(velocity);\n    let oldKE = .5 * data.rocketData.ball.mass * velocity * velocity;\n    let newKE = .5 * data.rocketData.ball.mass * newv * newv;\n    \n    return newKE-oldKE; \n}\n\nexport function ballVelocityUpgrade_able(data: Datamap) {\n    return ballVelocityUpgrade_cost(data) <= data.rocketData.joules;\n}\n\nexport function nextBallBounceUpgrade(bounce: number) {\n    return 1 + bounce;\n}\n\nexport function ballBounceUpgrade_cost(data: Datamap) {\n    return Math.pow(10, data.rocketData.bouncyball.bounces_upgrades+4);\n}\n\nexport function ballBounceUpgrade_able(data: Datamap) {\n    return ballBounceUpgrade_cost(data) <= data.prophetData.congregation.USD;\n}\n\n//ROCKET COMMANDS\n\nexport const cmd_ballheightplus: DecoupledCommand2 = {\n    name: () => 'Lift Ball',\n    command: () => 'rocket ballheight+',\n    change: (data) => `${data.rocketData.ball.height} -> ${nextBallHeightUpgrade(data.rocketData.ball.height)}`,\n    able: ballHeightUpgrade_able,\n    cost: ballHeightUpgrade_cost,\n    costName: 'j'\n}\n\nexport const cmd_ballmassplus: DecoupledCommand2 = {\n    name: () => 'Increase Ball Mass',\n    command: () => 'rocket ballmass+',\n    change: (data) => `${data.rocketData.ball.mass} -> ${nextBallMassUpgrade(data.rocketData.ball.mass)}`,\n    able: ballMassUpgrade_able,\n    cost: ballMassUpgrade_cost,\n    costName: 'USD'\n}\n\nexport const cmd_ballvelocityplus: DecoupledCommand2 = {\n    name: () => 'Increase Initial Ball Velocity',\n    command: () => 'rocket ballvelocity+',\n    change: (data) => `${data.rocketData.thrown_ball.initial_velocity} -> ${nextBallVelocityUpgrade(data.rocketData.thrown_ball.initial_velocity)}`,\n    able: ballVelocityUpgrade_able,\n    cost: ballVelocityUpgrade_cost,\n    costName: 'j',\n    hidden: (data) => data.rocketData.ball.mass === 0 || data.rocketData.ball.height === 0,\n}\n\nexport const cmd_ballbouncesplus: DecoupledCommand2 = {\n    name: () => 'Bounces',\n    command: () => 'rocket ballbounces+',\n    change: (data) => `${data.rocketData.bouncyball.bounces_upgrades} -> ${nextBallBounceUpgrade(data.rocketData.bouncyball.bounces_upgrades)}`,\n    able: ballBounceUpgrade_able,\n    cost: ballBounceUpgrade_cost,\n    hidden: (data) => data.rocketData.thrown_ball.initial_velocity === 0,\n    costName: 'USD'\n}\n\nexport const cmd_dropball: DecoupledCommand2 = {\n    name: () => 'Drop Ball',\n    command: () => 'rocket dropball',\n    able: (data) => data.rocketData.ball.sim.active === false && data.rocketData.ball.height > 0,\n}\n\nexport const cmd_throwball: DecoupledCommand2 = {\n    name: () => 'Throw Ball',\n    command: () => 'rocket throwball',\n    able: (data) => data.rocketData.thrown_ball.sim.active === false,\n    hidden: (data) => data.rocketData.thrown_ball.initial_velocity === 0,\n}\n\nexport const cmd_bouncyball: DecoupledCommand2 = {\n    name: () => 'Bounce Ball',\n    command: () => 'rocket bounceball',\n    able: (data) => data.rocketData.bouncyball.sim.active === false,\n    hidden: (data) => data.rocketData.bouncyball.bounces_upgrades === 0,\n\n}\n/*\n    {\\displaystyle \\Delta v=v_{\\text{e}}\\ln {\\frac {m_{0}}{m_{f}}}=I_{\\text{sp}}g_{0}\\ln {\\frac {m_{0}}{m_{f}}}}\n\nwhere:\n\n    Δ v   {\\displaystyle \\Delta v\\ } \\Delta v\\ is delta-v – the maximum change of velocity of the vehicle (with no external forces acting).\n    m 0 {\\displaystyle m_{0}} m_{0} is the initial total mass, including propellant, also known as wet mass.\n    m f {\\displaystyle m_{f}} m_{f} is the final total mass without propellant, also known as dry mass.\n    v e = I sp g 0 {\\displaystyle v_{\\text{e}}=I_{\\text{sp}}g_{0}} {\\displaystyle v_{\\text{e}}=I_{\\text{sp}}g_{0}} is the effective exhaust velocity, where:\n\n        I sp {\\displaystyle I_{\\text{sp}}} I_{\\text{sp}} is the specific impulse in dimension of time.\n        g 0 {\\displaystyle g_{0}} g_{0} is standard gravity.\n*/\n\n/* PHYSICS */\n\n//h = 1/2gt2, m\n\n//h = 1/2vt\n\n//v = gt, m/s\n\nconst GRAVITY = -9.8\n\nexport function freefall_t_from_h(height: number) { //return s\n\n    let time = Math.sqrt(2 * height / -GRAVITY);\n\n    return time;\n}\n\nexport function freefall_vmax_from_h(height: number) { //return m/s\n    let vmax = GRAVITY * freefall_t_from_h(height);\n    return vmax;\n}\n\nexport function freefall_d_from_vat(velocity_in: number, acceleration: number, seconds: number) { //return m\n    let d = velocity_in * seconds + .5 * acceleration * seconds * seconds;\n    return d;\n}\n\nexport function freefall_vf_from_viat(velocity_in: number, acceleration: number, seconds: number) { //return m/s\n    let vf = velocity_in + acceleration * seconds;\n    return vf;\n}\n\nexport function freefall_vf_from_viad(velocity_in: number, acceleration: number, distance: number) { //return m/s\n\n    let vf_sq = ((velocity_in + 1) / Math.abs(velocity_in + 1)) * (velocity_in * velocity_in) + 2 * acceleration * distance;\n    let vf = Math.sqrt(Math.abs(vf_sq));\n    //console.log('ff_vf_viad', velocity_in, acceleration, distance, vf_sq, vf);\n    if (vf_sq < 0) return -vf\n    else return vf\n}\n\nexport function freefall_t_from_vivfd(v_i: number, v_f: number, distance: number) { //return s\n    let t = 2 * distance / (v_i + v_f)\n    return Math.abs(t)\n}\n\nexport function freefall_j_from_mv(v: number, m_kg: number, ) { //return j \n    return .5 * m_kg * v * v\n}\n\nexport function v_from_mj (mass: number, joules: number) {\n    let velocity = Math.sqrt( 2 * joules / mass )\n    return velocity;\n}\n\nexport function kinetic_energy_mgdh (mass: number, delta_h: number) {\n    return mass * delta_h * GRAVITY;    \n}","import CoreEngine from \"./CoreEngine\";\nimport ProphetModule from \"./modules/Prophet\";\nimport GameTime from \"./modules/Gametime\";\nimport NavArea from \"./modules/NavArea\";\nimport Followers from \"./modules/Followers\";\nimport { MINUTE_MS } from \"./util\";\nimport Rocket from \"./modules/Rocket\";\nimport NameAndCode from \"./modules/NameAndCode\";\nimport Adornments from \"./modules/Adornments\";\nimport { doPantheonUpgrade } from \"./modules/Pantheon/Types\";\nimport { newDefaultMap } from \"./Datamap\";\nimport _ from \"lodash\";\nimport Answers from \"./modules/Answers\";\n\nexport default class Engine extends CoreEngine {\n    \n    mountTriggers=()=>{\n        this.load();\n    }\n    \n    processDelta = (delta: number) => {\n       // this.rocket.processDelta(delta)\n        \n       \n        //console.log('tick');\n        this.prophet.processDetla(delta)\n        \n        this.gameTime.processDelta(delta)\n        this.bounds();\n\n    }\n\n    bounds () {\n        const PIETYBOUND = 1e100\n        if (this.datamap.prophetData.piety> PIETYBOUND) this.datamap.prophetData.piety = PIETYBOUND;\n    }\n\n\n    \n    startOffline (delta: number) {\n        this.datamap.offline = {happening: true,totaltime: delta}\n    }\n\n    stopOffline () {\n        this.datamap.offline.happening = false;\n    }\n\n    executeCommand = (command: string) => {\n        let commands = command.split(' ');\n        //console.log(`process ${command}, ${commands}`);\n\n        switch (commands[0]) {\n            case '1hr':\n                this.processDelta(60 * 60 * 1000);\n                break;\n\n            case 'prophet':\n                this.prophet.processCommands(commands)\n                break;\n\n            case 'gametime':\n                this.gameTime.processCommands(commands);\n                break;\n\n            case 'pantheon':\n                doPantheonUpgrade(this.datamap, commands)\n                break;\n\n            case 'save':\n                this.save();\n                break;\n\n            case 'load':\n                this.load();\n                break;\n\n            case 'import':\n                this.import(commands[1]);\n                break;\n            \n            case 'export':\n                this.export();\n                break;\n\n            case 'nav':\n                if (commands[1] === 'main') {\n                    this.nav.changeMainArea(commands[2])\n                } else if (commands[1] === 'sub') {\n                    this.nav.changeSubArea(commands[2])\n                }\n                break;\n\n            case 'followers':\n                this.followers.handle_followers_command(commands)\n                break;\n\n            case 'rocket':\n                this.rocket.handle_rocket_command(commands);\n                break;\n            case 'keypress':\n                this.handleKey(commands[1]);\n                break;\n\n            case 'nac':\n                this.nac.nacCommand(commands)\n                break;\n\n            case 'adornments':\n                this.adornments.handle_adornments_command(commands);\n                break;\n\n            case 'answers':\n                this.answers.handle_answer_command(commands);\n                break;\n\n            case 'autosavetoggle':\n                this.datamap.autosave = !this.datamap.autosave\n                break;\n\n            case 'CHEAT':\n                console.log('cheating');\n                \n                if (commands[1] === 'gems'){\n                    this.datamap.adornments.gems += 100;\n                    console.log('cheating for gems');\n                    \n                } \n                break;\n\n            case 'fullwipe':\n                this.datamap = newDefaultMap();\n                break;\n       \n            default:\n                console.log('...the dev made a mistake.')\n                break;\n\n        }\n\n        this.notify();\n    }\n\n    handleKey = (key: string) => {\n        //console.log();\n        \n        switch (key) {\n            case 'p':\n            case 'P':\n                this.prophet.pray();\n                break;\n\n            case 'm':\n            case 'M':\n                for (let index = 0; index < 10; index++) {                    \n                    this.prophet.buyMaxRelic(index.toString())\n                }\n                break;\n\n            case 'n':\n            case 'N':\n                for (let index = 9; index >= 0; index--) {                    \n                    this.prophet.buyMaxRelic(index.toString())\n                }\n                break;\n\n            case 'r':\n            case 'R':\n                //this.prophet.prestige();\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    load = () => {\n        let now = Date.now();\n        this.quietLoad();\n        this.startOffline(now-this.datamap.last)\n        this.notify();\n        this.processDelta(now-this.datamap.last)\n        this.datamap.last = now;\n        this.stopOffline();\n    }\n\n    fakeLongOffline = (daystofake: number) => {\n        let now = Date.now();\n        let mstofake = daystofake * 24 * 60 * 60 * 1000\n        this.startOffline(mstofake);\n        this.notify(); \n        this.processDelta(mstofake);\n        this.datamap.last = now;\n        this.stopOffline();\n        this.notify();\n    }\n\n    import = (lzutf8str: string) => {\n        var LZUTF8 = require('lzutf8');\n        \n        //console.log(lzutf8str);\n        let arrayStr = lzutf8str.split(',')\n        let arrayInt = arrayStr.map(value=>parseInt(value))\n        let magicArray = Uint8Array.of(...arrayInt);\n        \n\n        //var string = new TextDecoder(\"utf-8\").decode(lzutf8str);\n        //let test = new Uint8Array(lzutf8str)\n        //let uint8array: Uint8Array = new Uint8Array(lzutf8str)\n        //let uint8array = new Uint8Array()\n        //var uint8array = new TextEncoder().encode(lzutf8str);\n        //console.log(uint8array);\n\n        var output = LZUTF8.encodeUTF8(lzutf8str);\n        //console.log(output, arrayStr, magicArray);\n        \n        let check = LZUTF8.decompress(magicArray);\n        //console.log(check);\n\n        /**\n         * \n      */\n        \n        \n\n        let combstr = check;\n        if (combstr != null){\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n\n    }\n\n    export = () => {\n        let dataString = JSON.stringify(this.datamap);\n        var LZUTF8 = require('lzutf8');\n        let output = LZUTF8.compress(dataString);\n        //  console.log(output)\n        //console.log(dataString.length)\n\n//        download(`prophet_export_${Date.now()}.txt`,dataString)\n        download(`prophet_export_${Date.now()}.txt`,output)\n\n        function download(filename: string, text: string) {\n            var element = document.createElement('a');\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n            element.setAttribute('download', filename);\n          \n            element.style.display = 'none';\n            document.body.appendChild(element);\n          \n            element.click();\n          \n            document.body.removeChild(element);\n          }\n\n    }\n\n    prophet = new ProphetModule(this);\n    gameTime = new GameTime(this);\n    nav = new NavArea(this);\n    followers = new Followers(this)\n    rocket = new Rocket(this);\n    nac = new NameAndCode(this);\n    adornments = new Adornments(this);\n    answers = new Answers(this);\n}\n\n","import * as React from 'react';\nimport { Datamap, newDefaultMap } from '../engine/Datamap';\n\ntype AppContextType = {\n  data: Datamap;\n  submitCommand: (str:string)=>void;\n}\n\n// Create a context wrapping some shared state\nlet AppContext = React.createContext<AppContextType>({\n  data: newDefaultMap(),\n  submitCommand: (str)=>{},\n});\n\nexport default AppContext;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './TipFC.scss'\nimport ReactDOM from 'react-dom';\n\nconst TipFC: React.FC<{ tip?: ReactNode }> = (props) => {\n  \n  return ( <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC'>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n)}\n\nexport class classTipFC extends React.Component<{ tip: ReactNode }, {top: string|number, bottom: string|number}>{\n\n  constructor(props: Readonly<{ tip: React.ReactNode; }>) {\n    super(props)\n    this.state = {\n      top: \"\",\n      bottom: \"\"\n    }\n  }\n\n  static contextType = AppContext;\n\n  componentDidMount () {\n    this.setTB();\n  }\n  \n\n  componentDidUpdate() {\n    this.setTB();\n  }\n\n  setTB= ()=>{\n\n    let height = window.innerHeight;\n\n    let top: number | string = \"\"\n    let bottom: number | string = \"\"\n\n    let myDom = ReactDOM.findDOMNode(this);\n\n    if (myDom) {\n\n\n      let parent = ((ReactDOM.findDOMNode(this) as Element).parentElement as Element)\n\n      if (parent) {\n\n        parent = parent as Element;\n        let parentBounds = parent.getBoundingClientRect()\n\n        /*\n        if (parentBounds.right > width / 2) {\n          right = width - parentBounds.right;\n          left = \"\"\n        } else {\n          right = \"\"\n          left = parentBounds.left\n        }*/\n\n        if (parentBounds.bottom > height / 2) {\n          bottom = height - parentBounds.top;\n          top = \"\"\n        } else {\n          bottom = \"\";\n          top = parentBounds.bottom;\n        }\n\n        this.setState({top, bottom});\n      }\n    }\n\n  }\n\n  render() {\n    let props = this.props;\n\n    //let width = window.innerWidth;\n\n    //let left: number | string = \"\"\n    //let right: number | string = \"\"\n    \n\n    \n\n    return (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC' style={{top:this.state.top, bottom:this.state.bottom}}>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default TipFC;\n\n","import React, { ReactNode } from 'react';\nimport TipFC from './TipFC';\n\nexport interface ProgressProps {\n    value: number;\n    max: number;\n    color?: string;\n    background?: string;\n    label: string | ReactNode; \n    textColor?: string\n    tip?: ReactNode;\n}\n\n   \nconst ProgressFC: React.FC<ProgressProps> = (props) => {\n    let trueValue = Math.min(props.value, props.max)\n    let widthpercent = (trueValue * 100 / (props.max)).toString() + \"%\";\n    if (widthpercent === 'NaN%') widthpercent = '0%';\n    const [off, setOff] = React.useState(false);\n    if (off) widthpercent = '100%'\n\n    return (\n        <div className='ProgressFC' style={{backgroundSize:widthpercent}}>\n            <div className='InnerProgress' style={{width:widthpercent}} onClick={()=>setOff(!off)}>\n                <span style={{whiteSpace:'nowrap'}}>\n                    {props.label} \n                </span>\n            </div>\n            <TipFC tip={<div>{`${props.value}/${props.max}`}{props.tip}</div>} />\n        </div>\n    )\n}\n\n\nexport default ProgressFC;","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport ProgressFC from \"./comps/ProgressFC\";\nimport GameTime from \"../engine/modules/Gametime\";\n\nconst BottomBar: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='UIRow GameTimeRow'>\n            <div style={{display:'flex', width:'100%'}}>\n                <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.msprogress} max={GameTime.requiredMS} label={`Time - ${msToHM(data.gameTime.msprogress)}`} />\n                </div>\n                <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.day} max={GameTime.maxDays} label={`Day - ${data.gameTime.day}`} />\n            </div>\n            <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.month} max={GameTime.maxMonths} label={`Month - ${data.gameTime.month} ${MONTHS[data.gameTime.month - 1]}`} />\n            </div>\n            <div>\n                {`Year - ${data.gameTime.year}`}\n            </div>\n            </div>\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default BottomBar;\n\nfunction msToHM (msTime: number) {\n    \n    let hour = Math.floor(msTime/1000).toString();\n    if (hour.length === 1) hour = '0' + hour;\n\n    let minute = Math.floor((msTime%1000)/1000 * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n    \n    return `${hour}:${minute}`\n}\n\nconst MONTHS = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n]","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\n   \nconst CommandButtonFC: React.FC<DecoupledCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false} hidden={props.hidden?props.hidden(data):false} onClick={()=>{submitCommand(props.command)}}>\n            <div className='innerCommandRow'>\n            <span>{props.name}</span> \n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n      )}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButtonFC;\n","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport { formatNumber } from \"../engine/util\";\nimport { prophet_maxHolyPower, relic_getAllProductionPerecond, preachers_max_deovtion_gain, devotee_devotion_gain, prophet_prestige_gain, net_Piety_gain, prayer_Piety_seconds_gain, daily_Piety_prayer_gain } from \"../engine/modules/Prophet\";\nimport { WealthyBeliever_USD_gain, net_USD_gain, net_Devotion_gain } from \"../engine/modules/Followers\";\nimport { currentSalary } from \"../engine/modules/Exploring\";\nimport TipFC from \"./comps/TipFC\";\n\nconst ProphetUI: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='ProphetUI'>\n\n            <PietyEstimate/>\n\n            <div hidden={data.prophetData.congregation.USD === 0} className='USDDiv'>\n            {`$${formatNumber(data.prophetData.congregation.USD)}`}<br/>\n            {`+ ${formatNumber(net_USD_gain(data))}  per day`}\n            </div>\n\n            <div hidden={data.prophetData.congregation.unlocked === false} className='DevotionDiv'>\n                {`Devotion: ${formatNumber(data.prophetData.devotion)} `}<br/>\n                {`+ <= ${formatNumber(net_Devotion_gain(data))} per day`}\n            </div>\n\n            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                    {`Holiness: ${formatNumber(data.prophetData.holiness)}`}<br/>\n                    {`+ ${formatNumber(prophet_prestige_gain(data))} on Reincarnation`}\n            </div>\n\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default ProphetUI;\n\nconst PietyEstimate: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => {\n            let piety_ps = relic_getAllProductionPerecond(data);\n            let piety_pp = piety_ps * prayer_Piety_seconds_gain(data);\n            let piety_pd = piety_pp * daily_Piety_prayer_gain(data);\n            let s1: [number, string] = [piety_ps, \"per second\"];\n            let s2: [number, string] = [piety_pp, \"per prayer\"];\n            let s3: [number, string] = [piety_pd, \"per day\"];\n            let l = [s1, s2, s3].sort((a,b)=>b[0]-a[0]);\n        \n        return (\n\n\n            <div className='PietyDiv'>\n\n                    {`Piety: ${formatNumber(data.prophetData.piety)}`}<br/>\n                    <span>\n                    {`+ ${formatNumber(l[0][0])} ${l[0][1]} `}\n                        <TipFC tip={<div>\n                    {`+ ${formatNumber(l[1][0])} ${l[1][1]} `}<br/>\n                    {`+ ${formatNumber(l[2][0])} ${l[2][1]} `}\n                        </div>}/>\n\n                    </span>\n            </div>\n\n    )}}</AppContext.Consumer>\n)","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './NavBar.scss';\nimport CommandButtonFC from './CommandButtonFC';\nimport { areaUnlocked } from '../../engine/modules/NavArea';\n\nconst NavBar: React.FC<{tip?: ReactNode}> = (props) => (\n  <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n        <div className={`NavBar selected${data.nav.mainArea+1}`}>\n          <CommandButtonFC name='Relics' command='nav main 0' />\n          <CommandButtonFC name='Reincarnation' command='nav main 1' hidden={(datamap)=>{return !areaUnlocked(1, data)}}/>\n          <CommandButtonFC name='Congregation' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n          <CommandButtonFC name='Miracles' command='nav main 4' hidden={(datamap)=>{return datamap.rocketData.unlocked === false}} />\n          <CommandButtonFC name='Pantheon' command='nav main 5' hidden={(datamap)=>{return datamap.pantheon.unlocked === false}} />\n          <CommandButtonFC name='Answers' command='nav main 6' hidden={(datamap)=>{return datamap.prophetData.congregation.paritioners[2] === 0}} />\n        </div>    \n\n\n      )}\n    </AppContext.Consumer>\n)\n\nexport default NavBar;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport CommandButtonFC from './CommandButtonFC';\n\nexport interface CCBProps {\n  command: DecoupledCommand;\n  warning: ReactNode\n}\n\nexport default class ConfirmCommandButton extends React.Component<CCBProps, {open:boolean}>{ \n\n  constructor(props:CCBProps) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  static contextType = AppContext;\n\n  fakeBuy = (ev: React.MouseEvent) => {\n    if (ev.shiftKey) {\n      this.context.submitCommand(this.props.command.command)\n    } else this.setState({open:!this.state.open})\n    \n  }\n\n  render () {\n    let data = this.context.data;\n\n    return (<div>\n        <div className='FakeButton' hidden={this.props.command.hidden?this.props.command.hidden(data):false}>\n        <button className='DCommandFC' disabled={this.props.command.able?!this.props.command.able(data):false} onClick={this.fakeBuy}>\n            <div className='innerCommandRow'>\n              <span>{this.props.command.name}</span> \n            <img hidden={this.props.command.img === undefined} src={this.props.command.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={this.props.command.tip} />\n        </button>\n        </div>\n        <div className='WarningBox' hidden={!this.state.open}>\n            <div className='WarningOverlay' onClick={this.fakeBuy}>\n              <div className='WarningPopup'>\n                {this.props.warning}\n                <div className='flexrow spacebetween'>\n                <CommandButtonFC {...this.props.command}/>\n                <button className='PlainD' onClick={this.fakeBuy}>\n                  cancel\n                </button>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>)\n  }\n}\n\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand2 } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport { percentOf, formatNumber } from '../../engine/util';\n   \nconst CommandButton2: React.FC<DecoupledCommand2> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n        let command = props.command(data);\n        let name = props.name(data);\n        let change = props.change?props.change(data):undefined;\n        let cost;\n        if (props.cost) {\n          cost = props.cost(data)\n        }\n\n        return (\n          <div hidden={props.hidden?props.hidden(data):false}>\n\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false}  onClick={()=>{submitCommand(command)}}>\n            <div className='innerCommandRow'>\n              <div className='flexcolumn'>\n            <span>{name}</span>\n            <span>{change}</span> \n      {cost&&<span>{formatNumber (cost)} <span>{props.costName}</span> {props.resource&&<span>({percentOf(cost, props.resource(data))})</span>}</span>}\n            </div>\n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n          </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButton2;\n","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\nimport CommandButtonFC from \"./CommandButtonFC\";\n\nimport { prophet_prestige_gain, next_holiness_mult, holiness_mult, reincation_mult, CMD_prophet_devotedPrestige, devotedPrestige_cost, Building_Multi } from \"../../engine/modules/Prophet\";\n\nimport { holiness_holyPumpUpgrade_command, holiness_holyPumpUpgradeCost, holiness_maxHolyPowerUpgrade_command, holiness_maxHolyPowerUpgradeCost, holiness_holypower1, holiness_holyPowerUpgradeCost as holiness_holyPowerEffectivenessUpgradeCost, holiness_buildingMulti_command, holiness_buildingMultiCost, holiness_believerRetention_command, holiness_believerRetentionCost, holiness_exRelations_command, holiness_exRelationsCost, holiness_devotionEffectiveness_command, holiness_devotionEffectivenessCost } from \"../../engine/modules/PietyPurchases\";\nimport ConfirmCommandButton from \"./ConfirmCommandButton\";\nimport { formatNumber } from \"../../engine/util\";\nimport { availableDivinity, getDivinity, DivinityPurchase, divinityPurcase_getCost, dp_able, DP_Upgrades } from \"../../engine/modules/Followers\";\nimport CommandButton2 from \"./CommandButton2\";\nimport { UnlockPantheonCommand } from \"../../engine/modules/Pantheon/Pantheons\";\n\nconst ResetUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className='HolinessUI'>\n                <div className='HeaderText'>Commands</div>\n                <div className='flexrow'>\n                    <ConfirmCommandButton\n                        command={{\n                            command: 'prophet prestige',\n                            name: `Reincarnate (+${formatNumber(prophet_prestige_gain(data))} holiness)`,\n                            hidden: (datamap) => { return datamap.prophetData.prestigeUnlocked === false },\n                            tip: (<div>\n                                <div>\n                                    Holiness Mult After: x{next_holiness_mult(data).toFixed(1)}\n                                </div>\n                                <div className='PietyDiv'>\n                                    From max Piety this life: {formatNumber(data.prophetData.maxPiety)}\n                                </div>\n                                <div>\n                                    Net from reincarnation {formatNumber((prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness))}\n                                </div>\n                            </div>)\n                        }}\n                        warning={<div>\n                            {`You will lose everything except things you know you wont!`}\n                        </div>}\n\n                    />\n                    <div className='ParitionerButton'>\n\n                        <ConfirmCommandButton\n                            command={{\n                                ...CMD_prophet_devotedPrestige,\n                                tip: (<div>\n                                    <div>\n                                        Cost: {formatNumber(devotedPrestige_cost(data))} Devotion\n                                    </div>\n                                    <div>\n                                        Lose: Everything except divinity upgrades and increased reincarnation multiplier. <br />\n                                        Get: 100% increased reincarnation multiplier, +1 Divinity\n                                    </div>\n                                    <div>\n                                        x{data.followers.devotedPrestige + 1} -> x{data.followers.devotedPrestige + 2}\n                                    </div>\n                                </div>)\n                            }}\n                            warning={<div>\n                                {`You will lose everything except your devoted prestige level!`}\n                            </div>}\n                        />\n                    </div>\n                </div>\n\n                <div className='HeaderText'>Info</div>\n                <div>\n                    {`Holiness spent this life ${formatNumber(data.prophetData.startingHoliness - data.prophetData.holiness)}`}\n                    </div><div>\n                    {`Net Holiness after reincarnation ${formatNumber((prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness))}`}\n                </div>\n                <div className='HolinessDiv'>\n                    {`Holiness Mult: x${holiness_mult(data).toFixed(1)}`}\n                </div>\n                <div>\n                    {`Reincarnation Mult: x${reincation_mult(data).toFixed(1)}`}\n                </div>\n                <div className='HeaderText'>Holiness Upgrades</div>\n                <div className='flexrow'>\n\n                <CommandButton2 \n                    name={()=>holiness_holyPumpUpgrade_command.name}\n                    command={()=>holiness_holyPumpUpgrade_command.command}\n                    hidden={holiness_holyPumpUpgrade_command.hidden}\n                    able={holiness_holyPumpUpgrade_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.holyPumpUpgrade}`}\n                    cost={holiness_holyPumpUpgradeCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Double Holy Power gain from Prayer<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_maxHolyPowerUpgrade_command.name}\n                    command={()=>holiness_maxHolyPowerUpgrade_command.command}\n                    hidden={holiness_maxHolyPowerUpgrade_command.hidden}\n                    able={holiness_maxHolyPowerUpgrade_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.maxHolyPowerUpgrade}`}\n                    cost={holiness_maxHolyPowerUpgradeCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Double maximum Holy Power. Holy power mult is a function of current Holy Power, which is limited my maximum holy power.<br/>\n                        Max holy power and holy power mult are not 1->1. <br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_holypower1.name}\n                    command={()=>holiness_holypower1.command}\n                    hidden={holiness_holypower1.hidden}\n                    able={holiness_holypower1.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.holypowerUpgrade}`}\n                    cost={holiness_holyPowerEffectivenessUpgradeCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Increase the effectiveness of Holy Power<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_buildingMulti_command.name}\n                    command={()=>holiness_buildingMulti_command.command}\n                    able={holiness_buildingMulti_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.buildingMulti}`}\n                    hidden={holiness_buildingMulti_command.hidden}\n                    cost={holiness_buildingMultiCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        +0.1 \"Relic Production Per 25 Relics\" Multiplier<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_believerRetention_command.name}\n                    command={()=>holiness_believerRetention_command.command}\n                    able={holiness_believerRetention_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.believerRetention}`}\n                    cost={holiness_believerRetentionCost}\n                    hidden={holiness_believerRetention_command.hidden}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Halve the believers who leave each day.<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_exRelations_command.name}\n                    command={()=>holiness_exRelations_command.command}\n                    hidden={holiness_exRelations_command.hidden}\n                    able={holiness_exRelations_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.exRelations}`}\n                    cost={holiness_exRelationsCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Make the influence of ex members less effective.<br />\n                    </div>}\n                />\n                <CommandButton2 \n                name={()=>holiness_devotionEffectiveness_command.name}\n                command={()=>holiness_devotionEffectiveness_command.command}\n                hidden={holiness_devotionEffectiveness_command.hidden}\n                able={holiness_devotionEffectiveness_command.able}\n                change={(data)=>`Level: ${data.holinessUpgrades.devotionEffectiveness}`}\n                cost={holiness_devotionEffectivenessCost}\n                resource={()=>data.prophetData.holiness}\n                costName={`holiness`}\n                tip={<div>\n                    Increase the total devotion multiplier by 2x<br />\n                </div>}\n                />\n                </div>\n                <div hidden={getDivinity(data) === 0}>\n                <div className='HeaderText'>Divinity Upgrades</div> \n                <div className='DivinityButtonWrapper'>\n\n                <CommandButtonFC command='followers divinity reset_toggle' \n                        name={data.followers.DPUpgrades.reset?`Reset on Reincarnation (ON)`:`Reset on Reincarnation (OFF)`} \n                        />\n                        </div>\n\n                    <div>Available divinity: {availableDivinity(data)}</div>\n                    <div className='flexrow DivinityButtonWrapper flexwrap'>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_beliverGain}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_fasterRelicProduction}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_superHolyPump}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_heavyHolyPower}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_monthMultiplier}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_yearMultiplier}/>\n                    </div>\n\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default ResetUI;\n\n\n\n\nconst DPUpgradeComp: React.FC<{ dp: DivinityPurchase }> = (props) => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <CommandButtonFC {...props.dp.command}\n                able={(datamap)=>{return dp_able(datamap, props.dp)}}\n                tip={<div>\n                    Cost: {divinityPurcase_getCost(data, props.dp)}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n        )}\n    </AppContext.Consumer>\n)\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { Paritioners, paritioner_able, paritioner_maxBuyAmount, paritioner_cost, paritioner_maxBuyCost, paritioner_buyHalfMax_amount, paritioner_buyHalfMax_cost, proudBeliever_believer_gain, WealthyBeliever_USD_gain, WealthyBeliever_Believer_gain } from '../../engine/modules/Followers';\nimport { formatNumber } from '../../engine/util';\n\n\nconst ParitionerBox: React.FC<{ paritionerIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.paritionerIndex > 0 && data.prophetData.congregation.paritioners[props.paritionerIndex - 1] === 0} className='ParitionerBox'>\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n          <div>\n            <span>\n           {Paritioners[props.paritionerIndex].name}\n            </span>\n            <div>\n            Count: {data.prophetData.congregation.paritioners[props.paritionerIndex]}\n          </div>\n          </div>\n          <div className='flexrow spacebetween'>\n\n          <CommandButtonFC\n            name={`Recruit`}\n            command={`followers recruitparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_able(datamap, props.paritionerIndex) }}\n            />\n            <CommandButtonFC\n              name={`Recruit 50% (${paritioner_buyHalfMax_amount(props.paritionerIndex, data)})`}\n              command={`followers recruithalfmaxparitioner ${props.paritionerIndex}`}\n              able={(datamap) => { return paritioner_buyHalfMax_amount(props.paritionerIndex, datamap) > 0 }}\n              tip={(<div>\n                Cost: {paritioner_buyHalfMax_cost(props.paritionerIndex, data).toExponential(3)}\n              </div>)}\n            />\n          <CommandButtonFC\n            name={`Recruit max (${paritioner_maxBuyAmount(props.paritionerIndex, data)})`}\n            command={`followers recruitmaxparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_maxBuyAmount(props.paritionerIndex, datamap) > 0 }}\n            tip={(<div>\n              Cost: {paritioner_maxBuyCost(props.paritionerIndex, data).toExponential(3)}\n            </div>)}\n          />\n              </div>\n\n              <div className='flexrow spacebetween'>\n                \n\n          \n          <div >\n            Cost: {formatNumber(paritioner_cost(data, props.paritionerIndex))} Devotion\n          </div>\n              </div>\n\n              <div>\n                <ParitionerDetailts index={props.paritionerIndex} />\n              </div>\n\n          \n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default ParitionerBox;\n\nexport const ParitionerDetailts: React.FC<{ index: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div>\n        {(props.index === 0) && `Bringing in ${proudBeliever_believer_gain(data)} other believers a day`}\n        {(props.index === 1) && `Tithing ${WealthyBeliever_USD_gain(data)} USD a day`}\n        {(props.index === 2) && `Asking ${data.prophetData.congregation.paritioners[props.index]} questions a day`}\n        {(props.index === 3) && `Providing ${data.prophetData.congregation.paritioners[props.index]} credibility a day `}\n        {(props.index === 4) && `Taking ${data.prophetData.congregation.paritioners[props.index]} crediblity a day`}\n        {(props.index === 5) && `Fix ${data.prophetData.congregation.paritioners[props.index]} a day`}\n\n        <br/>\n\n        {(props.index === 1 && data.pantheon.wealth.b > 0) && `Recruiting ${WealthyBeliever_Believer_gain(data)} believers a day`}\n\n      </div>\n    )}\n  </AppContext.Consumer>\n)","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand2 } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport { percentOf, formatNumber } from '../../engine/util';\nimport ExpoCommand, { expoCommand_Able, expoCommand_Cost, expoCommand_maxAmmount } from '../../engine/interfaces/ExpoCommand';\n   \nconst ExpoButton: React.FC<ExpoCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n        \n        let command = props.command;\n        let name = props.name;\n        let level = props.countFns.get(data);\n\n        let change = props.change?props.change(data):undefined;\n\n        let able = expoCommand_Able(data, props)\n        let cost = expoCommand_Cost(data, props)\n        let max = expoCommand_maxAmmount(data, props)\n\n        return (\n          <div hidden={props.hidden?props.hidden(data):false}>\n\n          <div className='DCommandFC'  >\n            <div className='innerCommandRow flexrow'>\n              <button className='DCommandFC flexcolumn' disabled={!able}  onClick={()=>{submitCommand(command)}} >\n        <span>{name}</span> \n        <span>Level {level}</span>\n            {change && <span>{change}</span>} \n            <span>{formatNumber (cost)} <span>{props.currencyName}</span> </span>\n            </button>\n            <button className='DCommandFC' disabled={!able}  onClick={()=>{submitCommand(command+'max')}}>\n            Buy Max<br/> \n            ({max})\n            </button>\n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </div>\n\n\n\n          </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default ExpoButton;\n","import AppContext from \"../context/context\";\n\nimport { helper_prophet_maxBelieversDecay, CMD_prophet_proselytize, helper_prophet_maxBeliverGain, helper_prophet_exBeliever_harm, helper_prophet_maxBeliverGainNet, preachers_max_deovtion_gain, devotee_devotion_gain, doorknocker_beliver_gain, helper_prophet_exBeliever_believerDecay, helper_prophet_size_believerDecay, availablePeople } from \"../engine/modules/Prophet\";\n\nimport TipFC from \"./comps/TipFC\";\n\nimport { devotion_mult, upgrade_preacher_cmd, preacher_upgrade_cost, recruit_preacher_cmd, preacher_cost, upgrade_devotee_cmd, devotee_upgrade_cost, recruit_devotee_cmd, devotee_cost, upgrade_doorknocker_cmd, doorknocker_upgrade_cost, recruit_doorknocker_cmd, doorknocker_cost, proudBeliever_believer_gain, UnlockAdornments, UnlockAdornments_cost, WealthyBeliever_Believer_gain } from \"../engine/modules/Followers\";\n\nimport CommandButtonFC from \"./comps/CommandButtonFC\";\n\nimport ParitionerBox from \"./comps/ParitionerBox\";\nimport React from \"react\";\nimport { formatNumber, WORLD_POP } from \"../engine/util\";\nimport CommandButton2 from \"./comps/CommandButton2\";\nimport * as DevotionUpgrades from \"../engine/modules/PantheonBuys\";\nimport StatFC from \"./comps/StatFC\";\nimport { UnlockPantheonCommand } from \"../engine/modules/Pantheon/Pantheons\";\nimport ExpoButton from \"./comps/ExpoButton\";\nimport { USD_UpgradeTithe, USD_Upgrade_Pamphlets } from \"../engine/modules/USDPurchases\";\n\nconst FollowersUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div>\n\n\n\n                <div>\n\n                    <div>\n                        <span className='HeaderText'>Congregation Info</span>\n                    </div>\n                    <div>\n                        <span style={{color:'red'}}>\n                            WARNING: Things bought here are lost on reincarnation!\n                        </span>\n                    </div>\n                    <div>\n                        {`Believers: ${data.prophetData.believers}`}<br />\n                        <TipFC tip={`Believers are useless on their own, but Preachers use them to genreate deovtion!`} />\n                    </div>\n                    <div>\n                        {`Daily Believer Gain: ${doorknocker_beliver_gain(data) + proudBeliever_believer_gain(data) + WealthyBeliever_Believer_gain(data)}`}\n                    </div>\n                    <div>\n                        {`Max Daily Believer Loss: ${helper_prophet_maxBelieversDecay(data)}`}<br />\n                        <TipFC tip={<div>It feels like people stop believing every day!<br />Both total followers and total ex followers are influences.<br />\n                            Loss From Ex Followers: {helper_prophet_exBeliever_believerDecay(data)}<br />\n                            Loss From Congregation Size: {helper_prophet_size_believerDecay(data)}<br />\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Former Belivers: ${data.prophetData.ex_believers}`}<br />\n                        <TipFC tip={<div>Pesky ex-believers influence people to not believe!<br />\n                            {`Removes ${helper_prophet_exBeliever_harm(data)} from possible gains`}<br />\n                            {`Makes up to ${helper_prophet_exBeliever_believerDecay(data)} believers leave each day`}<br />\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Possible Converts ${availablePeople(data)}`}\n                        <TipFC tip={<div>\n                            {`World Pop - ExBelievers - Believers`}<br />\n                            {`${WORLD_POP} - ${data.prophetData.ex_believers} - ${data.prophetData.believers}`}<br />\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Devotion Mult to Piety: x${devotion_mult(data).toFixed(1)}`}\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className='HeaderText'>Commands</div>\n                    <div className='flexrow'>\n                        <div className='HolinessButtonWrapper'>\n\n                            <CommandButtonFC {...CMD_prophet_proselytize}\n                                tip={<div>\n                                    Spend Holiness to make people believe<br />\n                                    {`Proselytize Beliver Gain: (${helper_prophet_maxBeliverGain(data)}-${helper_prophet_exBeliever_harm(data)})=${helper_prophet_maxBeliverGainNet(data)}`}<br />\n                                    (How many believers your piety attracts) - (How many believers your ex-believers detract)\n                            </div>}\n                            />\n                        </div>\n\n                        <div className='DevotionButtonWrapper'>\n\n\n                        <CommandButton2\n                            name ={()=>UnlockAdornments.name}\n                            command ={()=>UnlockAdornments.command}\n                            hidden= {UnlockAdornments.hidden}\n                            able={UnlockAdornments.able}\n                            cost={UnlockAdornments_cost}\n                            costName='Devotion'\n                                tip={`Unlock Adornments that aren't lost through ANY reincarnation, or for any reason ever. You keep these!`}\n                            />\n                        </div>\n                            \n                            <div className='USDCommand'>\n                                <CommandButton2 {...UnlockPantheonCommand} />\n                            </div>\n\n                    </div>\n                    <div className='HeaderText'>Upgrades</div>\n                    <div className='flexrow'>\n\n                        <div className='USDCommand'>\n                            <ExpoButton {...USD_UpgradeTithe} />\n                        </div>\n\n                        <div className='USDCommand'>\n                            <ExpoButton {...USD_Upgrade_Pamphlets} />\n                        </div>\n\n\n\n                    </div>\n\n                    <div className='flexrow'>\n\n                        <div className='flexrow'>\n                            {DevotionUpgrades.ABC_hidden(data) === false && <div className='flexcolumn godbox' style={{ border: '2px solid white' }}>\n                                <div>Choose a god for your believers to be proud of, and add it to your Pantheon</div>\n                                <div className='flexrow DevotionButtonWrapper '>\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_ShorterDays} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_NoHPDecay} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_RelicPower} />\n                                </div>\n                            </div>}\n                        </div>\n                        <div className='flexrow'>\n                            {DevotionUpgrades.DEF_hidden(data) === false && <div className='flexcolumn godbox' style={{ border: '2px solid white' }}>\n                                <div>Choose a god that gives your believers a reason to give, and add it to your Pantheon.</div>\n                                <div className='flexrow DevotionButtonWrapper'>\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_D} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_E} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_F} />\n                                </div>\n                            </div>}\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <div>\n                    <div className='flexrow'>\n                        <span className='HeaderText'>Use your Holiness to convert basic believers into Clergy</span>\n                        <div className='HolinessButtonWrapper'>\n                            <CommandButtonFC command='followers recruit autotoggle'\n                                name={data.automation.auto_buyToNext ? `Auto Rebuy (ON)` : `Auto Rebuy (OFF)`}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='FollowerBox'>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.preachers} Preachers - Level {data.prophetData.congregation.preacherLevel + 1}<br />\n                                    <span hidden={data.prophetData.congregation.preachers >= data.prophetData.congregation.old.preachers\n                                        && data.prophetData.congregation.preacherLevel >= data.prophetData.congregation.old.preacherLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.preachers} Preachers - Level {data.prophetData.congregation.old.preacherLevel + 1}\n                                        <CommandButtonFC\n                                            command='followers recruit preachermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Up to ${formatNumber(preachers_max_deovtion_gain(data))} devotion per day from believers`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_preacher_cmd} />\n                                    <span>\n                                        {`Cost: ${formatNumber(preacher_upgrade_cost(data))} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_preacher_cmd} />\n                                <span>\n                                    {`Cost: ${formatNumber(preacher_cost(data))} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.devotee} Devotees - Level {data.prophetData.congregation.devoteeLevel + 1}<br />\n                                    <span hidden={data.prophetData.congregation.devotee >= data.prophetData.congregation.old.devotee\n                                        && data.prophetData.congregation.devoteeLevel >= data.prophetData.congregation.old.devoteeLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.devotee} Devotees - Level {data.prophetData.congregation.old.devoteeLevel + 1}\n                                        <CommandButtonFC\n                                            command='followers recruit devoteemax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n                                </div>\n                                <div>\n                                    {`${devotee_devotion_gain(data)} devotion per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_devotee_cmd} />\n                                    <span>\n                                        {`Cost: ${formatNumber(devotee_upgrade_cost(data))} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_devotee_cmd} />\n                                <span>\n                                    {`Cost: ${formatNumber(devotee_cost(data))} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.doorknocker} Recruiters - Level {data.prophetData.congregation.doorknockerLevel + 1}<br />\n                                    <span hidden={data.prophetData.congregation.doorknocker >= data.prophetData.congregation.old.doorknocker\n                                        && data.prophetData.congregation.doorknockerLevel >= data.prophetData.congregation.old.doorknockerLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.doorknocker} Recruiters - Level {data.prophetData.congregation.old.doorknockerLevel + 1}\n                                        <CommandButtonFC\n                                            command='followers recruit doorknockermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Recruiting ${doorknocker_beliver_gain(data)} belivers per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_doorknocker_cmd} />\n                                    <span>\n                                        {`Cost: ${formatNumber(doorknocker_upgrade_cost(data))} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_doorknocker_cmd} />\n                                <span>\n                                    {`Cost: ${formatNumber(doorknocker_cost(data))} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                </div>\n\n                <div>\n\n\n                    <span className='HeaderText'>Use your Devotion to create exceptional Believers.</span>\n\n                    <div className='FollowerBox'>\n                        <ParitionerBox paritionerIndex={0} />\n                        <ParitionerBox paritionerIndex={1} />\n                        <ParitionerBox paritionerIndex={2} />\n                    </div>\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default FollowersUI;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\nimport CommandButtonFC from \"./CommandButtonFC\";\nimport CommandButton2 from \"./CommandButton2\";\nimport { currentSalary, availableExplorers, AreaData, getAreaGoal, getAreaETA, show_explore_area, AREA_STRS } from \"../../engine/modules/Exploring\";\nimport { AdornmentItem, getFullAdornmentItem, buyButton } from \"../../engine/modules/Adornments\";\nimport TipFC from \"./TipFC\";\n\nconst AdornmentUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div>\n                <div className='HeaderText'>Adornments</div>\n                <div>\n                    Hire Believers to explore the world looking for Adornments for you. Not 100% useful yet!\n                    <TipFC tip={`Only all the items from the ruins do something. Only 40% of the items from each other area have been given stats.`} />\n                </div>\n                <hr/>\n                <div className='flexrow'>\n\n                    <div className='flexcolumn flexequal'>\n                        <div className='HeaderText'>Explorers</div>\n                        <div>\n                            No believers... no explorers.\n                        </div>\n                        <div className='HeaderText'>Info</div>\n                        <div className='flexcolumn flexwrap'>\n                            <div>\n                                \n                            Available Believers: {data.prophetData.believers}\n                            </div><div>\n\n                            Explorers: {data.adornments.explorers.explorerCount}\n                            </div><div>\n\n                            Available Explorers: {availableExplorers(data)}\n                            </div>\n                            <div>\n                            Daily Salary: <span className='USDDiv'>${currentSalary(data)}</span>\n                            </div>\n                        </div>\n\n                        <div className='HeaderText'>Commands</div>\n                        <div className='flexrow flexwrap'>\n\n                        <CommandButton2  command={() => 'adornments explorer hire'} name={() => `Hire Explorer`} />\n                        <CommandButton2 hidden={()=>data.adornments.explorers.explorerCount < 10} command={() => 'adornments explorer hire10'} name={() => `Hire 10 Explorers`} />\n                        <CommandButton2 hidden={()=>data.adornments.explorers.explorerCount < 100} command={() => 'adornments explorer hiremax'} name={() => `Hire Max? Explorers`} />\n                        <CommandButton2 command={() => 'adornments explorer fire'} name={() => `Fire Explorer`} />\n                        </div>\n\n                        <div className='HeaderText'>Party</div>\n                        <div className='flexrow flexwrap'>\n                        <div>\n                        Explorers to send {data.adornments.explorers.readyForMission}\n                        </div>\n                        <CommandButton2 command={() => 'adornments explorer senddown'} name={() => `<-`} />\n                        <CommandButton2 command={() => 'adornments explorer sendup'} name={() => `->`} />\n                        <CommandButton2 command={() => 'adornments explorer sendall'} name={() => `-->`} />\n                        </div>\n\n                        <div className='HeaderText'>Areas</div>\n\n                      \n                        <div className='flexrow flexwrap'>\n\n        {show_explore_area(data, AREA_STRS.RUINS_STRS.key) && <AreaBox commandKey='ruins' area={data.adornments.explorers.areas.ruins} />   }         \n        {show_explore_area(data, AREA_STRS.MART_STRS.key) && <AreaBox commandKey='mart' area={data.adornments.explorers.areas.mart} />  }        \n        {show_explore_area(data, AREA_STRS.SHOP_STRS.key) && <AreaBox commandKey='shop' area={data.adornments.explorers.areas.shop} />  }          \n                        </div>\n\n                    </div>\n                    \n                    <div className='flexcolumn flexequal'>\n                        <div className='HeaderText'>Found Adornments</div>\n                        Total Found: {data.adornments.adornmentCount}<br/>\n                        Gems: {data.adornments.gems}<br/>\n                        <div className='HeaderText'>Inventory</div>\n\n                        <div className='flexrow'>\n                            <div className='GemsCommand'>\n                        { <CommandButton2 {...buyButton} />}\n                            </div>\n                        { <CommandButton2 hidden={(data)=>(data.adornments.buttonsBought < 2)} command={() => `adornments sort level`} name={() => `sort by level`} />}\n                        { <CommandButton2 hidden={(data)=>(data.adornments.buttonsBought < 3)} command={() => `adornments sort type`} name={() => `sort by type`} />}\n                        { <CommandButton2 hidden={(data)=>(data.adornments.buttonsBought < 4)} command={() => `adornments sort origin`} name={() => `sort by origin`} />}\n                        { <CommandButton2 hidden={(data)=>(data.adornments.buttonsBought < 5)} command={() => `adornments combineall`} name={() => `combine all`} />}\n\n                        </div>\n\n                        <div className='flexrow flexwrap'>\n                        {data.adornments.items.map(((itemData,index)=><ItemBox itemData={itemData} index={index} key={`item ${index}`} />))}\n                        </div>\n                        <div className='HeaderText'>Equipped</div>\n                        <div className='flexrow flexwrap'>\n                        {data.adornments.equiped.book !== null &&  <EquippedItemBox itemData={data.adornments.equiped.book} slot={'book'} />}\n                        {data.adornments.equiped.cane !== null && <EquippedItemBox itemData={data.adornments.equiped.cane} slot={'cane'} /> }\n                        {data.adornments.equiped.cap !== null && <EquippedItemBox itemData={data.adornments.equiped.cap} slot={'cap'} /> }\n                        {data.adornments.equiped.ring !== null && <EquippedItemBox itemData={data.adornments.equiped.ring} slot={'ring'} />}\n                        {data.adornments.equiped.robe !== null && <EquippedItemBox itemData={data.adornments.equiped.robe} slot={'robe'} /> }\n                        </div>\n                        \n\n                    </div>\n\n                </div>\n\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default AdornmentUI;\n\nconst AreaBox: React.FC<{commandKey: string, area: AreaData}> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='areabox'>\n                            {props.commandKey}<br/>\n                            Active: {props.area.beingExplored.toString()}<br/>\n                            Current Explorers: {props.area.assignedExplorers}<br/>\n                            Work-Days Spent: {props.area.investedDays}<br/>\n                            Goal: {getAreaGoal(props.area, props.commandKey)}<br/>\n                            ETA: {getAreaETA(props.area, props.commandKey)} days<br/>\n                            Items Found: {props.area.exploredCount}\n                            {props.area.beingExplored===false && <CommandButton2 command={() => `adornments explorer ${props.commandKey}`} name={() => `Send Party`} />}\n                            {props.area.beingExplored===true && <CommandButton2 command={() => `adornments explorer stop${props.commandKey}`} name={() => `Recall Party`} />}\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nconst ItemBox: React.FC<{itemData: AdornmentItem, index: number}> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => {\n            let full = getFullAdornmentItem(props.itemData)\n            return (\n            <div className='itembox'>\n                            {full.name}<br/>\n                            {full.power}<br/>\n                            <div className='flexrow flexwrap' style={{alignItems:'center'}}>\n                            <CommandButton2 command={() => `adornments equip ${props.index}`} name={() => `Equip`} />\n                            <div className='GemsCommand'>\n\n                            <CommandButton2 command={() => `adornments sell ${props.index}`} name={() => `Sell`} />\n                            </div>\n                            <CommandButton2 hidden={(data)=>(data.adornments.buttonsBought < 1 || full.data.level > 9)} command={() => `adornments combine ${props.index}`} name={() => `Combine`} />\n                            <span>\n                                L:{full.data.level}\n                                </span>\n                            </div>\n            </div>\n        )}}\n    </AppContext.Consumer>\n)\n\nconst EquippedItemBox: React.FC<{itemData: AdornmentItem | null, slot: string}> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => {\n            let full = getFullAdornmentItem({iNo:0,level:0,origin:\"\"});\n            if (props.itemData !== null) full = getFullAdornmentItem(props.itemData)\n            return (\n            <div className='itembox'>\n                            {full.name}<br/>\n                            {full.power}<br/>\n                            <div className='flexrow' style={{alignItems:'center'}}>\n\n                            <CommandButton2 command={() => `adornments unequip ${props.slot}`} name={() => `Unequip`} />\n                            <span>\n                                L:{full.data.level}\n                                </span>\n                            </div>\n            </div>\n        )}}\n    </AppContext.Consumer>\n)","import React from 'react';\nimport AppContext from '../../context/context';\nimport './CommandButtonFC.scss'\nimport { msToFullHMS } from '../../engine/util';\n\n\nexport default class OfflineOverlay extends React.Component { \n\n  static contextType = AppContext;\n\n  fakeBuy () {\n\n  }\n\n  render () {\n    let data = this.context.data;\n\n    return (\n\n        <div className='WarningBox' hidden={data.offline.happening === false}>\n            <div className='WarningOverlay'>\n              <div className='WarningPopup'>\n                Offline Progress<br/>\n                HH:MM:SS<br/>\n                {msToFullHMS(data.offline.totaltime)}<br/>\n                Relic gain is calculated all at once, then days pass.\n              </div>\n            </div>\n        </div>\n    )\n  }\n}\n\n\n","import AppContext from \"../../context/context\";\nimport React from \"react\";\n   \nconst StatFC: React.FC<{name: string, value: number, units?: string, estimate? :number}> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n\n\n        return (\n            <div className='flexrow spacebetween'>\n            <span>{props.name}</span>\n            <div className='flexcolumn flexgrow'>\n\n            <span className='flexrow flexend'>\n                <span>\n                    {`${props.value.toFixed(2)}`}\n                </span>\n                <span style={{textAlign:'right'}}>\n                    {`${props.units}`}\n                    </span>\n            </span>\n            {props.estimate !== undefined && \n            <span className='flexrow flexend'>\n                <span>\n                    {`${props.estimate.toFixed(2)}`}\n                </span>\n                <span style={{textAlign:'right'}}>\n                    {`${props.units}`}\n                </span>\n            </span>}\n            </div>\n            </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default StatFC;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\n\n\nimport CommandButton2 from \"./CommandButton2\";\nimport { cmd_ballheightplus, cmd_dropball, cmd_ballmassplus, cmd_throwball, cmd_ballvelocityplus, cmd_bouncyball, cmd_ballbouncesplus } from \"../../engine/modules/Rocket\";\nimport StatFC from \"./StatFC\";\n\nconst RocketUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='flexcolumn'>\n                <span className='HeaderText'>\n                    Miracles\n                </span>\n                <span>\n                    Use some of the energy your body generates each day (joules) and the power of prophecy (math) to impress your followers by foretelling physical phenomena.\n                </span>\n                <span className='HeaderText'>Info</span>\n                {`Joules: ${data.rocketData.joules}`}\n                <span className='HeaderText'>Modify Ball / Begin Miracle</span>\n                <div className='flexrow'>\n                    {false&&<CommandButton2 {...cmd_ballmassplus} />}\n                    <CommandButton2 {...cmd_ballheightplus} />\n                    <CommandButton2 {...cmd_dropball} />\n                    <CommandButton2 {...cmd_ballvelocityplus} />\n                    <CommandButton2 {...cmd_throwball} />\n                    <CommandButton2 {...cmd_ballbouncesplus} />\n                    <CommandButton2 {...cmd_bouncyball} />\n                </div>\n                <span className='HeaderText'>Dropped Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Mass' value={data.rocketData.ball.mass} units='kg' />\n                        <StatFC name='Starting Height' value={data.rocketData.ball.height} units='m' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.ball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.ball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.ball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.ball.sim.mass} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.ball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.ball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.ball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.ball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n                <span className='HeaderText'>Thrown Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Starting Velocity' value={data.rocketData.thrown_ball.initial_velocity} units='m/s' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.thrown_ball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.thrown_ball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.thrown_ball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.thrown_ball.sim.mass} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.thrown_ball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.thrown_ball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.thrown_ball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.thrown_ball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n                <span className='HeaderText'>Bouncy Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Bounces' value={data.rocketData.bouncyball.bounces_upgrades+1} units='m/s' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.bouncyball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.bouncyball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.bouncyball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.bouncyball.sim.mass} units='kg' />\n                        <StatFC name='Bounces' value={data.rocketData.bouncyball.sim.bounces} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.bouncyball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.bouncyball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.bouncyball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.bouncyball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default RocketUI;\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi, relic_maxBuyCost, relicDeltaMult } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDRelicPurchases';\nimport { formatNumber } from '../../engine/util';\n\n\nconst RelicTip: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      \n                <div>\n                  <div>\n                    Time: {(RELICS[props.relicIndex].initialTime/relicDeltaMult(data)).toFixed(2)}\n                  </div>\n                  <div className='PietyDiv'>\n                    Production: {RELICS[props.relicIndex].initialRevenue}\n                  </div>\n                  <div>\n                    Multi: {formatNumber( relic_getProductionMulti(props.relicIndex, data))}\n                  </div>\n                  <div>\n                  {`x${Building_Multi(data, props.relicIndex).toFixed(1)} production per 25 relics`} \n                  </div>\n                  \n                </div>\n              \n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicTip;","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi, relic_maxBuyCost } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDRelicPurchases';\nimport RelicTip from './RelicTip';\nimport { formatNumber } from '../../engine/util';\n\n\nconst RelicBox: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.relicIndex > 0 && data.prophetData.relics[props.relicIndex - 1] === 0} className='RelicBox'>\n        <ProgressFC background={'yellow'} color='green' value={data.prophetData.relicTimers[props.relicIndex]} max={relic_getTime(props.relicIndex)} \n          label={`${RELICS[props.relicIndex].name} x${data.prophetData.relics[props.relicIndex]}`}\n          />\n        <div className='relicboxrow'>\n\n          <div hidden={data.prophetData.relicsetbuy !== 1}>\n\n            <CommandButtonFC name={`Make`} command={`prophet buyrelic ${props.relicIndex}`} able={(datamap) => { return relic_canBuy(props.relicIndex, datamap) }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n            />\n          </div>\n            \n          <div hidden={data.prophetData.relicsetbuy !== 99}>\n            <CommandButtonFC name={`Make Max (${relic_maxBuyAmount(props.relicIndex, data)})`} command={`prophet buymaxrelic ${props.relicIndex}`} \n              able={(datamap) => { return relic_maxBuyAmount(props.relicIndex, data) > 0 }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n             />\n          </div>\n            \n          <div hidden={data.prophetData.relicsetbuy !== 25}>\n\n            <CommandButtonFC name={`Make to 25x`} command={`prophet buyto25relic ${props.relicIndex}`} able={(datamap) => { return relic_canBuyNext(props.relicIndex, data, 25) }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n            />\n            </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 1}>\n            Cost: {formatNumber( relic_getCost(props.relicIndex, data))}\n            </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 99}>\n            Cost: {formatNumber(Math.max(relic_maxBuyCost(props.relicIndex, data),   relic_getCost(props.relicIndex, data)  ))}\n          </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 25}>\n            Cost: {formatNumber(relic_buyNextCost(props.relicIndex, data,25))}\n          </div>\n            <div className='USDCommand' hidden={data.prophetData.congregation.paritioners[1] === 0}>\n              <CommandButtonFC\n                name={`Upgrade`}\n                command={`prophet relicupgrade ${props.relicIndex}`}\n                hidden={(datamap) => { return datamap.prophetData.congregation.paritioners[1] === 0 }}\n                able={(datamap) => { return relicUSDupgrade_able(datamap, props.relicIndex) }}\n                tip={<div>\n                  Level: {data.prophetData.relicUSDUpgrades[props.relicIndex]}<br />\n                  <div className='USDDiv'>\n                    Cost: {formatNumber(relicUSDupgrade_cost(data, props.relicIndex))} USD\n              </div>\n                  +0.1 to production mult per 25 relics<br />\n                {`x${Building_Multi(data, props.relicIndex)} production per 25 relics`}\n\n                </div>}\n              />\n            </div>\n\n\n          \n          \n\n          <div className='PietyDiv'>\n            <div>\n              Total P/S: {formatNumber(relic_getProductionPerecond(props.relicIndex, data))}\n            </div>\n            <TipFC tip={<div>\n              Total Production: {formatNumber(relic_getProduction(props.relicIndex, data))}\n            </div>} />\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicBox;","import AppContext from \"../../context/context\"\n\nimport CommandButtonFC from \"./CommandButtonFC\"\n\nimport { CMD_prophet_pray, prophet_maxHolyPower, relic_holyPowerMulti, holiness_mult, reincation_mult, special_relic_mult, time_relic_mult, reincation_mult_from_superPrestiges, item_relic_mult, relicDeltaMult, CMD_prophet_buymax, CMD_prophet_buymaxreverse } from \"../../engine/modules/Prophet\"\n\nimport { piety_purchase_hide_holypower, piety_purchase_canBuy_holypower, holyPowerCost, piety_purchase_hide_reincarnation, piety_purchase_canBuy_reincarnation, reincarnationCost, piety_purchase_hide_congregation, piety_purchase_canBuy_congregation, congregationCost, UnlockMiracles } from \"../../engine/modules/PietyPurchases\"\n\nimport RelicBox from \"./RelicBox\"\n\nimport ProgressFC from \"./ProgressFC\"\n\nimport { devotion_mult } from \"../../engine/modules/Followers\"\n\nimport TipFC from \"./TipFC\"\nimport React from \"react\"\nimport StatFC from \"./StatFC\"\nimport CommandButton2 from \"./CommandButton2\"\n\nconst RelicUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => {return(\n            <div className='RelicUI'>\n\n                <div className='flexrow'>\n\n                    <div className='flexcolumn flexgrow'>\n\n                        <div className='HeaderText'>Commands</div>\n\n                        <div className='ProphetCommands'>\n                            <CommandButtonFC {...CMD_prophet_pray} tip={<div>Pray to increase your piety.</div>} />\n                            <div>\n                            <CommandButtonFC {...CMD_prophet_buymax} />\n                            </div>\n                            <div>\n                            <CommandButtonFC {...CMD_prophet_buymaxreverse} />\n                            </div>\n\n                            <CommandButtonFC name='Empowering Prayer' command='prophet holypower'\n                                hidden={piety_purchase_hide_holypower}\n                                able={piety_purchase_canBuy_holypower}\n                                tip={<div className='PietyDiv'>Cost: {holyPowerCost}</div>}\n                            />\n                            <CommandButtonFC name='Blessing of Reincarnation' command='prophet reincarnate'\n                                hidden={piety_purchase_hide_reincarnation}\n                                able={piety_purchase_canBuy_reincarnation}\n                                tip={<div className='PietyDiv'>Cost: {reincarnationCost}</div>}\n                            />\n                            <CommandButtonFC name='Create Congregation!' command='prophet congregate'\n                                hidden={piety_purchase_hide_congregation}\n                                able={piety_purchase_canBuy_congregation}\n                                tip={<div className='PietyDiv'>Cost: {congregationCost}</div>}\n                            />\n                        </div>\n\n                        <div className='flexrow spacebetween'>\n                        <div className='HeaderText'>Relics</div>\n                        <div className='flexrow'>\n\n                        Make:\n                        <div>\n                                <CommandButtonFC\n                                    name='1'\n                                    command='prophet setbuyrelic 1'\n                                    />\n                        </div>\n                                <CommandButtonFC\n                                    name='x25'\n                                    command='prophet setbuyrelic 25'\n                                />\n                                <CommandButtonFC\n                                    name='Max'\n                                    command='prophet setbuyrelic max'\n                                    />\n                        </div>\n                                    </div>\n\n                        <div className='flexrow'>\n\n                        <div className='flexcolumn flexequal flexgrow'>\n\n                            <RelicBox relicIndex={0} />\n                            <RelicBox relicIndex={1} />\n                            <RelicBox relicIndex={2} />\n                            <RelicBox relicIndex={3} />\n                            <RelicBox relicIndex={4} />\n                        </div>\n                        {(data.prophetData.relics[4] != 0)&&\n                        <div className='flexcolumn flexequal flexgrow'>\n                            <RelicBox relicIndex={5} />\n                            <RelicBox relicIndex={6} />\n                            <RelicBox relicIndex={7} />\n                            <RelicBox relicIndex={8} />\n                            <RelicBox relicIndex={9} />\n                        </div>}\n                        </div>\n                        {(data.prophetData.relics[4] == 0)&&\n                        <div className='flexcolumn flexequal flexgrow'>\n                            <span>\n                                Be sure to save before you quit, or enable autosave. Exporting your data will also help.\n                            </span>\n                        </div>}\n\n                    </div>\n\n                    <div className='flexcolumn'>\n                        <div className='HeaderText'>Relic Production Multipliers</div>\n                        <div className='multbox'>\n                            <div hidden={data.prophetData.holyPowerUnlocked === false} >\n\n                                <div hidden={data.prophetData.holyPowerUnlocked === false} className='HolyPowerWrapper'>\n                                    <ProgressFC max={prophet_maxHolyPower(data)}\n                                        label={<div className='flexrow spacebetween'>\n                                            <div>\n                                            {`Holy Power (${Math.floor(100 * data.prophetData.holyPower / prophet_maxHolyPower(data))}%) `} \n                                            </div>\n                                            <div>\n                                            {` x${relic_holyPowerMulti(data)}`}\n                                            </div>\n                                        </div>}\n                                        value={data.prophetData.holyPower}\n                                        tip={<div>\n                                            Make more relics to increase your max Holy Power!<br/>\n                                            Pray to increase your holy power<br/>\n                                        </div>}\n                                    />\n                                </div>\n                            </div>\n                            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                                <StatFC value={holiness_mult(data)} units=\"x\" name='Holiness' />\n                            </div>\n                            <div hidden={data.prophetData.devotion === 0} className='DevotionDiv'>\n                                <StatFC value={devotion_mult(data)} units=\"x\" name='Devotion' />\n                            </div>\n                            <div hidden={data.prophetData.save.reincarnationCount === 0}>\n                                <StatFC value={reincation_mult(data)} units=\"x\" name='Reincarnation'/>\n                                {data.followers.devotedPrestige > 0 && <TipFC tip={<div>\n                                    {`x${reincation_mult_from_superPrestiges(data)} from Divine Reincarnations`}\n                                </div>} />}\n                            </div>\n                            \n                            <div hidden={special_relic_mult(9, data) === 1}>\n                            <StatFC value={special_relic_mult(0,data)} units=\"x\" name='Special Mult(0)'/>                \n                            <StatFC value={special_relic_mult(9,data)} units=\"x\" name='Special Mult(9)'/>                \n                                <TipFC tip={<div>\n\n                                    <div>\n                                        {`Base: x1`}\n                                    </div>\n                                    <div hidden={data.followers.DPUpgrades.monthMultiplier + data.followers.DPUpgrades.yearMultiplier === 0}>\n                                        {`Time Based Mult: +x${time_relic_mult(data).toFixed(1)}`}\n                                    </div>\n                                </div>}\n                                />\n                            </div>\n                            {item_relic_mult(0,data)>1 && <StatFC value={item_relic_mult(0,data)} units='x' name='Item' />}\n                        </div>\n                        <div className='HeaderText'>\n                            Info\n                        </div>\n                                {<StatFC value={relicDeltaMult(data)} units=\"x\" name='Relic Production Speed'/>}                \n                        \n\n                    </div>\n\n                </div>\n\n\n\n\n\n            </div>\n        )}}\n    </AppContext.Consumer>\n)\n\n\nexport default RelicUI;","import AppContext from \"../../context/context\";\n\nimport './PantheonUI.scss'\n\nimport React from \"react\";\nimport CommandButtonFC from \"./CommandButtonFC\";\nimport { BasePantheonUpgrade, pantheonPurchase_able, pantheonPurchaseCost, pantheonPurchase_maxCost, pantheonPurchase_maxAmmount } from \"../../engine/modules/Pantheon/Types\";\nimport CommandButton2 from \"./CommandButton2\";\nimport * as TIME from '../../engine/modules/Pantheon/Time';\nimport TipFC from \"./TipFC\";\nimport Pantheons from '../../engine/modules/Pantheon/Pantheons';\nimport { formatNumber } from \"../../engine/util\";\n\nconst PantheonUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({data, submitCommand}) => (\n            <div className='PantheonUI'>\n                <span className='HeaderText'>\n                    Pantheon\n                </span>\n                <div>\n                    Upgrades, once bought, persist through normal reincarnations ... and work even before you add that God to your pantheon. Reincarnate to choose new gods for your Pantheon. \n                </div>\n                <div>\n                \n                    <TipFC tip={`Not 100% usefull yet. Only the first tier of god (Proud) has additional upgrades. Feel free to suggest upgrades for the missing ones.`}/>\n\n                </div>\n                <div className='pantheoncolumn'>\n\n                \n                <PantheonUpgradeBox_v2 active={data.prophetData.devotionUpgrades.abc.a}\n                    dps={[Pantheons.TIME.Upgrade_A,Pantheons.TIME.Upgrade_B, Pantheons.TIME.Upgrade_C]}>\n                    <span className='HeaderText'>\n                    God of Time\n                    </span>          \n                </PantheonUpgradeBox_v2>\n\n\n                    <PantheonUpgradeBox_v2 active={data.prophetData.devotionUpgrades.abc.b}\n                    dps={[Pantheons.PRODUCTION.Upgrade_A,Pantheons.PRODUCTION.Upgrade_B, Pantheons.PRODUCTION.Upgrade_C]}>\n                    <span className='HeaderText'>\n                    God of Production\n                    </span>          \n                </PantheonUpgradeBox_v2>\n\n                \n\n                    <PantheonUpgradeBox_v2 active={data.prophetData.devotionUpgrades.abc.c}\n                    dps={[Pantheons.WEALTH.Upgrade_A,Pantheons.WEALTH.Upgrade_B, Pantheons.WEALTH.Upgrade_C]}>\n                    <span className='HeaderText'>\n                    God of Wealth\n                    </span>          \n                </PantheonUpgradeBox_v2>\n\n\n                <PantheonUpgradeBox_v2 active={data.prophetData.devotionUpgrades.def.a}\n                    dps={[Pantheons.PERSUASION.Upgrade_A,Pantheons.PERSUASION.Upgrade_B, Pantheons.PERSUASION.Upgrade_C]}>\n                    <span className='HeaderText'>\n                    God of Persuasion\n                    </span>          \n                </PantheonUpgradeBox_v2>\n\n                <PantheonUpgradeBox_v2 active={data.prophetData.devotionUpgrades.def.b}\n                    dps={[Pantheons.MAINTAINANCE.Upgrade_A,Pantheons.MAINTAINANCE.Upgrade_B, Pantheons.MAINTAINANCE.Upgrade_C]}>\n                    <span className='HeaderText'>\n                    God of Maitainance\n                    </span>          \n                </PantheonUpgradeBox_v2>\n\n                <PantheonUpgradeBox_v2 active={data.prophetData.devotionUpgrades.def.c}\n                    dps={[Pantheons.GREED.Upgrade_A,Pantheons.GREED.Upgrade_B, Pantheons.GREED.Upgrade_C]}>\n                    <span className='HeaderText'>\n                    God of Greed\n                    </span>          \n                </PantheonUpgradeBox_v2>\n                \n\n                </div>\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default PantheonUI;\n\n\nconst PantheonUpgradeComp: React.FC<{ dp: BasePantheonUpgrade }> = (props) => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className='PietyCommand flexcolumn pantheonupgrade'>\n            <CommandButton2 {...props.dp.command}\n                cost={(data)=>pantheonPurchaseCost(data,props.dp)}\n                able={(data)=>pantheonPurchase_able(data, props.dp)}\n                costName='Piety'\n                tip={<div>\n                    Cost: {formatNumber(pantheonPurchaseCost(data, props.dp))}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n            <CommandButton2 name={()=>`Level ${props.dp.countFn(data)} - Buy Max (${pantheonPurchase_maxAmmount(data,props.dp)})`} command={(data)=>props.dp.command.command(data)+'max'} \n                        able={(data)=>pantheonPurchase_able(data, props.dp)}\n                        />\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nconst PantheonUpgradeBox_v2: React.FC<{active: boolean, dps: BasePantheonUpgrade[]}> = (props) => (\n    <AppContext.Consumer>\n        {({data}) => (\n            <div>\n                {props.children}\n                <div>\n                {props.dps.map((dp, index)=>(<PantheonUpgradeComp_v2 dp={dp} active={props.active} key={'pantehon'+index}  />))}\n                </div>\n                \n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nconst PantheonUpgradeComp_v2: React.FC<{ dp: BasePantheonUpgrade, active:boolean }> = (props) => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className={props.active?'PietyCommand flexcolumn pantheonupgrade':'flexcolumn pantheonupgrade'}>\n            <CommandButton2 {...props.dp.command}\n                cost={(data)=>pantheonPurchaseCost(data,props.dp)}\n                able={(data)=>pantheonPurchase_able(data, props.dp) && props.active}\n                costName={'Piety'}\n                tip={<div>\n                    Cost: {formatNumber(pantheonPurchaseCost(data, props.dp))}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n            {<CommandButton2 name={()=>`Level ${props.dp.countFn(data)} - Buy Max (${pantheonPurchase_maxAmmount(data,props.dp)})`} command={(data)=>props.dp.command.command(data)+'max'} \n                        able={(data)=>pantheonPurchase_able(data, props.dp) && props.active}\n                        />}\n            \n            </div>\n        )}\n    </AppContext.Consumer>\n)\n","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\nimport CommandButtonFC from \"./CommandButtonFC\";\nimport CommandButton2 from \"./CommandButton2\";\nimport { currentSalary, availableExplorers, AreaData, getAreaGoal, getAreaETA, show_explore_area, AREA_STRS } from \"../../engine/modules/Exploring\";\nimport { AdornmentItem, getFullAdornmentItem } from \"../../engine/modules/Adornments\";\nimport TipFC from \"./TipFC\";\nimport { ANSWER_DATA, superAnswerBoxVisible, superAnswerGoal, gemUpgradeForAnswerCost } from \"../../engine/modules/Answers\";\nimport ProgressFC from \"./ProgressFC\";\n\nconst AnswersUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div>\n                Answers<br />\n                Answer your followers' questions with tasks that they can do for the greater good! These tasks still consume your resources. Be careful!<br />\n                {`Questions each day: ${data.prophetData.congregation.paritioners[2]}`}<br/>\n                \n                {(superAnswerBoxVisible(data.answers.superAnswerProgress, data.answers.superAnswerAnswers)) && (<div style={{ display: 'flex', flexDirection: 'row' }}>\n                    <div>\n                        {`Commitment Level: ${data.answers.superAnswerAnswers}`}\n                    </div>\n                    <br />\n                    <div style={{ border: '1px white solid' }}>\n                        <ProgressFC value={data.answers.superAnswerProgress} max={superAnswerGoal(data.answers.superAnswerAnswers)}\n                            label={`Progress: ${data.answers.superAnswerProgress}/${superAnswerGoal(data.answers.superAnswerAnswers)} work-days`} />\n                    </div>\n                </div>)}\n                <hr />\n                <div className='flexrow'>\n                    <div>\n\n                {ANSWER_DATA.map((ad, index) => <AnswerBox commandKey={ad[0]} answer={ad[1]} upgradeLabel={ad[2]} key={`ab${ad[0]}`} />)}\n                    </div>\n                    <div className='flexcolumn'>\n                        <span>\n                            Upgrades\n                        </span>\n                        {data.answers.gemUpgrades.holypower && <div>\n                            Holy Power Consumption Discretion    \n                        </div>}\n                        {data.answers.gemUpgrades.invest && <div>\n                            Congregation Investment Selection    \n                        </div>}\n                        {data.answers.gemUpgrades.make && <div>\n                            Relic Making Selection   \n                        </div>}\n                        {data.answers.gemUpgrades.polish && <div>\n                            Relic Upgrading Selection    \n                        </div>}\n                        {data.answers.gemUpgrades.pray && <div>\n                            Prayer Upgrades\n                        </div>}\n                        {data.answers.gemUpgrades.recruit && <div>\n                            Recruitment Discretion    \n                        </div>}\n                        {data.answers.gemUpgrades.superAnswerWorkers && <div>\n                            Reincarnation Information \n                        </div>}\n                    </div>\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default AnswersUI;\n\nconst AnswerBox: React.FC<{ commandKey: string, answer: string, upgradeLabel: string }> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n\n            <div className='flexcolumn' style={{ borderLeft: '1px solid white', margin: '5px' }}>\n\n                <div className='flexrow'>\n                    <CommandButton2 command={() => `answers ${props.commandKey} down`} name={() => `<-`} />\n                    {props.answer} ({data.answers[props.commandKey]})\n            <CommandButton2 command={() => `answers ${props.commandKey} up`} name={() => `->`} />\n                </div>\n                <div hidden={data.answers.gemUpgrades[props.commandKey]}>\n                    <div className='GemsCommand'>\n                        <CommandButton2 command={() => `answers upgrade ${props.commandKey} `} name={() => `${props.upgradeLabel} (${gemUpgradeForAnswerCost(props.commandKey)} GEMS)`} />\n                    </div>\n                </div>\n            </div>)}\n    </AppContext.Consumer>\n)\n","import React, { FormEvent } from 'react';\nimport Engine from '../engine/Engine';\nimport AppContext from '../context/context';\nimport { Datamap } from '../engine/Datamap';\nimport BottomBar from './BottomBar';\nimport CommandButtonFC from './comps/CommandButtonFC';\nimport ProphetUI from './ProphetUI';\nimport './App.scss'\nimport NavBar from './comps/NavBar';\nimport ResetUI from './comps/ResetUI';\nimport FollowersUI from './FollowersUI';\nimport { msToFullHMS, compressString } from '../engine/util';\nimport AdornmentUI from './comps/AdornmentUI';\nimport OfflineOverlay from './comps/OfflineOverlay';\nimport RocketUI from './comps/RocketUI';\nimport RelicUI from './comps/RelicUI';\nimport TipFC from './comps/TipFC';\nimport PantheonUI from './comps/PantheonUI';\nimport AnswersUI from './comps/AnswersUI';\nimport ConfirmCommandButton from './comps/ConfirmCommandButton';\n\n\nexport default class App extends React.Component<{}, { data: Datamap }> {\n\n    engine: Engine;\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.engine = new Engine(this.notify)\n        //this.engine.quietLoad();\n        this.state = {\n            data: this.engine.datamap\n        }\n        //this.engine.quietLoad();\n        window.addEventListener(\"keypress\", this.handleKey);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKey);\n    }\n\n    componentDidMount () {\n        this.engine.mountTriggers();\n    }\n\n    handleKey = (e: KeyboardEvent) => {\n        if (this.engine.datamap.nacData.timeSet != 0) {\n            this.engine.executeCommand(`keypress ` + e.key);\n        }\n    }\n\n    notify = () => {\n        //console.log('notify');\n        \n        this.setState({ data: this.engine.datamap })\n    }\n\n    submitCommand = (command: string) => {\n        this.engine.executeCommand(command)\n    }\n\n    setname = (ev: FormEvent<HTMLFormElement>) => {\n        let target = ev.target as HTMLFormElement;\n        let children = target.children;\n        let textInput = children[0] as HTMLInputElement;\n        console.log(textInput.value);\n        this.submitCommand(`nac setname ${textInput.value}`)\n\n        ev.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className='App' style={{ width: `100%`, height: `100%` }}>\n                <AppContext.Provider value={{\n                    data: this.state.data,\n                    submitCommand: this.submitCommand\n                }}>\n                    <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n\n                        <div className='TopBar'>\n                            <CommandButtonFC command='save' name='Save' />\n\n                            {(this.state.data.nacData.name === '') && <form onSubmit={this.setname}>\n                                <input type='text' defaultValue='noname' />\n                                <button className='DCommandFC' type='submit'>Set Name</button>\n                            </form>}\n\n                            {(this.state.data.nacData.name !== '') && <div onClick={() => { this.submitCommand(`nac clearname`) }}>\n                                {`The Prophet, ${this.state.data.nacData.name}!`}<TipFC tip={<div>Click to rename!</div>} />\n                            </div>}\n\n                            <div>\n                                {msToFullHMS(this.state.data.gameTime.currentRun.time)}\n                            </div>\n\n                            <CommandButtonFC command='load' name='Load' />\n\n                            <div >\n                                Autosave\n                                <input type='checkbox' checked={this.state.data.autosave} onChange={()=>this.submitCommand('autosavetoggle')} />\n                            </div>\n                            <CommandButtonFC command='export' name='Export' />\n                            <div>\n                                <button className='DCommandFC' onClick={() => { (document.getElementById('file-input') as HTMLInputElement).click() }} >\n                                    Import\n                            </button>\n                                <input id=\"file-input\" type=\"file\" name=\"name\" style={{ display: \"none\" }}\n                                    onChange={(e) => {\n                                        let list = e.target.files;\n                                        if (list) {\n                                            let file = list[0];\n                                            var reader = new FileReader();\n                                            \n                                            //reader.readAsArrayBuffer(file)\n                                            reader.readAsText(file, 'UTF-8');\n\n                                            // here we tell the reader what to do when it's done reading...\n                                            reader.onload = readerEvent => {\n                                                let target = readerEvent.target;\n                                                if (target) {\n                                                    let content = target.result;\n                                                    console.log(content);\n                                                    this.submitCommand(`import ${content}`)\n\n                                                }\n                                            }\n\n                                        }\n\n                                    }} />\n                            </div>\n                            <ConfirmCommandButton\n                            command={{\n                                name: 'Wipe Data',\n                                command: 'fullwipe',\n                            }}\n                            warning={<div>\n                                    Fully wipe everything! EVERYTHING!! Don't do this.\n                            </div>}\n                        />\n\n                            \n                        </div>\n\n                        <ProphetUI />\n\n                        <NavBar />\n\n                        <div className='SelectedArea'>\n                            {MAINNAVS[this.state.data.nav.mainArea]}\n                        </div>\n\n                        <BottomBar />\n                        <OfflineOverlay />\n                    </div>\n                </AppContext.Provider>\n            </div>\n        )\n    }\n}\n\n\n\nconst MAINNAVS = [<RelicUI />, <ResetUI />, <FollowersUI />, <AdornmentUI />, <RocketUI />, <PantheonUI />, <AnswersUI/>]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}