{"version":3,"sources":["engine/util.ts","engine/modules/PietyPurchases.ts","engine/modules/AbstractModule.ts","engine/interfaces/ExpoCurve.ts","engine/modules/DevotionPurchases.ts","engine/modules/Followers.ts","engine/modules/USDRelicPurchases.ts","engine/modules/ItemPowers.ts","engine/modules/Pantheon/Time.ts","engine/modules/Pantheon/Production.ts","engine/modules/Pantheon/Wealth.ts","engine/modules/Pantheon/Persuasion.ts","engine/modules/Pantheon/Maintainance.ts","engine/modules/Pantheon/Greed.ts","engine/modules/Pantheon/Pantheons.tsx","engine/modules/Pantheon/Types.ts","engine/interfaces/ExpoCommand.ts","engine/modules/USDPurchases.ts","engine/modules/Prophet.ts","engine/modules/Gametime.ts","engine/modules/NavArea.ts","engine/modules/Exploring.ts","engine/modules/Adornments.ts","engine/modules/RocketTypes.ts","engine/modules/NameAndCode.ts","engine/Datamap.ts","engine/CoreEngine.ts","engine/modules/Rocket.ts","engine/Engine.ts","context/context.ts","ui/comps/TipFC.tsx","ui/comps/ProgressFC.tsx","ui/BottomBar.tsx","ui/comps/CommandButtonFC.tsx","ui/ProphetUI.tsx","ui/comps/NavBar.tsx","ui/comps/ConfirmCommandButton.tsx","ui/comps/CommandButton2.tsx","ui/comps/ResetUI.tsx","ui/comps/ParitionerBox.tsx","ui/comps/ExpoButton.tsx","ui/FollowersUI.tsx","ui/comps/AdornmentUI.tsx","ui/comps/OfflineOverlay.tsx","ui/comps/StatFC.tsx","ui/comps/RocketUI.tsx","ui/comps/RelicTip.tsx","ui/comps/RelicBox.tsx","ui/comps/RelicUI.tsx","ui/comps/PantheonUI.tsx","ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["getRandomInt","min","max","Math","ceil","floor","random","formatNumber","num","abs","toString","toExponential","msToFullHMS","msTime","hour","HOUR_MS","minute","length","second","MINUTE_MS","SECOND_MS","WORLD_POP","congregationCost","reincarnationCost","holyPowerCost","piety_purchase_canBuy","data","cost","prophetData","piety","piety_purchase_canBuy_congregation","piety_purchase_canBuy_reincarnation","piety_purchase_canBuy_holypower","piety_purchase_hide_reincarnation","relics","prestigeUnlocked","piety_purchase_hide_congregation","congregation","unlocked","piety_purchase_hide_holypower","holyPowerUnlocked","holiness_holyPowerUpgradeCost","pow","holinessUpgrades","holypowerUpgrade","holiness_holypower1","name","command","able","holiness","hidden","maxHolyPowerUpgrade","holiness_holyPumpUpgradeCost","holyPumpUpgrade","holiness_holyPumpUpgrade_command","holiness_maxHolyPowerUpgradeCost","holiness_maxHolyPowerUpgrade_command","holiness_believerRetentionCost","believerRetention","holiness_believerRetention_command","holiness_exRelationsCost","exRelations","holiness_exRelations_command","ex_believers","holiness_buildingMultiCost","buildingMulti","holiness_buildingMulti_command","holiness_devotionEffectivenessCost","devotionEffectiveness","holiness_devotionEffectiveness_command","UnlockMiracles","AbstractModule","engine","expoI_getCost","expo","owned","initial","coefficient","expoI_maxBuyAmount","currency","b","r","k","c","logchange","log","expoI_maxBuyCost","expoI_buyNCost","n","ABC_cost","ABC_able","devotion","ABC_hidden","paritioners","ABC_bought","devotionUpgrades","abc","a","Devotion_Upgrade_ShorterDays","costName","change","Devotion_Upgrade_NoHPDecay","Devotion_Upgrade_RelicPower","DEF_cost","DEF_able","DEF_hidden","def","DEF_bought","Devotion_Upgrade_D","Devotion_Upgrade_E","Devotion_Upgrade_F","Followers","handle_followers_command","cmdArray","handle_recruit_command","handle_upgrade_command","recruitParitioner","recruitMaxParitioner","recruitHalfMaxParitioner","handle_unlock_command","handle_divinity_command","doDevotionUpgrade","datamap","Object","values","DP_Upgrades","forEach","dp","split","dp_key","divinityPurcase","dp_able","action","buy_divinityPurchase","DPUpgrades","reset","recruit_preacher","recruit_devotee","recruit_doorknocker","recruit_preacher_max","recruit_devotee_max","recruit_doorknocker_max","automation","auto_buyToNext","upgrade_preacher","upgrade_devotee","upgrade_doorknocker","unlockAdornments","preacher_cmd_able","preachers","old","preacher_upgrade_cmd_able","preacherLevel","doorknocker_cmd_able","doorknocker","doorknocker_upgrade_cmd_able","doorknockerLevel","devotee_cmd_able","devotee","devotee_upgrade_cmd_able","devoteeLevel","believers","preacher_cost","preacher_upgrade_cost","devotee_cost","devotee_upgrade_cost","doorknocker_cost","doorknocker_upgrade_cost","arg0","console","index","parseInt","paritioner_cost","this","amount","paritioner_maxBuyAmount","paritioner_buyNCost","paritioner_buyHalfMax_amount","days","proudDay","wealthDay","curiousDay","smartDay","dumbDay","badDay","dailyBelieverGain","proudBeliever_believer_gain","USD","WealthyBeliever_USD_gain","WealthyBeliever_Believer_gain","questions","crediblity","UnlockAdornments_able","followers","adornmentsUnlocked","devotion_mult","base","count","recruit_preacher_cmd","upgrade_preacher_cmd","recruit_devotee_cmd","upgrade_devotee_cmd","recruit_doorknocker_cmd","upgrade_doorknocker_cmd","ParitionerExpos","Paritioners","costbound","peopleBound","availablePeople","paritioner_maxBuyCost","full","paritioner_buyHalfMax_cost","gain","USDUpgrades","pamphlets","harm","helper_prophet_exBeliever_harm","realPossibleGain","tithe","pantheon","wealth","realGain","UnlockAdornments_cost","UnlockAdornments","getDivinity","devotedPrestige","availableDivinity","specificSpentDivinity","DP_beliverGain","DP_fasterRelicProduction","DP_heavyHolyPower","DP_monthMultiplier","DP_superHolyPump","DP_yearMultiplier","spentDivinity","countFn","divinityPurcase_getCost","tierOne_Divinity_hidden","description","fasterRelicProduction","heavyHolyPower","monthMultiplier","superHolyPump","yearMultiplier","RelicUSDUpgradeExpos","relicUSDupgrade_cost","relicUSDUpgrades","ITEM_POWERS","effective_devotee_mult","adornments","equiped","book","origin","level","devotee_power_mult","ring","prayer_upgrades","eq","cane","ThisPantheon","key","do","buy_pantheonPurchase","Upgrade_A","Upgrade_B","Upgrade_C","buyMax_pantheonPurchase","getData","time","UpgradeData_init","bonusDays","production","persuasion","maintainance","greed","TIME","PRODUCTION","WEALTH","PERSUASION","MAINTAINANCE","GREED","PANTHEON_COST","UnlockPantheonCommand","tip","pantheonPurchase","pantheonPurchase_able","pantheonPurchaseCost","pantheonPurchase_maxAmmount","ammount","pantheonPurchase_maxCost","CurrencyFn_USD","get","spend","expoCommand_buy","expoCommand","expoCommand_Able","currencyFns","expoCommand_Cost","countFns","ep","expoCommand_maxAmmount","expoCommand_buyMax","expoCommand_maxCost","USD_UpgradeTithe","currencyName","USD_Upgrade_Pamphlets","ProphetModule","believersLeave","i","loss","helper_prophet_maxBelieversDecay","boundLoss","holyDump","holyPower","holyPump","prophet_maxHolyPower","prestige","ppgain","prophet_prestige_gain","oldData","itemDevotion","robe","oldMult","newCount","save","reincarnationCount","selected","relicsetbuy","newOld","init_ProphetData","startingHoliness","prestigeCleanup","devotedprestige","hardCleanup","gameTime","currentRun","nav","mainArea","rocket","exploring","pray","proselytize","preach","upgradeRelic","buyRelic","buyMaxRelic","buyToNRelic","piety_purchase_buy_reincarnation","piety_purchase_buy_holypower","holiness_holyPowerUpgrade_do","holiness_holyPumpUpgrade_do","holiness_maxHolyPowerUpgrade_do","holiness_believerRetention_do","holiness_exRelations_do","holiness_buildingMulti_do","holiness_devotionEffectiveness_do","rocketData","upgradeIndex","relicIndex","relic_getCost","relic_maxBuyAmount","relic_maxBuyCost","relic_buyNCost","needToN","doorknockers","dayTriggerParitioners","devotees","devotee_devotion_gain","doorknocker_beliver_gain","preachers_max_deovtion_gain","preach_max_deovtion_gain","helper_prophet_maxBeliverGainNet","delta","processDetla","relicDeltaMult","RELICS","relicData","relicTimers","timeCost","relic_getTime","relic_getProduction","maxPiety","decay","year","mult","power","total_power","helper_prophet_size_believerDecay","helper_prophet_exBeliever_believerDecay","helper_prophet_maxBeliverGain","sum","ghijk","d","e","initialCost","initialTime","initialRevenue","cost_base","relic_getProductionMulti","holiness_mult","relic_hoylPowerMulti","reincation_mult","special_relic_mult","item_relic_mult","cap","time_relic_mult","year_relic_mult","month","month_relic_mult","CALC_holy_mult","reincation_mult_from_superPrestiges","sqrt","CUTOFF","next_holiness_mult","val","Building_Multi","relic_canBuyNext","next","relic_canBuyN","CMD_prophet_pray","CMD_prophet_proselytize","devotedPrestige_cost","CMD_prophet_devotedPrestige","GameTime","day","msprogress","eatenDays","processDelta","mscost","requiredMS","passDayAction","processCommands","commands","passDay","eatDay","daysForTriggers","maxDays","maxMonths","dayTriggers","multiday","elapsed_days","totalDays","elapased_months","totalMonths","gainedYears","bonus","prophet","dayTrigger","joules","NavArea","changeMainArea","stringedNumber","number","subArea","changeSubArea","Exploring","handle_explore_command","hireExplorer","fireExplorer","sendup","senddown","sendRuins","sendMart","sendShop","stopRuins","stopMart","stopShop","exploreDay","checkBelievers","checkSalary","checkOut","checkReady","exploreProgress","checkForFinshedAreas","exploreRuins","exploreMart","exploreShop","explorers","ExplorersData_init","areas","ruins","beingExplored","readyForMission","assignedExplorers","mart","shop","explorerCount","availableExplorers","currentSalary","area","investedDays","goal","getAreaGoalDirct","exploredCount","AreaExpos","checkArea","getItem","EXPLORER_SALARY","areaExpo","explorData","show_explore_area","areaKey","AREA_STRS","Adornments","handle_adornments_command","items","index_","item_","splice","gems","combine","iNo","unequipCap","unequipCane","unequipRobe","unequipRing","unequipBook","check_item","matches","some","item","i_index","push","toPush","adornmentCount","getFullAdornmentItem","ItemNames","PowerDictionary","unused","Cap","Cane","Robe","Ring","Book","RocketDataInit","ball","height","mass","derived","estimatedTime","estimatedVMax","estimatedJouls","sim","current_h","current_v","impactJouls","active","elapsedTime","thrown_ball","initial_velocity","bouncyball","bounces_upgrades","loss_upgrades","bounces","NameAndCode","timeSet","Date","now","nacData","newDefaultMap","offline","happening","totaltime","x","y","z","ticks","last","ui","innerHeight","innerWidth","faithfulCongregation","CoreEngine","notify","loop","undefined","start","setInterval","tick","stop","clearTimeout","JSON","stringify","localStorage","setItem","load","quietLoad","combstr","oldobj","parse","_","newnow","Rocket","handle_rocket_command","ballHeightUpgrade_cost","nextBallHeightUpgrade","ballMassUpgrade_cost","nextBallMassUpgrade","ballVelocityUpgrade_cost","nextBallVelocityUpgrade","ballBounceUpgrade_cost","nextBallBounceUpgrade","throwball","dropball","bounceball","updateEstimates","ballsim","thrownballsim","bounceyball_sim","seconds","move_and_impact","ballimpact","thrown_ballimpact","GRAVITY","freefall_t_from_h","freefall_j_from_mv","v_in","acceleration","delta_t","delta_h","vf","estimatedDistance","velocity_in","freefall_d_from_vat","freefall_vf_from_viat","v_i","v_f","distance","t","freefall_t_from_vivfd","vf_sq","freefall_vf_from_viad","vin","h","vhat_sim","initial_time","bounce_ballimpact","bounce_energy","gainedJoules","velocity","newv","oldKE","bounce","cmd_ballheightplus","cmd_ballvelocityplus","cmd_ballbouncesplus","cmd_dropball","cmd_throwball","cmd_bouncyball","v","m_kg","Engine","bounds","stopOffline","executeCommand","doPantheonUpgrade","import","export","handleKey","nac","nacCommand","startOffline","lzutf8str","LZUTF8","require","arrayInt","map","value","magicArray","Uint8Array","of","encodeUTF8","decompress","merge","dataString","output","compress","filename","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","download","AppContext","React","submitCommand","str","props","setTB","window","top","bottom","ReactDOM","findDOMNode","parent","parentElement","parentBounds","getBoundingClientRect","setState","state","className","Component","contextType","TipFC","Consumer","ProgressFC","widthpercent","useState","off","setOff","backgroundSize","width","onClick","whiteSpace","label","BottomBar","color","background","msToHM","MONTHS","CommandButtonFC","disabled","img","src","alt","ProphetUI","NavBar","areaIndex","areaUnlocked","ConfirmCommandButton","fakeBuy","ev","shiftKey","context","open","warning","CommandButton2","resource","ResetUI","toFixed","holiness_holyPowerEffectivenessUpgradeCost","DPUpgradeComp","ParitionerBox","paritionerIndex","justifyContent","flexDirection","costable","peopleable","paritioner_able","ParitionerDetailts","ExpoButton","FollowersUI","DevotionUpgrades","border","AdornmentUI","commandKey","itemData","slot","AreaBox","areaExpoKey","remainder","rate","getAreaETA","ItemBox","EquippedItemBox","OfflineOverlay","StatFC","textAlign","units","estimate","RocketUI","padding","RelicTip","RelicBox","relic_canBuy","relic_buyNextCost","relicUSDupgrade_able","relic_getProductionPerecond","RelicUI","PantheonUI","Pantheons","target","href","PantheonUpgradeComp","App","setname","textInput","children","preventDefault","addEventListener","removeEventListener","Provider","onSubmit","type","defaultValue","getElementById","id","onChange","list","files","file","reader","FileReader","readAsText","onload","readerEvent","content","result","MAINNAVS","Boolean","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yzDAAO,SAASA,EAAaC,EAAaC,GAGtC,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAGlD,SAASM,EAAaC,GACzB,OAAIL,KAAKM,IAAID,GAAO,IAAYA,EAAIE,WACxBF,EAAIG,cAAc,GAO3B,SAASC,EAAaC,GAEzB,IAAIC,EAAOX,KAAKE,MAAMQ,EAAOE,GAASL,WAElCM,EAASb,KAAKE,MAAOQ,EAAOE,EAASA,EAAU,IAAIL,WACjC,IAAlBM,EAAOC,SAAcD,EAAS,IAAMA,GAExC,IAAIE,EAASf,KAAKE,MAAOQ,EAAOM,EAAWA,EAAY,IAAIT,WAI3D,OAHsB,IAAlBQ,EAAOD,SAAcC,EAAS,IAAMA,GAGlC,GAAN,OAAUJ,EAAV,YAAkBE,EAAlB,YAA4BE,GAGzB,IAAME,EAAY,IACZD,EAAwB,GAAZC,EACZL,EAAsB,GAAZI,EAEVE,EAAY,KAsGzB,IC/HaC,EAA2B,KAC3BC,EAA4B,IAC5BC,EAAwB,IAErC,SAASC,EAAuBC,EAAeC,GAC3C,OAAOD,EAAKE,YAAYC,OAASF,EAG9B,SAASG,EAAoCJ,GAChD,OAAOD,EAAsBC,EAAMJ,GAGhC,SAASS,EAAqCL,GACjD,OAAOD,EAAsBC,EAAMH,GAGhC,SAASS,EAAiCN,GAC7C,OAAOD,EAAsBC,EAAMF,GAwBhC,SAASS,EAAmCP,GAE/C,OAD4C,IAA/BA,EAAKE,YAAYM,OAAO,IAAYR,EAAKE,YAAYO,iBAI/D,SAASC,EAAkCV,GAE9C,OAD6C,IAA/BA,EAAKE,YAAYM,OAAO,IAAYR,EAAKE,YAAYS,aAAaC,SAI7E,SAASC,EAA+Bb,GAE3C,OAD4C,IAA/BA,EAAKE,YAAYM,OAAO,IAAYR,EAAKE,YAAYY,kBAK/D,SAASC,EAA+Bf,GAC3C,OAAOvB,KAAKuC,IAAI,GAAGhB,EAAKiB,iBAAiBC,iBAAmB,GAEzD,IAAMC,EAAwC,CACjDC,KAAM,2BACNC,QAAS,2BACTC,KAAM,SAACtB,GAAQ,OAAOe,EAA8Bf,IAASA,EAAKE,YAAYqB,UAC9EC,OAAQ,SAACxB,GAAQ,OAAqD,IAA9CA,EAAKiB,iBAAiBQ,sBAU3C,SAASC,EAA8B1B,GAC1C,OAAOvB,KAAKuC,IAAI,EAAGhB,EAAKiB,iBAAiBU,gBAAkB,GAExD,IAAMC,EAAqD,CAC9DR,KAAM,yBACNC,QAAS,0BACTC,KAAM,SAACtB,GAAQ,OAAO0B,EAA6B1B,IAASA,EAAKE,YAAYqB,WAS1E,SAASM,EAAkC7B,GAC9C,OAAOvB,KAAKuC,IAAI,EAAGhB,EAAKiB,iBAAiBQ,oBAAsB,GAE5D,IAAMK,EAAyD,CAClEV,KAAM,iBACNC,QAAS,8BACTC,KAAM,SAACtB,GAAQ,OAAO6B,EAAiC7B,IAAQA,EAAKE,YAAYqB,UAChFC,OAAQ,SAACxB,GAAQ,OAAiD,IAA1CA,EAAKiB,iBAAiBU,kBAS3C,SAASI,EAAgC/B,GAC5C,OAAOvB,KAAKE,MAAMF,KAAKuC,IAAI,IAAKhB,EAAKiB,iBAAiBe,mBAAmB,GAEtE,IAAMC,EAAuD,CAChEb,KAAM,qBACNC,QAAS,mCACTC,KAAM,SAACtB,GAAQ,OAAO+B,EAA+B/B,IAASA,EAAKE,YAAYqB,UAC/EC,OAAQ,SAACxB,GAAQ,OAAmD,IAA5CA,EAAKiB,iBAAiBe,oBAA0E,IAA9ChC,EAAKiB,iBAAiBQ,sBAAwE,IAA3CzB,EAAKE,YAAYS,aAAaC,YASxJ,SAASsB,EAA0BlC,GACtC,OAAOvB,KAAKuC,IAAI,EAAGhB,EAAKiB,iBAAiBkB,YAAc,GAEpD,IAAMC,EAAiD,CAC1DhB,KAAM,eACNC,QAAS,6BACTC,KAAM,SAACtB,GAAQ,OAAOkC,EAAyBlC,IAASA,EAAKE,YAAYqB,UACzEC,OAAQ,SAACxB,GAAQ,OAAmD,IAA5CA,EAAKiB,iBAAiBe,oBAAwE,IAA5ChC,EAAKiB,iBAAiBe,mBAA6D,IAAlChC,EAAKE,YAAYmC,gBASzI,SAASC,EAA4BtC,GACxC,OAAOvB,KAAKE,MAAMF,KAAKuC,IAAI,KAAMhB,EAAKiB,iBAAiBsB,cAAgB,GAAK,IAEzE,IAAMC,EAAmD,CAC5DpB,KAAM,aACNC,QAAS,oBACTC,KAAM,SAACtB,GAAQ,OAAOsC,EAA2BtC,IAASA,EAAKE,YAAYqB,UAC3EC,OAAQ,SAACxB,GAAQ,OAAkD,IAA3CA,EAAKiB,iBAAiBC,mBAS3C,SAASuB,EAAoCzC,GAChD,OAAOvB,KAAKE,MAAMF,KAAKuC,IAAI,IAAKhB,EAAKiB,iBAAiByB,sBAAwB,IAE3E,IAAMC,EAA2D,CACpEvB,KAAM,yBACNC,QAAS,qBACTC,KAAM,SAACtB,GAAQ,OAAOyC,EAAmCzC,IAASA,EAAKE,YAAYqB,UACnFC,OAAQ,SAACxB,GAAQ,OAA6C,IAAtCA,EAAKiB,iBAAiBkB,cAgClD,IACaS,EAGJ,kBAJa,MCtMQC,E,WAE1B,WAAoBC,GAAiB,yBAAjBA,S,iDAKhB,MAAO,O,KCJR,SAASC,EAAcC,EAAiBC,GAG3C,OAAOxE,KAAKE,MAAMqE,EAAKE,QAAQzE,KAAKuC,IAAIgC,EAAKG,YAAYF,IAGtD,SAASG,GAAoBJ,EAAiBC,EAAcI,GAC/D,IAAIC,EAAIN,EAAKE,QACTK,EAAIP,EAAKG,YACTK,EAAIP,EACJQ,EAAIJ,EAGJK,EADYjF,KAAKkF,IAAI,EAAIF,GAAGF,EAAI,IAAKD,EAAE7E,KAAKuC,IAAIuC,EAAGC,KAC3B/E,KAAKkF,IAAIJ,GAGrC,OAFa9E,KAAKE,MAAM+E,GAKrB,SAASE,GAAkBZ,EAAiBC,EAAcI,GAI7D,OAAOQ,GAAeb,EAAMC,EAFpBG,GAAmBJ,EAAMC,EAAOI,IAKrC,SAASQ,GAAgBb,EAAiBC,EAAea,GAC5D,IAAIR,EAAIN,EAAKE,QACTK,EAAIP,EAAKG,YACTK,EAAIP,EAER,OAAOxE,KAAKE,MAAO2E,GAAK7E,KAAKuC,IAAIuC,EAAEC,IAAI/E,KAAKuC,IAAIuC,EAAEO,GAAG,KAAOP,EAAI,ICSpE,SAASQ,GAAU/D,GACf,OAAO,IAGX,SAASgE,GAAUhE,GACf,OAAOA,EAAKE,YAAY+D,UAJjB,MAIoE,IAArBC,GAAWlE,GAG9D,SAASkE,GAAYlE,GACxB,OAAOA,EAAKE,YAAYS,aAAawD,YAAY,GAAK,GAAKC,GAAWpE,GAGnE,SAASoE,GAAYpE,GACxB,OAAOA,EAAKE,YAAYmE,iBAAiBC,IAAIC,GAAKvE,EAAKE,YAAYmE,iBAAiBC,IAAIhB,GAAKtD,EAAKE,YAAYmE,iBAAiBC,IAAIb,EAIhI,IAAMe,GAAkD,CAC3DnD,QAAS,SAACrB,GAAD,MAAQ,yCACjBoB,KAAM,SAACpB,GAAD,yBACNwB,OAAQ0C,GACRjE,KAAM8D,GACNzC,KAAM0C,GACNS,SAAU,WACVC,OAAQ,SAAC1E,GAAD,mCAGC2E,GAAgD,CACzDtD,QAAS,SAACrB,GAAD,MAAQ,8CACjBoB,KAAM,SAACpB,GAAD,+BACN0E,OAAQ,SAAC1E,GAAD,uCACRwB,OAAQ0C,GACRjE,KAAM8D,GACNzC,KAAM0C,GACNS,SAAU,YAGDG,GAAiD,CAC1DvD,QAAS,SAACrB,GAAD,MAAQ,wCACjBoB,KAAM,SAACpB,GAAD,2BACN0E,OAAQ,SAAC1E,GAAD,uCACRC,KAAM8D,GACNzC,KAAM0C,GACNS,SAAU,YAGd,SAASI,GAAU7E,GACf,OAAO,IAGX,SAAS8E,GAAU9E,GACf,OAAOA,EAAKE,YAAY+D,UAJjB,MAIoE,IAArBc,GAAW/E,GAG9D,SAAS+E,GAAY/E,GACxB,OAAOA,EAAKE,YAAYS,aAAawD,YAAY,GAAK,GAG1D,SAAqBnE,GACjB,OAAOA,EAAKE,YAAYmE,iBAAiBW,IAAIT,GAAKvE,EAAKE,YAAYmE,iBAAiBW,IAAI1B,GAAKtD,EAAKE,YAAYmE,iBAAiBW,IAAIvB,EAJxEwB,CAAWjF,GAQnE,IAAMkF,GAAwC,CACjD7D,QAAS,SAACrB,GAAD,MAAQ,+BACjBoB,KAAM,SAACpB,GAAD,+BACN0E,OAAQ,SAAC1E,GAAD,8BACRwB,OAAQuD,GACR9E,KAAM4E,GACNvD,KAAMwD,GACNL,SAAU,YAGDU,GAAwC,CACjD9D,QAAS,SAACrB,GAAD,MAAQ,+BACjBoB,KAAM,SAACpB,GAAD,iCACN0E,OAAQ,SAAC1E,GAAD,6BACRwB,OAAQuD,GACR9E,KAAM4E,GACNvD,KAAMwD,GACNL,SAAU,YAGDW,GAAwC,CACjD/D,QAAS,SAACrB,GAAD,MAAQ,+BACjBoB,KAAM,SAACpB,GAAD,0BACN0E,OAAQ,SAAC1E,GAAD,uCACRwB,OAAQuD,GACR9E,KAAM4E,GACNvD,KAAMwD,GACNL,SAAU,Y,IChIOY,G,2MAOjBC,yBAA2B,SAACC,GACxB,OAAQA,EAAS,IACb,IAAK,UACD,EAAKC,uBAAuBD,GAC5B,MAEJ,IAAK,UACD,EAAKE,uBAAuBF,GAC5B,MAEJ,IAAK,oBACD,EAAKG,kBAAkBH,EAAS,IAChC,MAEJ,IAAK,uBACD,EAAKI,qBAAqBJ,EAAS,IACnC,MAEJ,IAAK,2BACD,EAAKK,yBAAyBL,EAAS,IACvC,MAEJ,IAAK,SACD,EAAKM,sBAAsBN,GAC3B,MAEJ,IAAK,WACD,EAAKO,wBAAwBP,GAC7B,MAEJ,IAAK,mBDpCV,SAA4BvF,EAAeqB,GAC9C,OAAQA,GACJ,IAAK,cACDrB,EAAKE,YAAY+D,UAmClB,IAlCCjE,EAAKE,YAAYmE,iBAAiBC,IAAIC,GAAI,EAC1C,MAEJ,IAAK,mBACGvE,EAAKE,YAAY+D,UA8BtB,IA7BKjE,EAAKE,YAAYmE,iBAAiBC,IAAIhB,GAAI,EAC9C,MAEJ,IAAK,aACGtD,EAAKE,YAAY+D,UAyBtB,IAxBKjE,EAAKE,YAAYmE,iBAAiBC,IAAIb,GAAI,EAC9C,MAEJ,IAAK,IACGzD,EAAKE,YAAY+D,UAkEtB,IAjEKjE,EAAKE,YAAYmE,iBAAiBW,IAAIT,GAAI,EAC9C,MAEJ,IAAK,IACGvE,EAAKE,YAAY+D,UA6DtB,IA5DKjE,EAAKE,YAAYmE,iBAAiBW,IAAI1B,GAAI,EAC9C,MAEJ,IAAK,IACGtD,EAAKE,YAAY+D,UAwDtB,IAvDKjE,EAAKE,YAAYmE,iBAAiBW,IAAIvB,GAAI,GCQ1CsC,CAAkB,EAAKjD,OAAOkD,QAAST,EAAS,M,EAS5DO,wBAA0B,SAACP,GACvB,IAAIvF,EAAO,EAAK8C,OAAOkD,QAEvBC,OAAOC,OAAOC,IAAaC,SAAQ,SAAAC,GAC3Bd,EAAS,KA+hBlB,SAAgBc,GACnB,OAAOA,EAAGhF,QAAQA,QAAQiF,MAAM,KAAK,GAhiBTC,CAAOF,IAghBhC,SAA8BrG,EAAewG,GAChD,IAAuC,IAAnCC,GAAQzG,EAAMwG,GAA8B,OAE5CA,EAAgBE,OAAO1G,GAlhBf2G,CAAqB3G,EAAMqG,MAIf,iBAAhBd,EAAS,KACT,EAAKvF,KAAK4G,WAAWC,OAAS,EAAK7G,KAAK4G,WAAWC,Q,EAK3DrB,uBAAyB,SAACD,GACtB,OAAQA,EAAS,IACb,IAAK,WACD,EAAKuB,mBACL,MACJ,IAAK,UACD,EAAKC,kBACL,MACJ,IAAK,cACD,EAAKC,sBACL,MACJ,IAAK,cACD,EAAKC,uBACL,MACJ,IAAK,aACD,EAAKC,sBACL,MACJ,IAAK,iBACD,EAAKC,0BACL,MACJ,IAAK,aACD,EAAKrE,OAAOkD,QAAQoB,WAAWC,gBAAkB,EAAKvE,OAAOkD,QAAQoB,WAAWC,iB,EAQ5F5B,uBAAyB,SAACF,GACtB,OAAQA,EAAS,IACb,IAAK,WACD,EAAK+B,mBACL,MAEJ,IAAK,UACD,EAAKC,kBACL,MAEJ,IAAK,cACD,EAAKC,wB,EAQjB3B,sBAAwB,SAACN,GACrB,OAAQA,EAAS,IACb,IAAK,aACD,EAAKkC,qB,EAQjBR,qBAAuB,WACnB,KAAOS,GAAkB,EAAK5E,OAAOkD,UAAa,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAagH,UAAY,EAAK7E,OAAOkD,QAAQ9F,YAAYS,aAAaiH,IAAID,WACxJ,EAAKb,mBAET,KAAOe,GAA0B,EAAK/E,OAAOkD,UAAa,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAamH,cAAgB,EAAKhF,OAAOkD,QAAQ9F,YAAYS,aAAaiH,IAAIE,eACpK,EAAKR,oB,EAIbH,wBAA0B,WACtB,KAAOY,GAAqB,EAAKjF,OAAOkD,UAAa,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAaqH,YAAc,EAAKlF,OAAOkD,QAAQ9F,YAAYS,aAAaiH,IAAII,aAC7J,EAAKhB,sBAET,KAAOiB,GAA6B,EAAKnF,OAAOkD,UAAa,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAauH,iBAAmB,EAAKpF,OAAOkD,QAAQ9F,YAAYS,aAAaiH,IAAIM,kBAC1K,EAAKV,uB,EAIbN,oBAAsB,WAClB,KAAOiB,GAAiB,EAAKrF,OAAOkD,UAAa,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAayH,QAAU,EAAKtF,OAAOkD,QAAQ9F,YAAYS,aAAaiH,IAAIQ,SACrJ,EAAKrB,kBAET,KAAOsB,GAAyB,EAAKvF,OAAOkD,UAAa,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAa2H,aAAe,EAAKxF,OAAOkD,QAAQ9F,YAAYS,aAAaiH,IAAIU,cAClK,EAAKf,mB,EAIbT,iBAAmB,YACgC,IAA3CY,GAAkB,EAAK5E,OAAOkD,WAClC,EAAKlD,OAAOkD,QAAQ9F,YAAYqI,YAChC,EAAKzF,OAAOkD,QAAQ9F,YAAYqB,UAAYiH,GAAc,EAAK1F,OAAOkD,SACtE,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAagH,c,EAGjDL,iBAAmB,YACwC,IAAnDO,GAA0B,EAAK/E,OAAOkD,WAC1C,EAAKlD,OAAOkD,QAAQ9F,YAAYqB,UAAYkH,GAAsB,EAAK3F,OAAOkD,SAC9E,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAamH,kB,EAGjDf,gBAAkB,YACgC,IAA1CoB,GAAiB,EAAKrF,OAAOkD,WACjC,EAAKlD,OAAOkD,QAAQ9F,YAAYqI,YAChC,EAAKzF,OAAOkD,QAAQ9F,YAAYqB,UAAYmH,GAAa,EAAK5F,OAAOkD,SACrE,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAayH,Y,EAGjDb,gBAAkB,YACwC,IAAlDc,GAAyB,EAAKvF,OAAOkD,WACzC,EAAKlD,OAAOkD,QAAQ9F,YAAYqB,UAAYoH,GAAqB,EAAK7F,OAAOkD,SAC7E,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAa2H,iB,EAGjDtB,oBAAsB,YACgC,IAA9Ce,GAAqB,EAAKjF,OAAOkD,WACrC,EAAKlD,OAAOkD,QAAQ9F,YAAYqI,YAChC,EAAKzF,OAAOkD,QAAQ9F,YAAYqB,UAAYqH,GAAiB,EAAK9F,OAAOkD,SACzE,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAaqH,gB,EAGjDR,oBAAsB,YACwC,IAAtDS,GAA6B,EAAKnF,OAAOkD,WAC7C,EAAKlD,OAAOkD,QAAQ9F,YAAYqB,UAAYsH,GAAyB,EAAK/F,OAAOkD,SACjF,EAAKlD,OAAOkD,QAAQ9F,YAAYS,aAAauH,qB,iFAG/BY,GACdC,QAAQpF,IAAI,eAEZ,IAAIqF,EAAQC,SAASH,GAEjB7I,EAAOiJ,GAAgBC,KAAKrG,OAAOkD,QAASgD,GAE5CG,KAAKrG,OAAOkD,QAAQ9F,YAAY+D,UAAYhE,IAC5CkJ,KAAKrG,OAAOkD,QAAQ9F,YAAY+D,UAAYhE,EAC5CkJ,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY6E,IALhD,K,2CASIF,GACjB,IAAIE,EAAQC,SAASH,GACjBM,EAASC,GAAwBL,EAAOG,KAAKrG,OAAOkD,SACpD/F,EAAOqJ,GAAoBN,EAAOG,KAAKrG,OAAOkD,QAASoD,GAEvDD,KAAKrG,OAAOkD,QAAQ9F,YAAY+D,UAAYhE,IAC5CkJ,KAAKrG,OAAOkD,QAAQ9F,YAAY+D,UAAYhE,EAC5CkJ,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY6E,IAAUI,K,+CAIlDN,GACrB,IAAIE,EAAQC,SAASH,GACjBM,EAASG,GAA6BP,EAAOG,KAAKrG,OAAOkD,SACzD/F,EAAOqJ,GAAoBN,EAAOG,KAAKrG,OAAOkD,QAASoD,GAEvDD,KAAKrG,OAAOkD,QAAQ9F,YAAY+D,UAAYhE,IAC5CkJ,KAAKrG,OAAOkD,QAAQ9F,YAAY+D,UAAYhE,EAC5CkJ,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY6E,IAAUI,K,4CAIrDI,GACdL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAK,GAAGgF,KAAKM,SAASD,GAC/EL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAK,GAAGgF,KAAKO,UAAUF,GAChFL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAK,GAAGgF,KAAKQ,WAAWH,GACjFL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAK,GAAGgF,KAAKS,SAASJ,GAC/EL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAK,GAAGgF,KAAKU,QAAQL,GAC9EL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAK,GAAGgF,KAAKW,OAAON,K,wCAGnEA,GACdL,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,WAAaY,KAAKnJ,KAAK4G,WAAWmD,oB,+BAG7DP,GACLL,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,WAAayB,GAA4Bb,KAAKrG,OAAOkD,SAAWwD,I,gCAE1FA,GACNL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAasJ,KAAOC,GAAyBf,KAAKrG,OAAOkD,SAAWwD,EACpGL,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,WAAa4B,GAA8BhB,KAAKrG,OAAOkD,SAAWwD,I,iCAE3FA,GACPL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAayJ,WAAajB,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAKqF,I,+BAEnHA,GACLL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAa0J,YAAclB,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAKqF,I,8BAErHA,GACJL,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAa0J,YAAclB,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAKqF,I,6BAEtHA,GACHL,KAAKrG,OAAOkD,QAAQ9F,YAAYmC,aAAe5D,KAAKD,IAAI,EAAG2K,KAAKrG,OAAOkD,QAAQ9F,YAAYmC,aAAe8G,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAawD,YAAY,GAAKqF,K,yCAIxK,IAAIxJ,EAAOmJ,KAAKrG,OAAOkD,SACa,IAAhCsE,GAAsBtK,KAEtBA,EAAKE,YAAY+D,UAmRlB,KAlRCjE,EAAKuK,UAAUC,oBAAqB,K,2BAhQxC,OAAOrB,KAAKrG,OAAOkD,QAAQuE,c,GAJI1H,GAgThC,SAAS4H,GAAczK,GAC1B,IAAI0K,EAAOjM,KAAKkF,IAAI3D,EAAKE,YAAY+D,SAAW,GAAK,EAErD,OADAyG,GAAQA,EAAO1K,EAAKiB,iBAAiBsB,cAmBlC,SAASiG,GAAcxI,GAC1B,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAagH,UAC1C,OAAOlJ,KAAKuC,IAAI,GAAI2J,GAAS,GAEjC,SAASjD,GAAkB1H,GACvB,OAAQA,EAAKE,YAAYqI,WAAa,GAAOvI,EAAKE,YAAYqB,SAAWiH,GAAcxI,GAEpF,IAAM4K,GAAyC,CAClDxJ,KAAM,UACNC,QAAS,6BACTC,KAAMoG,GACNlG,OAAQ,WAAQ,OAAO,IAKpB,SAASiH,GAAsBzI,GAClC,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAamH,cAC1C,OAAOrJ,KAAKuC,IAAI,EAAG2J,GAAS,GAEhC,SAAS9C,GAA0B7H,GAC/B,OAAQA,EAAKE,YAAYqB,SAAWkH,GAAsBzI,GAEvD,IAAM6K,GAAyC,CAClDzJ,KAAM,UACNC,QAAS,6BACTC,KAAMuG,GACNrG,OAAQ,WAAQ,OAAO,IAMpB,SAASkH,GAAa1I,GACzB,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAayH,QAAU,EACpD,OAAO3J,KAAKuC,IAAI,EAAG2J,GAAS,EAEhC,SAASxC,GAAiBnI,GACtB,OAAQA,EAAKE,YAAYqI,WAAa,GAAOvI,EAAKE,YAAYqB,SAAWmH,GAAa1I,GAEnF,IAAM8K,GAAwC,CACjD1J,KAAM,UACNC,QAAS,4BACTC,KAAM6G,GACN3G,OAAQ,WAAQ,OAAO,IAKpB,SAASmH,GAAqB3I,GACjC,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAa2H,aAC1C,OAAO7J,KAAKuC,IAAI,EAAG2J,GAAS,EAEhC,SAAStC,GAAyBrI,GAC9B,OAAQA,EAAKE,YAAYqB,SAAWoH,GAAqB3I,GAEtD,IAAM+K,GAAwC,CACjD3J,KAAM,UACNC,QAAS,4BACTC,KAAM+G,GACN7G,OAAQ,WAAQ,OAAO,IAKpB,SAASoH,GAAiB5I,GAC7B,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAaqH,YAC1C,OAAOvJ,KAAKuC,IAAI,EAAG2J,GAAS,GAEhC,SAAS5C,GAAqB/H,GAC1B,OAAQA,EAAKE,YAAYqI,WAAa,GAAOvI,EAAKE,YAAYqB,SAAWqH,GAAiB5I,GAEvF,IAAMgL,GAA4C,CACrD5J,KAAM,UACNC,QAAS,gCACTC,KAAMyG,GACNvG,OAAQ,WAAQ,OAAO,IAKpB,SAASqH,GAAyB7I,GACrC,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAauH,iBAC1C,OAAOzJ,KAAKuC,IAAI,EAAG2J,GAAS,GAEhC,SAAS1C,GAA6BjI,GAClC,OAAQA,EAAKE,YAAYqB,SAAWsH,GAAyB7I,GAE1D,IAAMiL,GAA4C,CACrD7J,KAAM,UACNC,QAAS,gCACTC,KAAM2G,GACNzG,OAAQ,WAAQ,OAAO,IAMd0J,GAA+B,CACxC,CAAE/H,YAAa,KAAMD,QAAS,KAC9B,CAAEC,YAAa,KAAMD,QAAS,KAC9B,CAAEC,YAAa,KAAMD,QAAS,KAC9B,CAAEC,YAAa,KAAMD,QAAS,MAC9B,CAAEC,YAAa,IAAMD,QAAS,MAC9B,CAAEC,YAAa,KAAMD,QAAS,OAGrBiI,GAAiC,CAC1C,CAAE/J,KAAM,kBAAmB4B,KAAMkI,GAAgB,IACjD,CAAE9J,KAAM,oBAAqB4B,KAAMkI,GAAgB,IACnD,CAAE9J,KAAM,oBAAqB4B,KAAMkI,GAAgB,IACnD,CAAE9J,KAAM,qBAAsB4B,KAAMkI,GAAgB,IACpD,CAAE9J,KAAM,sBAAuB4B,KAAMkI,GAAgB,IACrD,CAAE9J,KAAM,oBAAqB4B,KAAMkI,GAAgB,KAQhD,SAAShC,GAAgBlJ,EAAegJ,GAC3C,IAAI/F,EAAQjD,EAAKE,YAAYS,aAAawD,YAAY6E,GACtD,OAAOjG,EAAcoI,GAAYnC,GAAOhG,KAAMC,GAQ3C,SAASoG,GAAwBL,EAAehJ,GACnD,IAAIoL,EAAYhI,GAAmB+H,GAAYnC,GAAOhG,KAAMhD,EAAKE,YAAYS,aAAawD,YAAY6E,GAAQhJ,EAAKE,YAAY+D,UAC3HoH,EAAcC,GAAgBtL,GAClC,OAAOvB,KAAKF,IAAI6M,EAAWC,GAGxB,SAASE,GAAsBvC,EAAehJ,GACjD,IAAIoL,EAAYxH,GAAiBuH,GAAYnC,GAAOhG,KAAMhD,EAAKE,YAAYS,aAAawD,YAAY6E,GAAQhJ,EAAKE,YAAY+D,UACzHoH,EAAcxH,GAAesH,GAAYnC,GAAOhG,KAAMhD,EAAKE,YAAYS,aAAawD,YAAY6E,GAAQK,GAAwBL,EAAOhJ,IAC3I,OAAOvB,KAAKF,IAAI6M,EAAWC,GAGxB,SAAS/B,GAAoBN,EAAehJ,EAAe8D,GAC9D,OAAOD,GAAesH,GAAYnC,GAAOhG,KAAMhD,EAAKE,YAAYS,aAAawD,YAAY6E,GAAQlF,GAkB9F,SAASyF,GAA6BP,EAAehJ,GACxD,IAAIwL,EAAOnC,GAAwBL,EAAOhJ,GAE1C,OADWvB,KAAKE,MAAM6M,EAAO,GAI1B,SAASC,GAA2BzC,EAAehJ,GAEtD,OAAOsJ,GAAoBN,EAAOhJ,EADvBuJ,GAA6BP,EAAOhJ,IAI5C,SAASgK,GAA4BhK,GACxC,IAAI0L,EAAQ1L,EAAKE,YAAYS,aAAawD,YAAY,GAClDnE,EAAKE,YAAYmE,iBAAiBW,IAAIT,IAAGmH,GAAc,GAC3DA,GAAQA,EAAO1L,EAAKE,YAAYS,aAAagL,YAAYC,UACzDF,GAAQA,EAAO1L,EAAKuK,UAAU3D,WAAWmD,kBACzC,IAAI8B,EAAOC,GAA+B9L,GACtC+L,EAAmBtN,KAAKD,IAAI,EAAGkN,EAAOG,GAE1C,OADepN,KAAKF,IAAI+M,GAAgBtL,GAAM+L,GAI3C,SAAS7B,GAAyBlK,GACrC,IAAI0L,EAAQ1L,EAAKE,YAAYS,aAAawD,YAAY,GAItD,OAHAuH,GAAQA,EAAO1L,EAAKE,YAAYS,aAAagL,YAAYK,MACzDN,GAAe,GAAPA,EAAa1L,EAAKiM,SAASC,OAAO3H,EAEnC9F,KAAKE,MAAM+M,GAOf,SAASvB,GAA8BnK,GAC1C,IAAI0L,EAAQ1L,EAAKE,YAAYS,aAAawD,YAAY,GAAK,IAC3DuH,GAAc1L,EAAKiM,SAASC,OAAO5I,EACnCoI,GAAQA,EAAO1L,EAAKE,YAAYS,aAAagL,YAAYK,MACzDN,GAAQA,EAAO1L,EAAKuK,UAAU3D,WAAWmD,kBACrC/J,EAAKE,YAAYmE,iBAAiBW,IAAIT,IAAGmH,GAAc,GAC3D,IAAIG,EAAOC,GAA+B9L,GACtC+L,EAAmBtN,KAAKD,IAAI,EAAGkN,EAAOG,GACtCM,EAAW1N,KAAKF,IAAI+M,GAAgBtL,GAAM+L,GAC9C,OAAOtN,KAAKE,MAAMwN,GAGf,SAASC,GAAsBpM,GAClC,OAAO,KAEJ,SAASsK,GAAsBtK,GAClC,OAAOA,EAAKE,YAAY+D,UAHjB,KAKJ,IAAMoI,GAAqC,CAC9ChL,QAAS,8BACTD,KAAM,oBACNI,OAAQ,SAACxB,GAAW,OAAwD,IAAjDA,EAAKE,YAAYS,aAAawD,YAAY,IAAYnE,EAAKuK,UAAUC,oBAChGlJ,KAAMgJ,IAGH,SAASgC,GAAYtM,GACxB,OAAOA,EAAKuK,UAAUgC,gBAGnB,SAASC,GAAkBxM,GAC9B,OAAOsM,GAAYtM,GAGhB,SAAwBA,GAC3B,IAAI0K,EAAO,EAQX,OANAA,GAAQ+B,GAAsBzM,EAAMmG,GAAYuG,gBAChDhC,GAAQ+B,GAAsBzM,EAAMmG,GAAYwG,0BAChDjC,GAAQ+B,GAAsBzM,EAAMmG,GAAYyG,mBAChDlC,GAAQ+B,GAAsBzM,EAAMmG,GAAY0G,oBAChDnC,GAAQ+B,GAAsBzM,EAAMmG,GAAY2G,kBAChDpC,GAAQ+B,GAAsBzM,EAAMmG,GAAY4G,mBAXrBC,CAAchN,GAetC,SAASyM,GAAuBzM,EAAeqG,GAClD,OAAOxC,GAAewC,EAAGrD,KAAM,EAAGqD,EAAG4G,QAAQjN,IAmB1C,SAASkN,GAAwBlN,EAAewG,GACnD,OAAOzD,EAAcyD,EAAgBxD,KAAMwD,EAAgByG,QAAQjN,IAIhE,SAASyG,GAAQzG,EAAeqG,GACnC,OAAO6G,GAAwBlN,EAAMqG,IAAOmG,GAAkBxM,GAM3D,SAASmN,GAAwBnN,GACpC,OAA6B,IAAtBsM,GAAYtM,GAqHhB,IAeMmG,GAAc,CACvBuG,eAzH4C,CAC5CrL,QAAS,CACLA,QAAS,kCACTD,KAAK,yBACLI,OAAQ2L,IAEZnK,KAbiC,CACjCE,QAAS,EACTC,YAAa,GAYb8J,QAVJ,SAA4BjN,GACxB,OAAOA,EAAKuK,UAAU3D,WAAWmD,mBAUjCqD,YAAa,yCACb1G,OAAQ,SAAC1G,GACLA,EAAKuK,UAAU3D,WAAWmD,sBA+Gd4C,yBA1DsC,CACtDtL,QAAS,CACLA,QAAS,2CACTD,KAAK,0BACLI,OAAQ2L,IAEZnK,KAb0C,CAC1CE,QAAS,EACTC,YAAa,GAYb8J,QAVJ,SAAqCjN,GACjC,OAAOA,EAAKuK,UAAU3D,WAAWyG,uBAUjCD,YAAa,8BACb1G,OAAQ,SAAC1G,GACLA,EAAKuK,UAAU3D,WAAWyG,0BAgDYT,kBApGK,CAC/CvL,QAAS,CACLA,QAAS,oCACTD,KAAK,8BACLI,OAAQ2L,IAEZnK,KAbmC,CACnCE,QAAS,EACTC,YAAa,GAYb8J,QAVJ,SAA8BjN,GAC1B,OAAOA,EAAKuK,UAAU3D,WAAW0G,gBAUjCF,YAAa,qFACb1G,OAAQ,SAAC1G,GACLA,EAAKuK,UAAU3D,WAAW0G,mBA2F9BT,mBAtCgD,CAChDxL,QAAS,CACLA,QAAS,qCACTD,KAAK,+BACLI,OAAQ2L,IAEZnK,KAboC,CACpCE,QAAS,EACTC,YAAa,GAYb8J,QAVJ,SAA+BjN,GAC3B,OAAOA,EAAKuK,UAAU3D,WAAW2G,iBAUjCH,YAAa,2FACb1G,OAAQ,SAAC1G,GACLA,EAAKuK,UAAU3D,WAAW2G,oBA4BVT,iBAhF0B,CAC9CzL,QAAS,CACLA,QAAS,mCACTD,KAAK,6BACLI,OAAQ2L,IAEZnK,KAbkC,CAClCE,QAAS,EACTC,YAAa,GAYb8J,QAVJ,SAA6BjN,GACzB,OAAOA,EAAKuK,UAAU3D,WAAW4G,eAUjCJ,YAAa,mCACb1G,OAAQ,SAAC1G,GACLA,EAAKuK,UAAU3D,WAAW4G,kBAsEQT,kBAjBS,CAC/C1L,QAAS,CACLA,QAAS,oCACTD,KAAK,8BACLI,OAAQ2L,IAEZnK,KAbmC,CACnCE,QAAS,EACTC,YAAa,GAYb8J,QAVJ,SAA8BjN,GAC1B,OAAOA,EAAKuK,UAAU3D,WAAW6G,gBAUjCL,YAAa,4FACb1G,OAAQ,SAAC1G,GACLA,EAAKuK,UAAU3D,WAAW6G,oBCxtBrBC,GAAoC,CAC7C,CAAEvK,YAAa,EAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,EAAMD,QAAS,KAC9B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,KAC7B,CAAEC,YAAa,IAAKD,QAAS,MAG1B,SAASyK,GAAqB3N,EAAegJ,GAChD,IAAI/F,EAAQjD,EAAKE,YAAY0N,iBAAiB5E,GAC9C,OAAOjG,EAAc2K,GAAqB1E,GAAQ/F,GClBtD,IAIe4K,GAJK,CAChBC,uBAKD,SAAiC9N,GAC7B,GAAIA,EAAK+N,WAAWC,QAAQC,OACpBjO,EAAK+N,WAAWC,QAAQC,KAAKC,OAAS,SACtC,OAAOlO,EAAK+N,WAAWC,QAAQC,KAAKE,MAAQ,EAGpD,OAAO,GAXcC,mBAczB,SAA6BpO,GACzB,GAAIA,EAAK+N,WAAWC,QAAQK,OACpBrO,EAAK+N,WAAWC,QAAQK,KAAKH,OAAS,SACtC,OAAOlO,EAAK+N,WAAWC,QAAQK,KAAKF,MAAQ,EAGpD,OAAO,GApBkCG,gBAuB7C,SAA0BtO,GACzB,IAAIuO,EAAKvO,EAAK+N,WAAWC,QACrBO,EAAGC,MACmB,SAAlBD,EAAGC,KAAKN,SACRlO,EAAKE,YAAYqI,WAAagG,EAAGC,KAAKL,SCnBlD,IAKaM,GALwC,CACjDC,IAAK,OACLC,GAMJ,SAA2B3O,EAAeqB,GAGtC,OAAQA,GACJ,IAAK,IACDuN,GAAqB5O,EAAM6O,IAC3B,MAEJ,IAAK,IACDD,GAAqB5O,EAAM8O,IAC3B,MAEJ,IAAK,IACDF,GAAqB5O,EAAM+O,IAC3B,MAEJ,IAAK,OACDC,GAAwBhP,EAAM6O,IAC9B,MAEJ,IAAK,OACDG,GAAwBhP,EAAM8O,IAC9B,MAEJ,IAAK,OACDE,GAAwBhP,EAAM+O,MA9BtCE,QAAS,SAACjP,GAAD,OAAUA,EAAKiM,SAASiD,OAuC9B,IAAML,GAAiC,CAC1CxN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,4BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMuE,GAC5CmC,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMuE,GAAKoG,GAEpCyC,YAAY,oEAGH0B,GAAiC,CAC1CzN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,0BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAiB,IAAX2K,EAAU,uDAAJ,EACjB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,kEAIH2B,GAAiC,CAC1C1N,QAAS,CAELA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,qCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAS,MACtC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMyD,GAC5CiD,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMyD,GAAKkH,GAEpCyC,YAAY,gFAWT,SAAS+B,KACZ,MAAO,CACH5K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,EACf2L,UAAW,GC/FnB,IAKaX,GALoD,CAC7DC,IAAK,aACLC,GAMJ,SAA2B3O,EAAeqB,GAGtC,OAAQA,GACJ,IAAK,IACDuN,GAAqB5O,EAAM6O,IAC3B,MAEJ,IAAK,IACDD,GAAqB5O,EAAM8O,IAC3B,MAEJ,IAAK,IACDF,GAAqB5O,EAAM+O,IAC3B,MAEJ,IAAK,OACDC,GAAwBhP,EAAM6O,IAC9B,MAEJ,IAAK,OACDG,GAAwBhP,EAAM8O,IAC9B,MAEJ,IAAK,OACDE,GAAwBhP,EAAM+O,MA9BtCE,QAAS,SAACjP,GAAD,OAAUA,EAAKiM,SAASoD,aAuC9B,IAAMR,GAAiC,CAC1CxN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,iCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMuE,GAC5CmC,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMuE,GAAKoG,GAEpCyC,YAAY,0BAGH0B,GAAiC,CAC1CzN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,sCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAiB,IAAX2K,EAAU,uDAAJ,EACjB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,+BAIH2B,GAAiC,CAC1C1N,QAAS,CAELA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,8CACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAS,MACtC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMyD,GAC5CiD,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMyD,GAAKkH,GAEpCyC,YAAY,mFAUT,SAAS+B,KACZ,MAAO,CACH5K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GC1FvB,IAMagL,GANiC,CAC1CC,IAAK,SACLC,GAOJ,SAA2B3O,EAAeqB,GAGtC,OAAQA,GACJ,IAAK,IACDuN,GAAqB5O,EAAM6O,IAC3B,MAEJ,IAAK,IACDD,GAAqB5O,EAAM8O,IAC3B,MAEJ,IAAK,IACDF,GAAqB5O,EAAM+O,IAC3B,MAEJ,IAAK,OACDC,GAAwBhP,EAAM6O,IAC9B,MAEJ,IAAK,OACDG,GAAwBhP,EAAM8O,IAC9B,MAEJ,IAAK,OACDE,GAAwBhP,EAAM+O,MA/BtCE,QAAS,SAACjP,GAAD,OAAUA,EAAKiM,SAASC,SAwC9B,IAAM2C,GAAiC,CAC1CxN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,8CACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMuE,GAC5CmC,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMuE,GAAKoG,GAEpCyC,YAAY,IAGH0B,GAAiC,CAC1CzN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,mDACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAiB,IAAX2K,EAAU,uDAAJ,EACjB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,IAIH2B,GAAiC,CAC1C1N,QAAS,CAELA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,sCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAS,MACtC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMyD,GAC5CiD,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMyD,GAAKkH,GAEpCyC,YAAY,IAUT,SAAS+B,KACZ,MAAO,CACH5K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GC7FvB,IAMagL,GANiC,CAC1CC,IAAK,aACLC,GAOJ,SAA2B3O,EAAeqB,GAGtC,OAAQA,GACJ,IAAK,IACDuN,GAAqB5O,EAAM6O,IAC3B,MAEJ,IAAK,IACDD,GAAqB5O,EAAM8O,IAC3B,MAEJ,IAAK,IACDF,GAAqB5O,EAAM+O,IAC3B,MAEJ,IAAK,OACDC,GAAwBhP,EAAM6O,IAC9B,MAEJ,IAAK,OACDG,GAAwBhP,EAAM8O,IAC9B,MAEJ,IAAK,OACDE,GAAwBhP,EAAM+O,MA/BtCE,QAAS,SAACjP,GAAD,OAAUA,EAAKiM,SAASqD,aAwC9B,IAAMT,GAAiC,CAC1CxN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,4BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMuE,GAC5CmC,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMuE,GAAKoG,GAEpCyC,YAAY,qBAGH0B,GAAiC,CAC1CzN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,2BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAiB,IAAX2K,EAAU,uDAAJ,EACjB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,gCAIH2B,GAAiC,CAC1C1N,QAAS,CAELA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,qCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAS,MACtC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,gFAUT,SAAS+B,KACZ,MAAO,CACH5K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GC9FvB,IAMagL,GANiC,CAC1CC,IAAK,eACLC,GAOJ,SAA2B3O,EAAeqB,GAGtC,OAAQA,GACJ,IAAK,IACDuN,GAAqB5O,EAAM6O,IAC3B,MAEJ,IAAK,IACDD,GAAqB5O,EAAM8O,IAC3B,MAEJ,IAAK,IACDF,GAAqB5O,EAAM+O,IAC3B,MAEJ,IAAK,OACDC,GAAwBhP,EAAM6O,IAC9B,MAEJ,IAAK,OACDG,GAAwBhP,EAAM8O,IAC9B,MAEJ,IAAK,OACDE,GAAwBhP,EAAM+O,MA/BtCE,QAAS,SAACjP,GAAD,OAAUA,EAAKiM,SAASsD,eAwC9B,IAAMV,GAAiC,CAC1CxN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,4BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMuE,GAC5CmC,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMuE,GAAKoG,GAEpCyC,YAAY,qBAGH0B,GAAiC,CAC1CzN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,2BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAiB,IAAX2K,EAAU,uDAAJ,EACjB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,gCAIH2B,GAAiC,CAC1C1N,QAAS,CAELA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,qCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAS,MACtC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,gFAUT,SAAS+B,KACZ,MAAO,CACH5K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GC7FvB,IAMagL,GANiC,CAC1CC,IAAK,SACLC,GAOJ,SAA2B3O,EAAeqB,GAGtC,OAAQA,GACJ,IAAK,IACDuN,GAAqB5O,EAAM6O,IAC3B,MAEJ,IAAK,IACDD,GAAqB5O,EAAM8O,IAC3B,MAEJ,IAAK,IACDF,GAAqB5O,EAAM+O,IAC3B,MAEJ,IAAK,OACDC,GAAwBhP,EAAM6O,IAC9B,MAEJ,IAAK,OACDG,GAAwBhP,EAAM8O,IAC9B,MAEJ,IAAK,OACDE,GAAwBhP,EAAM+O,MA/BtCE,QAAS,SAACjP,GAAD,OAAUA,EAAKiM,SAASuD,QAwC9B,IAAMX,GAAiC,CAC1CxN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,4BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMuE,GAC5CmC,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMuE,GAAKoG,GAEpCyC,YAAY,qBAGH0B,GAAiC,CAC1CzN,QAAS,CACLA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,2BACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAU,MACvC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAiB,IAAX2K,EAAU,uDAAJ,EACjB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,gCAIH2B,GAAiC,CAC1C1N,QAAS,CAELA,QAAS,SAACrB,GAAD,yBAAsByO,GAAaC,IAAnC,OACTtN,KAAM,SAACpB,GAAD,uBAAoByO,GAAaC,IAAjC,eACNhK,OAAQ,SAAC1E,GAAD,qCACTgD,KAAM,CAAEG,YAAa,IAAKD,QAAS,MACtC+J,QAAS,SAACjN,GAAD,OAAQyO,GAAaQ,QAAQjP,GAAMsD,GAC5CoD,OAAQ,SAAC1G,GAAkB,IAAZ2K,EAAW,uDAAJ,EAClB8D,GAAaQ,QAAQjP,GAAMsD,GAAKqH,GAEpCyC,YAAY,gFAUT,SAAS+B,KACZ,MAAO,CACH5K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GC3FR,QAACgM,OAAMC,aAAYC,SAAQC,aAAYC,eAAcC,SAEvDC,GAAgB,IAChBC,GAA2C,CACpD5O,KAAM,iBAAI,4BACVI,OAAQ,SAACxB,GAAD,OAASoE,GAAWpE,IAASA,EAAKiM,SAASrL,UACnDU,KAAM,SAACtB,GAAD,OAAQA,EAAKE,YAAYS,aAAasJ,IAAM8F,IAClD9P,KAAM,kBAAI8P,IACV1O,QAAS,iBAAI,mBACboD,SAAU,MACVwL,IAAI,mDC0DD,SAASrB,GAAqB5O,EAAekQ,IACM,IAAlDC,GAAsBnQ,EAAMkQ,KAE5BlQ,EAAKE,YAAYC,OAASiQ,GAAqBpQ,EAAMkQ,GACrDA,EAAiBxJ,OAAO1G,EAAM,IAI/B,SAASoQ,GAAqBpQ,EAAewG,GAChD,OAAOzD,EAAcyD,EAAgBxD,KAAMwD,EAAgByG,QAAQjN,IAIhE,SAASmQ,GAAsBnQ,EAAeqG,GACjD,OAAO+J,GAAqBpQ,EAAMqG,IAAOrG,EAAKE,YAAYC,MAGvD,SAASkQ,GAA4BrQ,EAAeqG,GACvD,OAAOjD,GAAmBiD,EAAGrD,KAAMqD,EAAG4G,QAAQjN,GAAMA,EAAKE,YAAYC,OAOlE,SAAS6O,GAAwBhP,EAAeqG,GACnD,IAAIiK,EAAUD,GAA4BrQ,EAAKqG,GAC3CpG,EAPD,SAAkCD,EAAeqG,GACpD,IAAIiK,EAAUD,GAA4BrQ,EAAMqG,GAChD,OAAOxC,GAAewC,EAAGrD,KAAMqD,EAAG4G,QAAQjN,GAAMsQ,GAKrCC,CAAyBvQ,EAAKqG,GAEjCrG,EAAKE,YAAYC,OAASF,IAC1BD,EAAKE,YAAYC,OAASF,EAC1BoG,EAAGK,OAAO1G,EAAMsQ,IC9ErB,IAAME,GAA8B,CACvCC,IAAK,SAACzQ,GAAD,OAAmBA,EAAKE,YAAYS,aAAasJ,KACtDyG,MAAO,SAAC1Q,EAAesQ,GAAsBtQ,EAAKE,YAAYS,aAAasJ,KAAOqG,IAI/E,SAASK,GAAgB3Q,EAAe4Q,IACC,IAAxCC,GAAiB7Q,EAAM4Q,KAEvBA,EAAYE,YAAYJ,MAAM1Q,EAAM+Q,GAAiB/Q,EAAM4Q,IAC3DA,EAAYI,SAAStF,KAAK1L,EAAM,IAIjC,SAAS+Q,GAAiB/Q,EAAe4Q,GAC5C,OAAO7N,EAAc6N,EAAY5N,KAAM4N,EAAYI,SAASP,IAAIzQ,IAG7D,SAAS6Q,GAAiB7Q,EAAeiR,GAC5C,OAAOF,GAAiB/Q,EAAMiR,IAAOA,EAAGH,YAAYL,IAAIzQ,GAGrD,SAASkR,GAAuBlR,EAAeiR,GAClD,OAAO7N,GAAmB6N,EAAGjO,KAAMiO,EAAGD,SAASP,IAAIzQ,GAAOiR,EAAGH,YAAYL,IAAIzQ,IAO1E,SAASmR,GAAmBnR,EAAeiR,GAC9C,IAAIX,EAAUY,GAAuBlR,EAAKiR,GACtChR,EAPD,SAA6BD,EAAeiR,GAC/C,IAAIX,EAAUY,GAAuBlR,EAAMiR,GAC3C,OAAOpN,GAAeoN,EAAGjO,KAAMiO,EAAGD,SAASP,IAAIzQ,GAAOsQ,GAK3Cc,CAAoBpR,EAAKiR,GAE5BA,EAAGH,YAAYL,IAAIzQ,IAASC,IAC5BgR,EAAGH,YAAYJ,MAAM1Q,EAAMC,GAC3BgR,EAAGD,SAAStF,KAAK1L,EAAMsQ,IChE5B,IAAMe,GAAgC,CACzCjQ,KAAK,6BACLC,QAAQ,2BACRiQ,aAAa,MAEbN,SAAU,CACNP,IAAK,SAACzQ,GAAD,OAAUA,EAAKE,YAAYS,aAAagL,YAAYK,OACzDN,KAAM,SAAC1L,EAAMsQ,GAActQ,EAAKE,YAAYS,aAAagL,YAAYK,OAASsE,IAElFtN,KAAM,CAAEE,QAAS,IAAKC,YAAa,IACnC2N,YAAaN,GACbP,IAAI,8CAEJzO,OAAQ,SAACxB,GAAD,OAA2D,IAAjDA,EAAKE,YAAYS,aAAawD,YAAY,KAGnDoN,GAAqC,CAC9CnQ,KAAK,gCACLC,QAAQ,+BACRiQ,aAAa,MAEbN,SAAU,CACNP,IAAK,SAACzQ,GAAD,OAAUA,EAAKE,YAAYS,aAAagL,YAAYC,WACzDF,KAAM,SAAC1L,EAAMsQ,GAActQ,EAAKE,YAAYS,aAAagL,YAAYC,WAAa0E,IAEtFtN,KAAM,CAAEE,QAAS,IAAMC,YAAa,KACpC8M,IAAI,2CACJa,YAAaN,GAEbhP,OAAQ,SAACxB,GAAD,OAA8D,IAApDA,EAAKE,YAAYS,aAAagL,YAAYK,QCtB3CwF,G,WAEjB,WAAmB1O,GAAiB,IAAD,gCAAhBA,SAAgB,KAqOnC2O,eAAiB,SAACjI,GACd,IAAK,IAAIkI,EAAI,EAAGA,EAAIlI,EAAMkI,IAAK,CAE3B,IAAIC,EAAOrT,EAAa,EAAGsT,GAAiC,EAAK9O,OAAOkD,UACpE6L,EAAYpT,KAAKF,IAAI,EAAKyB,KAAKuI,UAAWoJ,GAC9C,EAAK3R,KAAKqC,cAAgBwP,EAC1B,EAAK7R,KAAKuI,WAAasJ,IA3OI,KAgPnCC,SAAW,SAACtI,GACJ,EAAKxJ,KAAKqE,iBAAiBW,IAAI1B,IACnC,EAAKtD,KAAK+R,UAAYtT,KAAKD,IAAI,EAAKwB,KAAK+R,UAAa,IAAM,EAAI,EAAKjP,OAAOkD,QAAQuE,UAAU3D,WAAW0G,gBAAkB,KAlP5F,KAoRnC0E,SAAW,WACP,EAAKhS,KAAK+R,UAAYtT,KAAKF,IAAI,EAAKyB,KAAK+R,UAAY,EAAItT,KAAKuC,IAAI,EAAG,EAAK8B,OAAOkD,QAAQ/E,iBAAiBU,iBAAmBlD,KAAKuC,IAAI,GAAI,EAAK8B,OAAOkD,QAAQuE,UAAU3D,WAAW4G,eAAgByE,GAAqB,EAAKnP,OAAOkD,WArRrM,KAqTnCkM,SAAW,WAEP,IAAIC,EAASC,GAAsB,EAAKtP,OAAOkD,SAC/C,GAAe,IAAXmM,IAA+C,IAA/B,EAAKnS,KAAKS,iBAA9B,CAEA,IAAI4R,EAAU,EAAKrS,KAEfsS,EAAe,EACf,EAAKxP,OAAOkD,QAAQ+H,WAAWC,QAAQuE,MACoB,UAAvD,EAAKzP,OAAOkD,QAAQ+H,WAAWC,QAAQuE,KAAKrE,SAC5CoE,EAAe7T,KAAKE,MAA0D,IAApD,EAAKmE,OAAOkD,QAAQ+H,WAAWC,QAAQuE,KAAKpE,MAAckE,EAAQpO,WAIpG,IAAIuO,EAAUH,EAAQ9Q,SAClBkR,EAAW,EAAKzS,KAAK0S,KAAKC,mBAAqB,EAC/CC,EAAW,EAAK5S,KAAK6S,YACrBC,EAAS,CACTnL,UAAW,EAAK3H,KAAKW,aAAagH,UAClCG,cAAe,EAAK9H,KAAKW,aAAamH,cACtCM,QAAS,EAAKpI,KAAKW,aAAayH,QAChCE,aAAc,EAAKtI,KAAKW,aAAa2H,aACrCN,YAAa,EAAKhI,KAAKW,aAAaqH,YACpCE,iBAAkB,EAAKlI,KAAKW,aAAauH,kBAG7C,EAAKpF,OAAOkD,QAAQ9F,YAAc6S,KAElC,EAAK/S,KAAKuB,SAAWiR,EAAU/T,KAAKE,MAAMwT,GACtC,EAAKnS,KAAKuB,SAAW,IAAG,EAAKvB,KAAKuB,SAAW,GACjD,EAAKvB,KAAKgT,iBAAmB,EAAKhT,KAAKuB,SACvC,EAAKvB,KAAK6S,YAAcD,EACxB,EAAK5S,KAAK0S,KAAKC,mBAAqBF,EACpC,EAAKzS,KAAKW,aAAaiH,IAAMkL,EAC7B,EAAK9S,KAAKiE,UAAYqO,EAEtB,EAAKW,oBAzV0B,KA4VnCC,gBAAkB,WACd,IAAIT,EAAW,EAAKzS,KAAK0S,KAAKC,mBAAqB,EAGnD,EAAK7P,OAAOkD,QAAQ9F,YAAc6S,KAElC,EAAKjQ,OAAOkD,QAAQuE,UAAUgC,kBAC9B,EAAKvM,KAAK0S,KAAKC,mBAAqBF,EAEpC,EAAKQ,kBACL,EAAKE,eAtW0B,KAyWnCA,YAAc,WACV,EAAKrQ,OAAOkD,QAAQiG,SHtTjB,CACHrL,UAAU,EACVsO,KPkCG,CACH3K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,EACf2L,UAAW,GOnCXC,WN+BG,CACH9K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GM/BfyI,OLiCG,CACH3H,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GKhCf6L,WJ+BG,CACH/K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GI/Bf8L,aH6BG,CACHhL,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GG7Bf+L,MF4BG,CACHjL,EAAG,EAAGjB,EAAG,EAAGG,EAAG,IKkRf,EAAKX,OAAOkD,QAAQ/E,iBjB7LjB,CACHC,iBAAkB,EAClBS,gBAAiB,EACjBF,oBAAqB,EACrBO,kBAAmB,EACnBG,YAAa,EACbI,cAAe,EACfG,sBAAuB,IiBrLQ,KA8WnCuQ,gBAAkB,WACd,EAAKnQ,OAAOkD,QAAQoN,SAASC,WAAWnE,KAAO,EAC/C,EAAKpM,OAAOkD,QAAQsN,IAAIC,SAAW,EACnC,EAAKzQ,OAAOsQ,SAASvM,QACrB,EAAK/D,OAAO0Q,OAAO3M,QACnB,EAAK/D,OAAOiL,WAAW0F,UAAU5M,QAC7B,EAAK/D,OAAOkD,QAAQuE,UAAU3D,WAAWC,QACzC,EAAK/D,OAAOkD,QAAQuE,UAAU3D,WbxF/B,CACHC,OAAO,EACPkD,kBAAmB,EACnBuD,eAAgB,EAChBE,cAAe,EACfH,sBAAuB,EACvBE,gBAAiB,EACjBE,eAAgB,K,4Da5RJlI,GACZ,OAAQA,EAAS,IACb,IAAK,OACD4D,KAAKuK,OACL,MAEJ,IAAK,cACDvK,KAAKwK,cACL,MAEJ,IAAK,SACDxK,KAAKyK,SACL,MAEJ,IAAK,eACDzK,KAAK0K,aAAatO,EAAS,IAC3B,MAGJ,IAAK,WACD4D,KAAK2K,SAASvO,EAAS,IACvB,MAEJ,IAAK,cACD4D,KAAK4K,YAAYxO,EAAS,IAC1B,MAEJ,IAAK,eACD4D,KAAK6K,YAAYzO,EAAS,GAAI,IAC9B,MAEJ,IAAK,cACD,OAAQA,EAAS,IACb,IAAK,IACD4D,KAAKnJ,KAAK6S,YAAc,EACxB,MAEJ,IAAK,KACD1J,KAAKnJ,KAAK6S,YAAc,GACxB,MAEJ,IAAK,MACD1J,KAAKnJ,KAAK6S,YAAc,GAOhC,MAEJ,IAAK,WACD1J,KAAK+I,WACL,MAEJ,IAAK,kBACD/I,KAAK+J,kBACL,MAEJ,IAAK,ajBrDTxS,EADyCV,EiBuDDmJ,KAAKrG,OAAOkD,UjBrDnD5F,EAAmCJ,KACxCA,EAAKE,YAAYC,OAASP,EAC1BI,EAAKE,YAAYS,aAAaC,UAAW,GiBoD7B,MAEJ,IAAK,ejBnDV,SAA2CZ,GAC1CO,EAAkCP,IACjCK,EAAoCL,KACzCA,EAAKE,YAAYC,OAASN,EAC1BG,EAAKE,YAAYO,kBAAmB,GiBgDxBwT,CAAiC9K,KAAKrG,OAAOkD,SAC7C,MAEJ,IAAK,ajBhDV,SAAuChG,GACtCa,EAA8Bb,IAC7BM,EAAgCN,KACrCA,EAAKE,YAAYC,OAASL,EAC1BE,EAAKE,YAAYY,mBAAoB,GiB6CzBoT,CAA6B/K,KAAKrG,OAAOkD,SACzC,MAEJ,IAAK,oBjBnBV,SAAuChG,GAC1C,IAAImB,EAAoBG,MAAWH,EAAoBG,KAAKtB,GAA5D,CACA,IAAIC,EAAOc,EAA8Bf,GACzCA,EAAKiB,iBAAiBC,mBACtBlB,EAAKE,YAAYqB,UAAYtB,GiBgBjBkU,CAA6BhL,KAAKrG,OAAOkD,SACzC,MAEJ,IAAK,mBjBRV,SAAsChG,GACzC,IAAI4B,EAAiCN,MAAWM,EAAiCN,KAAKtB,GAAtF,CACA,IAAIC,EAAOyB,EAA6B1B,GACxCA,EAAKiB,iBAAiBU,kBACtB3B,EAAKE,YAAYqB,UAAYtB,GiBKjBmU,CAA4BjL,KAAKrG,OAAOkD,SACxC,MAEJ,IAAK,uBjBIV,SAA0ChG,GAC7C,IAAI8B,EAAqCR,MAAWQ,EAAqCR,KAAKtB,GAA9F,CACA,IAAIC,EAAO4B,EAAiC7B,GAC5CA,EAAKiB,iBAAiBQ,sBACtBzB,EAAKE,YAAYqB,UAAYtB,GiBPjBoU,CAAgClL,KAAKrG,OAAOkD,SAC5C,MAEJ,IAAK,4BjBgBV,SAAwChG,GAC3C,IAAIiC,EAAmCX,MAAWW,EAAmCX,KAAKtB,GAA1F,CACA,IAAIC,EAAO8B,EAA+B/B,GAC1CA,EAAKiB,iBAAiBe,oBACtBhC,EAAKE,YAAYqB,UAAYtB,GiBnBjBqU,CAA8BnL,KAAKrG,OAAOkD,SAC1C,MAEJ,IAAK,sBjB4BV,SAAkChG,GACrC,IAAIoC,EAA6Bd,MAAWc,EAA6Bd,KAAKtB,GAA9E,CACA,IAAIC,EAAOiC,EAAyBlC,GACpCA,EAAKiB,iBAAiBkB,cACtBnC,EAAKE,YAAYqB,UAAYtB,GiB/BjBsU,CAAwBpL,KAAKrG,OAAOkD,SACpC,MAEJ,IAAK,ajBwCV,SAAoChG,GACvC,IAAIwC,EAA+BlB,MAAWkB,EAA+BlB,KAAKtB,GAAlF,CACA,IAAIC,EAAOqC,EAA2BtC,GACtCA,EAAKiB,iBAAiBsB,gBACtBvC,EAAKE,YAAYqB,UAAYtB,GiB3CjBuU,CAA0BrL,KAAKrG,OAAOkD,SACtC,MAEJ,IAAK,cjBoDV,SAA4ChG,GAC/C,IAAI2C,EAAuCrB,MAAWqB,EAAuCrB,KAAKtB,GAAlG,CACA,IAAIC,EAAOwC,EAAmCzC,GAC9CA,EAAKiB,iBAAiByB,wBACtB1C,EAAKE,YAAYqB,UAAYtB,GiBvDjBwU,CAAkCtL,KAAKrG,OAAOkD,SAC9C,MAEJ,IAAK,iBACDmD,KAAKrG,OAAOkD,QAAQ0O,WAAW9T,UAAW,EACtCgC,IAAqBuG,KAAKrG,OAAOkD,QAAQ9F,YAAYC,OAASyC,EAAoBuG,KAAKrG,OAAOkD,UAClG,MAEJ,IAAK,aACD,OAAQT,EAAS,IACb,IAAK,QACDoL,GAAgBxH,KAAKrG,OAAOkD,QAASqL,IACrC,MAEJ,IAAK,WACDF,GAAmBhI,KAAKrG,OAAOkD,QAASqL,IACxC,MAEJ,IAAK,YACDV,GAAgBxH,KAAKrG,OAAOkD,QAASuL,IACrC,MAEJ,IAAK,eACDJ,GAAmBhI,KAAKrG,OAAOkD,QAASuL,IACxC,MAEJ,QACIxI,QAAQpF,IAAI,iCAIpB,MAEJ,QACIoF,QAAQpF,IAAI,2BjB7HrB,IAA0C3D,I,mCiBmIhC8I,GACT,IAAI6L,EAAe1L,SAASH,GACxB7I,EAAO0N,GAAqBxE,KAAKrG,OAAOkD,QAAS2O,GAEjDxL,KAAKnJ,KAAKW,aAAasJ,KAAOhK,IAC9BkJ,KAAKnJ,KAAKW,aAAasJ,KAAOhK,EAC9BkJ,KAAKnJ,KAAK4N,iBAAiB+G,Q,+BAK1B7L,GACL,IAAI8L,EAAa3L,SAASH,GACtB7I,EAAO4U,GAAcD,EAAYzL,KAAKrG,OAAOkD,SAE7CmD,KAAKnJ,KAAKG,OAASF,IACnBkJ,KAAKnJ,KAAKG,OAASF,EACnBkJ,KAAKnJ,KAAKQ,OAAOoU,Q,kCAIb9L,GACR,IAAI8L,EAAa3L,SAASH,GACtBwH,EAAUwE,GAAmBF,EAAYzL,KAAKrG,OAAOkD,SACrD/F,EAAO8U,GAAiBH,EAAYzL,KAAKrG,OAAOkD,SAEhDmD,KAAKnJ,KAAKG,OAASF,IACnBkJ,KAAKnJ,KAAKG,OAASF,EACnBkJ,KAAKnJ,KAAKQ,OAAOoU,IAAetE,K,gCAI9BxH,EAAchF,GACpB,IAAI8Q,EAAa3L,SAASH,GACtB7I,EAAO+U,GAAeJ,EAAYzL,KAAKrG,OAAOkD,QAASlC,GAEvDqF,KAAKnJ,KAAKG,OAASF,IACnBkJ,KAAKnJ,KAAKG,OAASF,EACnBkJ,KAAKnJ,KAAKQ,OAAOoU,IAAe9Q,K,kCAI5BgF,EAAchF,GACtB,IAAI8Q,EAAa3L,SAASH,GAEtBmM,EAAUnR,EADEqF,KAAKnJ,KAAKQ,OAAOoU,GAAc9Q,EAG3C7D,EAAO+U,GAAeJ,EAAYzL,KAAKrG,OAAOkD,QAASiP,GAEvD9L,KAAKnJ,KAAKG,OAASF,IACnBkJ,KAAKnJ,KAAKG,OAASF,EACnBkJ,KAAKnJ,KAAKQ,OAAOoU,IAAeK,K,iCAI7BzL,GAIHL,KAAKnJ,KAAK+R,UAAY,GAAG5I,KAAK2I,SAAStI,GAEvCL,KAAKnJ,KAAKW,aAAaqH,YAAc,GAAGmB,KAAK+L,aAAa1L,GAC9DL,KAAKrG,OAAOyH,UAAU4K,sBAAsB3L,GACxCL,KAAKnJ,KAAKuI,UAAY,GAAGY,KAAKsI,eAAejI,GAG7CL,KAAKnJ,KAAKW,aAAagH,UAAY,GAAGwB,KAAKxB,UAAU6B,GACrDL,KAAKnJ,KAAKW,aAAayH,QAAU,GAAGe,KAAKiM,SAAS5L,GAElDL,KAAKrG,OAAOkD,QAAQoB,WAAWC,gBAAkB8B,KAAKnJ,KAAKW,aAAaC,WACxEuI,KAAKrG,OAAOyH,UAAUpD,0BACtBgC,KAAKrG,OAAOyH,UAAUrD,sBACtBiC,KAAKrG,OAAOyH,UAAUtD,0B,+BAKrBuC,GACLL,KAAKnJ,KAAKiE,UAAYoR,GAAsBlM,KAAKrG,OAAOkD,SAAWwD,I,mCAG1DA,GACTL,KAAKnJ,KAAKuI,WAAc+M,GAAyBnM,KAAKrG,OAAOkD,SAAYwD,I,gCAmBnEA,GACN,IAAIkC,EAAOpN,EAAa,EAAGiX,GAA4BpM,KAAKrG,OAAOkD,UAEnEmD,KAAKnJ,KAAKiE,UAAYyH,EAAOlC,I,+BAI7BL,KAAKnJ,KAAKiE,UAAY3F,EAAa,EAAGkX,GAAyBrM,KAAKrG,OAAOkD,Y,oCAI3E,GAAiD,IAA7CmD,KAAKrG,OAAOkD,QAAQ9F,YAAYqB,SAApC,CACA4H,KAAKrG,OAAOkD,QAAQ9F,YAAYqB,WAChC,IAAImK,EAAOpN,EAAa,EAAGmX,GAAiCtM,KAAKrG,OAAOkD,UACxEmD,KAAKnJ,KAAKuI,WAAamD,K,6BAQvB,GAJAvC,KAAKnJ,KAAKG,QACNgJ,KAAKnJ,KAAKc,mBACVqI,KAAK6I,WAEL7I,KAAKnJ,KAAKqE,iBAAiBC,IAAIhB,EAAG,CAClC,IAAIoS,EAAQ,IACZA,GAASA,EAAQvM,KAAKrG,OAAOkD,QAAQiG,SAASoD,WAAW5L,EACzD0F,KAAKwM,aAAaD,GAEtB7H,GAAYS,gBAAgBnF,KAAKrG,OAAOkD,W,mCAQ/B0P,GAAgB,IAAD,OAExBA,GAAgBE,GAAezM,KAAKrG,OAAOkD,SAE3C6P,GAAOzP,SAAQ,SAAC0P,EAAWlB,GACvB,GAAqC,IAAjC,EAAK5U,KAAKQ,OAAOoU,GAArB,CACA,EAAK5U,KAAK+V,YAAYnB,IAAec,EACrC,IAAIM,EAAWC,GAAcrB,GAE7B,GAAI,EAAK5U,KAAK+V,YAAYnB,IAAeoB,EAAU,CAC/C,IAAIrL,EAAQlM,KAAKE,MAAM,EAAKqB,KAAK+V,YAAYnB,GAAcoB,GAC3D,EAAKhW,KAAK+V,YAAYnB,IAAeoB,EAAWrL,EAChD,EAAK3K,KAAKG,OAAS+V,GAAoBtB,EAAY,EAAK9R,OAAOkD,SAAW2E,OAI9ExB,KAAKnJ,KAAKG,MAAQgJ,KAAKnJ,KAAKmW,WAC5BhN,KAAKnJ,KAAKmW,SAAWhN,KAAKnJ,KAAKG,S,iCAK5BuV,GAEP,IA2JkC1V,EA3J9BoW,EAASV,EAAQ,KA2Ja1V,EA3JsBmJ,KAAKrG,OAAOkD,QA4JjEvH,KAAKE,MAAMqB,EAAKE,YAAYC,MAAQ,KAASH,EAAKoT,SAASiD,MA1J9D,OADAD,EAAQ3X,KAAKE,MAAMyX,K,2BA5SnB,OAAOjN,KAAKrG,OAAOkD,QAAQ9F,gB,KAqX5B,SAAS0V,GAAe5V,GAC3B,IAAIsW,EAAO,EAKX,OAHAA,GAAS,GAAKtW,EAAKuK,UAAU3D,WAAWyG,sBACxCiJ,GAAS,GAAKtW,EAAKiM,SAASiD,KAAK3K,EAK9B,SAAS+G,GAAiBtL,GAC7B,IAAIW,EAAeX,EAAKE,YAAYS,aACpC,OAAOhB,EAAYK,EAAKE,YAAYqI,UAAYvI,EAAKE,YAAYmC,aAAe1B,EAAayH,QAAUzH,EAAaqH,YAAcrH,EAAagH,UAG5I,SAAS6N,GAAyBxV,GACrC,OAAOA,EAAKE,YAAYqI,UAGrB,SAAS8M,GAAsBrV,GAClC,IAAI2K,EAAQ3K,EAAKE,YAAYS,aAAayH,QACtCmO,EAAQvW,EAAKE,YAAYS,aAAa2H,aAAe,EAGzD,OAFAqC,GAAgBkD,GAAYC,uBAAuB9N,KACnDuW,GAAgB1I,GAAYO,mBAAmBpO,IAI5C,SAASsV,GAAyBtV,GACrC,IAAI0L,EAAO1L,EAAKE,YAAYS,aAAaqH,aAAe,EAAIhI,EAAKE,YAAYS,aAAauH,kBAC1FwD,GAAQA,EAAO1L,EAAKuK,UAAU3D,WAAWmD,kBACrC/J,EAAKE,YAAYmE,iBAAiBW,IAAIT,IAAGmH,GAAc,GAC3D,IAAIG,EAAOC,GAA+B9L,GACtC+L,EAAmBtN,KAAKD,IAAI,EAAGkN,EAAOG,GAE1C,OADepN,KAAKF,IAAI+M,GAAgBtL,GAAM+L,GAK3C,SAASwJ,GAA4BvV,GACxC,OAAOwV,GAAyBxV,GAAQA,EAAKE,YAAYS,aAAagH,WAAa,EAAI3H,EAAKE,YAAYS,aAAamH,eAGlH,SAAS8J,GAAiC5R,GAC7C,IAAIwW,EAAcC,GAAkCzW,GAAQ0W,GAAwC1W,GAEpG,OAAOvB,KAAKE,MAAM6X,GAKf,SAASC,GAAkCzW,GAC9C,IAEIwW,EAFOxW,EAAKE,YAAYqI,UACT,IACQ,EAAIvI,EAAKiB,iBAAiBe,mBACrD,OAAOvD,KAAKE,MAAM6X,GAGf,SAASG,GAA8B3W,GAC1C,OAAOvB,KAAKE,MAAMF,KAAKkF,IAAI,EAAI3D,EAAKE,YAAYC,QAG7C,SAAS2L,GAA+B9L,GAC3C,IAEIwW,EAFKxW,EAAKE,YAAYmC,aACT,IACY,EAAIrC,EAAKiB,iBAAiBkB,aACvD,OAAO1D,KAAKE,MAAM6X,GAGf,SAASE,GAAwC1W,GACpD,IAEIwW,EAFKxW,EAAKE,YAAYmC,aACT,IACY,EAAIrC,EAAKiB,iBAAiBkB,aAEvD,OADAqU,GAA6B,EAAIxW,EAAKiB,iBAAiBe,kBAChDvD,KAAKE,MAAM6X,GAGf,SAASf,GAAiCzV,GAC7C,IAAI0L,EAAOiL,GAA8B3W,GACrC6L,EAAOC,GAA+B9L,GAC1C,OAAOvB,KAAKD,IAAI,EAAGkN,EAAOG,GAOvB,SAASoG,GAAqBjS,GACjC,IAAIQ,EAASR,EAAKE,YAAYM,OAC1BoW,EAAMpW,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAAKA,EAAO,GAGjE,OAFAoW,GAAa,EAAI5W,EAAKiB,iBAAiBQ,oBACvCmV,GAAOA,EAAM5W,EAAKiM,SAASoD,WAAW9K,EAAI,GAuDvC,SAASwO,KACZ,MAAO,CACH5S,MAAO,EACPkE,iBd3YG,CACHC,IAAK,CAAEC,GAAG,EAAOjB,GAAG,EAAOG,GAAG,GAC9BuB,IAAK,CAAET,GAAG,EAAOjB,GAAG,EAAOG,GAAG,GAC9BoT,MAAO,CAAEtS,GAAG,EAAOjB,GAAG,EAAOG,GAAG,EAAOqT,GAAG,EAAOC,GAAG,IcyYpDZ,SAAU,EACV5N,UAAW,EACXsK,YAAa,EACbxQ,aAAc,EACd7B,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EACjB,EAAG,EAAG,EAAG,EAAG,GAChBuV,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EACtB,EAAG,EAAG,EAAG,EAAG,GAChBnI,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,GAChB8E,KAAM,CACFC,mBAAoB,GAExBpR,SAAU,EACVyR,iBAAkB,EAClBlS,mBAAmB,EACnBiR,UAAW,EACX9N,SAAU,EACVxD,kBAAkB,EAClBE,aAAc,CACVC,UAAU,EACV+K,YAAa,CACTK,MAAO,EACPJ,UAAW,GAEfjE,UAAW,EACXG,cAAe,EACfM,QAAS,EACTE,aAAc,EACdN,YAAa,EACbE,iBAAkB,EAClBN,IAAK,CACDD,UAAW,EACXG,cAAe,EACfM,QAAS,EACTE,aAAc,EACdN,YAAa,EACbE,iBAAkB,GAGtB/D,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE7B8F,IAAK,EACLI,WAAY,EACZD,UAAW,IAevB,IAkFayL,GAAS,CAlFe,CACjCzU,KAAM,cACN4V,YAAa,EACb7T,YAAa,KACb8T,YAAa,EACbC,eAAgB,GAGqB,CACrC9V,KAAM,aACN4V,YAAa,IACb7T,YAAa,KACb8T,YAAa,EACbC,eAAgB,KAGW,CAC3B9V,KAAM,YACN4V,YAAa,IACb7T,YAAa,KACb8T,YAAa,GACbC,eAAgB,MAGiB,CACjC9V,KAAM,aACN4V,YAAa,IACb7T,YAAa,KACb8T,YAAa,GACbC,eAAgB,OAGa,CAC7B9V,KAAM,aACN4V,YAAa,IACb7T,YAAa,KACb8T,YAAa,IACbC,eAAgB,QAIa,CAC7B9V,KAAM,cACN4V,YAAa,KACb7T,YAAa,KACb8T,YAAa,EACbC,eAAgB,KAGa,CAC7B9V,KAAM,kBACN4V,YAAa,KACb7T,YAAa,KACb8T,YAAa,EACbC,eAAgB,MAGa,CAC7B9V,KAAM,eACN4V,YAAa,KACb7T,YAAa,KACb8T,YAAa,GACbC,eAAgB,MAGa,CAC7B9V,KAAM,eACN4V,YAAa,KACb7T,YAAa,KACb8T,YAAa,GACbC,eAAgB,OAGa,CAC7B9V,KAAM,iBACN4V,YAAa,KACb7T,YAAa,KACb8T,YAAa,IACbC,eAAgB,QAOb,SAASrC,GAAcD,EAAoB5U,GAC9C,IAAI8V,EAAYD,GAAOjB,GAEnB3R,EAAQjD,EAAKE,YAAYM,OAAOoU,GAChCuC,EAAYrB,EAAUkB,YACtB7T,EAAc2S,EAAU3S,YAE5B,OAAO1E,KAAKE,MAAMwY,EAAY1Y,KAAKuC,IAAImC,EAAaF,IAQjD,SAASgT,GAAcrB,GAC1B,OAAwC,IAAjCiB,GAAOjB,GAAYqC,YAGvB,SAASf,GAAoBtB,EAAoB5U,GAYpD,OAXUvB,KAAKE,MACXqB,EAAKE,YAAYM,OAAOoU,GACxBiB,GAAOjB,GAAYsC,eACnBE,GAAyBxC,EAAY5U,GACrCqX,GAAcrX,GACdsX,GAAqBtX,GACrByK,GAAczK,GACduX,GAAgBvX,GAChBwX,GAAmB5C,EAAY5U,GAC/ByX,GAAgB7C,EAAY5U,IAK7B,SAASyX,GAAgBzO,EAAchJ,GAC1C,IAAIsW,EAAO,EACP/H,EAAKvO,EAAK+N,WAAWC,QAMzB,OALIO,EAAGmJ,KACmB,UAAlBnJ,EAAGmJ,IAAIxJ,SACPoI,GAAQ/H,EAAGmJ,IAAIvJ,OAGhBmI,EAGJ,SAASkB,GAAmBxO,EAAehJ,GAC9C,IAAIsW,EAAO,EAIX,OAHAA,GAAQqB,GAAgB3X,GACpBA,EAAKE,YAAYmE,iBAAiBC,IAAIb,IAAG6S,GAAetN,EAAQ,GAChEhJ,EAAKE,YAAYmE,iBAAiBW,IAAIvB,IAAG6S,GAAetN,EAAQ,GAC7DsN,EAGJ,SAASqB,GAAgB3X,GAC5B,OAGG,SAAyBA,GAC5B,OAAOA,EAAKuK,UAAU3D,WAAW6G,eAAiBzN,EAAKoT,SAASiD,KAJzDuB,CAAgB5X,GAOpB,SAA0BA,GAC7B,OAAOA,EAAKuK,UAAU3D,WAAW2G,gBAAkBvN,EAAKoT,SAASyE,MARlCC,CAAiB9X,GAW7C,SAASqX,GAAcrX,GAC1B,OAAO+X,GAAe/X,EAAKE,YAAY8S,kBAGpC,SAASuE,GAAgBvX,GAC5B,OAAQA,EAAKE,YAAYwS,KAAKC,mBAAqB,GAAKqF,GAAoChY,GAGzF,SAASgY,GAAqChY,GACjD,OAAOA,EAAKuK,UAAUgC,gBAAkB,EAG5C,SAASwL,GAAexW,GAGpB,IACImJ,EAAOjM,KAAKwZ,KAAK1W,GAAY,EACjC,OAAImJ,EAFW,IAGAjM,KAAKwZ,KAAKxZ,KAAKwZ,KAAK1W,EAAW2W,MAH/B,IAMRxN,EAGJ,SAASyN,GAAmBnY,GAC/B,OAAO+X,GAAe/X,EAAKE,YAAYqB,SAAW6Q,GAAsBpS,IAOrE,SAASsX,GAAqBtX,GACjC,IAIIoY,EAJU3Z,KAAKkF,IAAI3D,EAAKE,YAAY6R,UAAY,IACxC/R,EAAKiB,iBAAiBC,iBAAmB,IACzClB,EAAKuK,UAAU3D,WAAW0G,eAAiB,IAC3CtN,EAAKiM,SAASoD,WAAW/L,EAAI,GAGzC,OADA8U,EAAM3Z,KAAKE,MAAMyZ,IACJ,EAKV,SAASC,GAAerY,EAAegJ,GAC1C,OAAO,IAAO,IAAMhJ,EAAKiB,iBAAiBsB,cAAgBvC,EAAKE,YAAY0N,iBAAiB5E,IAGzF,SAASoO,GAAyBxC,EAAoB5U,GACzD,OAAOvB,KAAKuC,IAAIqX,GAAerY,EAAM4U,GAAanW,KAAKE,MAAMqB,EAAKE,YAAYM,OAAOoU,GAAc,KAGhG,SAASE,GAAmBF,EAAoB5U,GACnD,IAAIsD,EAAIuS,GAAOjB,GAAYoC,YACvBzT,EAAIsS,GAAOjB,GAAYzR,YACvBK,EAAIxD,EAAKE,YAAYM,OAAOoU,GAC5BnR,EAAIzD,EAAKE,YAAYC,MAGrBuD,EADYjF,KAAKkF,IAAI,EAAMF,GAAKF,EAAI,IAAOD,EAAI7E,KAAKuC,IAAIuC,EAAGC,KACnC/E,KAAKkF,IAAIJ,GAGrC,OAFa9E,KAAKE,MAAM+E,GAKrB,SAAS0O,GAAsBpS,GAClC,OAAOvB,KAAKE,MAAMF,KAAKwZ,KAAKxZ,KAAKwZ,KAAKjY,EAAKE,YAAYiW,UAAY,MAGhE,SAASpB,GAAiBH,EAAoB5U,GAIjD,OAAOgV,GAAeJ,EAAY5U,EAF1B8U,GAAmBF,EAAY5U,IAKpC,SAASgV,GAAeJ,EAAoB5U,EAAe8D,GAC9D,IAAIR,EAAIuS,GAAOjB,GAAYoC,YACvBzT,EAAIsS,GAAOjB,GAAYzR,YACvBK,EAAIxD,EAAKE,YAAYM,OAAOoU,GAEhC,OAAOnW,KAAKE,MAAM2E,GAAK7E,KAAKuC,IAAIuC,EAAGC,IAAM/E,KAAKuC,IAAIuC,EAAGO,GAAK,KAAOP,EAAI,IAelE,SAAS+U,GAAiB1D,EAAoB5U,EAAeuY,GAIhE,OATG,SAAuB3D,EAAoB5U,EAAe8D,GAC7D,IAAI7D,EAAO+U,GAAeJ,EAAY5U,EAAM8D,GAC5C,OAAO9D,EAAKE,YAAYC,OAASF,EAO1BuY,CAAc5D,EAAY5U,EAFzBuY,EADAvY,EAAKE,YAAYM,OAAOoU,GACb2D,GAKhB,IAAME,GAAqC,CAC9CrX,KAAM,OACNC,QAAS,gBAGAqX,GAA4C,CACrDtX,KAAM,cACNC,QAAS,uBAYN,SAASsX,GAAqB3Y,GACjC,OAAO,IAAMvB,KAAKuC,IAAI,MAAOhB,EAAKuK,UAAUgC,iBAOzC,IAAMqM,GAAgD,CACzDxX,KAAM,wBACNC,QAAS,0BACTC,KAfJ,SAA6BtB,GACzB,OAAOA,EAAKE,YAAY+D,UAAY0U,GAAqB3Y,IAezDwB,OARJ,SAA8BxB,GAC1B,OAAyD,IAAjDA,EAAKE,YAAYS,aAAawD,YAAY,IAAiD,IAAnCnE,EAAKuK,UAAUgC,kBCx2B9DsM,G,WAEjB,WAAmB/V,GAAiB,IAAD,gCAAhBA,SAAgB,KAQnC+D,MAAQ,WACJ,EAAK/D,OAAOkD,QAAQoN,SA8HjB,CACH0F,IAAK,EACLjB,MAAO,EACPxB,KAAM,EACN0C,WAAY,EACZC,UAAW,EACX3F,WAAY,CACRnE,KAAM,KA9IqB,KAmBnC+J,aAAe,SAACvD,GACZ,EAAK1V,KAAKqT,WAAWnE,MAAQwG,EAGzB,EAAK5S,OAAOkD,QAAQ9F,YAAYmE,iBAAiBC,IAAIC,IACrDmR,GAAgB,GAEhB,EAAK5S,OAAOkD,QAAQiG,SAASiD,KAAK5L,IAClCoS,GAAiB,EAAI,GAAK,EAAK5S,OAAOkD,QAAQiG,SAASiD,KAAK5L,GAIhE,IAAI4V,EAASL,EAASM,WACtB,EAAKnZ,KAAK+Y,YAAcrD,EACpB,EAAK1V,KAAK+Y,YAAcG,IACxB,EAAKlZ,KAAK+Y,YAAcG,EACxB,EAAKE,kBAnCsB,KAuCnCC,gBAAkB,SAACC,GACf,OAAQA,EAAS,IACb,IAAK,UACD,EAAKC,UACL,MAEJ,IAAK,SACD,EAAKC,SACL,MAEJ,QACIzQ,QAAQpF,IAAI,uCAlDW,KAuDnCyV,cAAgB,WACZ,IAAIK,EAAkB,EAAIhb,KAAKE,MAAM,EAAKqB,KAAK+Y,WAAaF,EAASM,YACrE,EAAKnZ,KAAK8Y,MAEN,EAAK9Y,KAAK8Y,IAAMD,EAASa,UACzB,EAAK1Z,KAAK8Y,KAAOD,EAASa,QAC1B,EAAK1Z,KAAK6X,QACN,EAAK7X,KAAK6X,MAAQgB,EAASc,YAC3B,EAAK3Z,KAAK6X,OAASgB,EAASc,UAC5B,EAAK3Z,KAAKqW,SAIlB,EAAKuD,YAAYH,GAEb,EAAKzZ,KAAK+Y,YAAcF,EAASM,YAAY,EAAKU,YAtEvB,KAyEnCA,SAAW,WACP,IAAIX,EAASL,EAASM,WAGlBW,GAFU,EAAK9Z,KAAK+Y,WAELta,KAAKE,MAAM,EAAKqB,KAAK+Y,WAAaG,IACrD,EAAKlZ,KAAK+Y,WAAa,EAAK/Y,KAAK+Y,WAAaF,EAASM,WAEvD,IAAIY,EAAYD,EAAe,EAAK9Z,KAAK8Y,IACzC,EAAK9Y,KAAK8Y,KAAQiB,EAAY,GAAK,GAAM,EAEzC,IAAIC,EAAkBvb,KAAKE,OAAOob,EAAY,GAAK,IAE/CE,EAAc,EAAKja,KAAK6X,MAAQmC,EACpC,EAAKha,KAAK6X,OAAUoC,EAAa,GAAG,GAAI,EAExC,IAAIC,EAAczb,KAAKE,OAAOsb,EAAc,GAAK,IACjD,EAAKja,KAAKqW,MAAS6D,GAzFY,KA+GnCX,QAAU,WACN,EAAKH,iBAhH0B,KAmHnCI,OAAS,WACD,EAAKxZ,KAAK8Y,IAAM,IACpB,EAAK9Y,KAAK8Y,MACV,EAAK9Y,KAAKgZ,c,wDAvBFxP,GAER,IADA,IAAI2Q,EAAQ,EACHzI,EAAI,EAAGA,EAAIlI,EAAO2Q,EAAOzI,IAAK,CACnC,GAAIA,EAAIlI,EACMlL,EAAa,EAAE,KACd6K,KAAKrG,OAAOkD,QAAQiG,SAASiD,KAAKzL,IACzC0W,IACAhR,KAAKrG,OAAOkD,QAAQiG,SAASiD,KAAKE,aAG1CjG,KAAKrG,OAAOsX,QAAQC,WAAW,GAC/BlR,KAAKrG,OAAOkD,QAAQ0O,WAAW4F,SAC/BnR,KAAKrG,OAAOiL,WAAWsM,gB,2BAtG3B,OAAOlR,KAAKrG,OAAOkD,QAAQoN,Y,kCAQ3B,OAAO,S,KAfMyF,GAiBVa,QAAU,GAjBAb,GAkBVc,UAAY,GAmIhB,ICvJcY,G,2MAMjBC,eAAiB,SAACC,GACd,IAAIC,EAASzR,SAASwR,GACtB,EAAKza,KAAKuT,SAAWmH,EACrB,EAAK1a,KAAK2a,QAAU,G,EAGxBC,cAAgB,SAACH,GACb,IAAIC,EAASzR,SAASwR,GACtB,EAAKza,KAAK2a,QAAUD,G,oEAXpB,OAAOvR,KAAKrG,OAAOkD,QAAQsN,Q,GAHEzQ,G,ICChBgY,G,2MAsDjBC,uBAAyB,SAACvV,GACtB,OAAQA,EAAS,IACb,IAAK,OACD,EAAKwV,eACL,MAEJ,IAAK,OACD,EAAKC,eACL,MAEJ,IAAK,SACD,EAAKC,SACL,MAEJ,IAAK,WACD,EAAKC,WACL,MAEJ,IAAK,QACD,EAAKC,YACL,MAEJ,IAAK,OACD,EAAKC,WACL,MAEJ,IAAK,OACD,EAAKC,WACL,MAEA,IAAK,YACL,EAAKC,YACL,MAEJ,IAAK,WACD,EAAKC,WACL,MAEJ,IAAK,WACD,EAAKC,a,EAQjBC,WAAa,WAET,EAAKC,iBACL,EAAKC,cACL,EAAKC,WAEL,EAAKC,aAEL,EAAKC,mB,EAuDTC,qBAAuB,WACnB,EAAKC,eACL,EAAKC,cACL,EAAKC,e,EA6CTrV,MAAQ,WACJ,EAAK/D,OAAOkD,QAAQ+H,WAAWoO,UAAYC,M,2EAlNvCjT,KAAKnJ,KAAKqc,MAAMC,MAAMC,eAA+C,IAA9BpT,KAAKnJ,KAAKwc,kBACrDrT,KAAKnJ,KAAKqc,MAAMC,MAAMG,kBAAoBtT,KAAKnJ,KAAKwc,gBACpDrT,KAAKnJ,KAAKqc,MAAMC,MAAMC,eAAgB,EACtCpT,KAAKnJ,KAAKwc,gBAAkB,K,iCAIxBrT,KAAKnJ,KAAKqc,MAAMK,KAAKH,eAA+C,IAA9BpT,KAAKnJ,KAAKwc,kBACpDrT,KAAKnJ,KAAKqc,MAAMK,KAAKD,kBAAoBtT,KAAKnJ,KAAKwc,gBACnDrT,KAAKnJ,KAAKqc,MAAMK,KAAKH,eAAgB,EACrCpT,KAAKnJ,KAAKwc,gBAAkB,K,iCAIxBrT,KAAKnJ,KAAKqc,MAAMM,KAAKJ,eAA+C,IAA9BpT,KAAKnJ,KAAKwc,kBACpDrT,KAAKnJ,KAAKqc,MAAMM,KAAKF,kBAAoBtT,KAAKnJ,KAAKwc,gBACnDrT,KAAKnJ,KAAKqc,MAAMM,KAAKJ,eAAgB,EACrCpT,KAAKnJ,KAAKwc,gBAAkB,K,kCAI5BrT,KAAKnJ,KAAKqc,MAAMC,MAAMG,kBAAoB,EAC1CtT,KAAKnJ,KAAKqc,MAAMC,MAAMC,eAAgB,I,iCAItCpT,KAAKnJ,KAAKqc,MAAMK,KAAKD,kBAAoB,EACzCtT,KAAKnJ,KAAKqc,MAAMK,KAAKH,eAAgB,I,iCAIrCpT,KAAKnJ,KAAKqc,MAAMM,KAAKF,kBAAoB,EACzCtT,KAAKnJ,KAAKqc,MAAMM,KAAKJ,eAAgB,I,qCAiNtC,IAAmBvc,GA7MoB,KA6MpBA,EA7MLmJ,KAAKrG,OAAOkD,SA8MjB9F,YAAYqI,UAAYvI,EAAK+N,WAAWoO,UAAUS,eA7M1DzT,KAAKnJ,KAAK4c,kB,qCAINzT,KAAKnJ,KAAK4c,cAAgB,IAC1BzT,KAAKnJ,KAAK4c,gBACVzT,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,e,uCAmEhCY,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,UAAYY,KAAKnJ,KAAK4c,gBACtDzT,KAAKnJ,KAAK4c,cAAgBzT,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,a,mCAK1DsU,GAAmB1T,KAAKrG,OAAOkD,SAAWmD,KAAKnJ,KAAKwc,kBACpDrT,KAAKnJ,KAAKwc,gBAAkBK,GAAmB1T,KAAKrG,OAAOkD,Y,iCAK3D6W,GAAmB1T,KAAKrG,OAAOkD,SAAW,IAC1CmD,KAAKmS,YACLnS,KAAKoS,WACLpS,KAAKqS,c,oCAQLrS,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAasJ,IAAM6S,GAAc3T,KAAKrG,OAAOkD,UAC7EmD,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAasJ,IAAM,EACnDd,KAAKrG,OAAOkD,QAAQ9F,YAAYqI,WAAaY,KAAKnJ,KAAK4c,cACvDzT,KAAKnJ,KAAK4c,cAAgB,GAE1BzT,KAAKrG,OAAOkD,QAAQ9F,YAAYS,aAAasJ,KAAO6S,GAAc3T,KAAKrG,OAAOkD,W,+BAKlFmD,KAAKnJ,KAAKwc,gBAAkB/d,KAAKF,IAAIse,GAAmB1T,KAAKrG,OAAOkD,SAAUmD,KAAKnJ,KAAKwc,gBAAkB,K,iCAI1GrT,KAAKnJ,KAAKwc,gBAAkB/d,KAAKD,IAAI,EAAG2K,KAAKnJ,KAAK4c,cAAgB,K,wCAIlE,IAAIP,EAAQlT,KAAKnJ,KAAKqc,MAEtB,CAACA,EAAMC,MAAOD,EAAMK,KAAML,EAAMM,MAAMvW,SAAQ,SAAA2W,GACtCA,EAAKR,gBACLQ,EAAKC,cAAgBD,EAAKN,sBAGlCtT,KAAK4S,yB,gCASCgB,EAAgB/Z,GACtB,IAAIia,EAAOC,GAAiBH,EAAK/Z,GACjC,OAAI+Z,EAAKC,cAAgBC,IACrBF,EAAKC,cAAgBC,EACrBF,EAAKI,iBACE,K,qCAKX,IAAIJ,EAAO5T,KAAKnJ,KAAKqc,MAAMC,MACvBtZ,EAAOoa,GAAUd,MAGVnT,KAAKkU,UAAUN,EAAK/Z,IAE3BmG,KAAKrG,OAAOiL,WAAWuP,QAJjB,QAI8BP,EAAKI,iB,oCAK7C,IAAIJ,EAAO5T,KAAKnJ,KAAKqc,MAAMK,KACvB1Z,EAAOoa,GAAUV,KAGVvT,KAAKkU,UAAUN,EAAK/Z,IAE3BmG,KAAKrG,OAAOiL,WAAWuP,QAJjB,OAI8BP,EAAKI,iB,oCAK7C,IAAIJ,EAAO5T,KAAKnJ,KAAKqc,MAAMM,KACvB3Z,EAAOoa,GAAUT,KAGVxT,KAAKkU,UAAUN,EAAK/Z,IAE3BmG,KAAKrG,OAAOiL,WAAWuP,QAJjB,OAI8BP,EAAKI,iB,2BA7J7C,OAAOhU,KAAKrG,OAAOkD,QAAQ+H,WAAWoO,c,GAnDPtZ,GA0NjC0a,GAAkB,GAEXH,GAAwB,CACjCd,MAAO,CAAEnZ,YAAa,EAAGD,QAAS,KAClCwZ,KAAM,CAAEvZ,YAAa,EAAGD,QAAS,MACjCyZ,KAAM,CAAExZ,YAAa,EAAGD,QAAS,QAe9B,SAASga,GAAkBH,EAAgBS,GAC9C,OAAOza,EAAcya,EAAUT,EAAKI,eASjC,SAASN,GAAoB7c,GAChC,IAAIyd,EAAazd,EAAK+N,WAAWoO,UACjC,OAAOsB,EAAWb,cAAgBa,EAAWpB,MAAMC,MAAMG,kBAAoBgB,EAAWpB,MAAMM,KAAKF,kBAAoBgB,EAAWpB,MAAMK,KAAKD,kBAG1I,SAASK,GAAe9c,GAC3B,IAAIoY,EAAMpY,EAAK+N,WAAWoO,UAAUS,cAAgBW,GAIpD,OAHIvd,EAAKiM,SAASC,OAAOzI,EAAI,IACzB2U,GAAY3Z,KAAKuC,IAAI,IAAKhB,EAAKiM,SAASC,OAAOzI,IAE5ChF,KAAKE,MAAMyZ,GAgCf,SAASgE,KACZ,MAAO,CACHQ,cAAe,EACfJ,gBAAiB,EACjBH,MAAO,CACHC,MAzBD,CACHa,cAAe,EACfH,aAAc,EACdP,kBAAmB,EACnBF,eAAe,GAsBXI,KA1BD,CACHQ,cAAe,EACfH,aAAc,EACdP,kBAAmB,EACnBF,eAAe,GAuBXG,KA3BD,CACHS,cAAe,EACfH,aAAc,EACdP,kBAAmB,EACnBF,eAAe,KA4BhB,SAASmB,GAAmB1d,EAAc2d,GAC7C,OAAQA,GACJ,IAAK,OACD,OAAOT,GAAiBld,EAAK+N,WAAWoO,UAAUE,MAAMC,MAAOc,GAAUd,OAASc,GAAUV,KAAKxZ,QAGrG,IAAK,OACD,OAAOga,GAAiBld,EAAK+N,WAAWoO,UAAUE,MAAMK,KAAMU,GAAUV,MAAQU,GAAUT,KAAKzZ,QAGnG,QACI,OAAO,GAKnB,IAea0a,GAfM,CACflP,IAAK,QACLtN,KAAM,SAaGwc,GAVK,CACdlP,IAAK,OACLtN,KAAM,QAQGwc,GALK,CACdlP,IAAK,OACLtN,KAAM,QCtUWyc,G,2MAOjBC,0BAA4B,SAACvY,GACzB,OAAQA,EAAS,IACb,IAAK,WACD,EAAKkO,UAAUqH,uBAAuBvV,GACtC,MAEJ,IAAK,QACD,EAAKvF,KAAK+d,MAAQ,GAClB,MAEJ,IAAK,OACD,IAAIC,EAAS/U,SAAS1D,EAAS,IAC3B0Y,EAAQ,EAAKje,KAAK+d,MAAMC,GAC5B,EAAKhe,KAAK+d,MAAMG,OAAOF,EAAQ,GAC/B,EAAKhe,KAAKme,MAAQF,EAAM9P,MACxB,MAEJ,IAAK,UACD,EAAKiQ,QAAQnV,SAAS1D,EAAS,KAC/B,MAGJ,IAAK,QACD,IAAIyD,EAAQC,SAAS1D,EAAS,IAE9B,OADW,EAAKvF,KAAK+d,MAAM/U,GACdqV,KACT,KAAK,EACD,EAAKC,aACL,EAAKte,KAAKgO,QAAQ0J,IAAM,EAAK1X,KAAK+d,MAAMG,OAAOlV,EAAO,GAAG,GACzD,MAEJ,KAAK,EACD,EAAKuV,cACL,EAAKve,KAAKgO,QAAQQ,KAAO,EAAKxO,KAAK+d,MAAMG,OAAOlV,EAAO,GAAG,GAC1D,MAEJ,KAAK,EACD,EAAKwV,cACL,EAAKxe,KAAKgO,QAAQuE,KAAO,EAAKvS,KAAK+d,MAAMG,OAAOlV,EAAO,GAAG,GAC1D,MAEJ,KAAK,EACD,EAAKyV,cACL,EAAKze,KAAKgO,QAAQK,KAAO,EAAKrO,KAAK+d,MAAMG,OAAOlV,EAAO,GAAG,GAC1D,MAEJ,KAAK,EACD,EAAK0V,cACL,EAAK1e,KAAKgO,QAAQC,KAAO,EAAKjO,KAAK+d,MAAMG,OAAOlV,EAAO,GAAG,GAOlE,MAEJ,IAAK,UACD,OAAQzD,EAAS,IACb,IAAK,OACD,EAAKgZ,cACL,MAEJ,IAAK,OACD,EAAKC,cAEL,MAEJ,IAAK,MACD,EAAKF,aAEL,MAEJ,IAAK,OACD,EAAKI,cAEL,MAEJ,IAAK,OACD,EAAKD,iB,EAqBzBL,QAAU,SAACpV,GACP,IAAI2V,EAAa,EAAK3e,KAAK+d,MAAM/U,GACjC,KAAI2V,EAAWxQ,OAAS,IAAxB,CAEA,IAAIyQ,EAAoB,GACxB,EAAK5e,KAAK+d,MAAMc,MAAK,SAACC,EAAMC,GACxB,OAAI/V,IAAU+V,IACVJ,EAAWN,MAAQS,EAAKT,KACpBM,EAAWxQ,QAAU2Q,EAAK3Q,OACtBwQ,EAAWzQ,SAAW4Q,EAAK5Q,SAC3B0Q,EAAQI,KAAKD,IACN,OAMnBH,EAAQrf,OAAS,IACjB,EAAKS,KAAK+d,MAAM/U,GAAOmF,QACvB,EAAKnO,KAAK+d,MAAMG,OAAOU,EAAQ,GAAI,M,EAgD3CnL,UAAY,IAAIoH,GAAU,EAAK/X,Q,4EA1E3B,GAAIqG,KAAKnJ,KAAKgO,QAAQ0J,IAAK,CACvB,IAAIuH,EAAS9V,KAAKnJ,KAAKgO,QAAQ0J,IAC/BvO,KAAKnJ,KAAKgO,QAAQ0J,IAAM,KACpBuH,GAAQ9V,KAAKnJ,KAAK+d,MAAMiB,KAAKC,M,oCA6BrC,GAAI9V,KAAKnJ,KAAKgO,QAAQQ,KAAM,CACxB,IAAIyQ,EAAS9V,KAAKnJ,KAAKgO,QAAQQ,KAC/BrF,KAAKnJ,KAAKgO,QAAQQ,KAAO,KACrByQ,GAAQ9V,KAAKnJ,KAAK+d,MAAMiB,KAAKC,M,oCAKrC,GAAI9V,KAAKnJ,KAAKgO,QAAQuE,KAAM,CACxB,IAAI0M,EAAS9V,KAAKnJ,KAAKgO,QAAQuE,KAC/BpJ,KAAKnJ,KAAKgO,QAAQuE,KAAO,KACrB0M,GAAQ9V,KAAKnJ,KAAK+d,MAAMiB,KAAKC,M,oCAKrC,GAAI9V,KAAKnJ,KAAKgO,QAAQK,KAAM,CACxB,IAAI4Q,EAAS9V,KAAKnJ,KAAKgO,QAAQK,KAC/BlF,KAAKnJ,KAAKgO,QAAQK,KAAO,KACrB4Q,GAAQ9V,KAAKnJ,KAAK+d,MAAMiB,KAAKC,M,oCAKrC,GAAI9V,KAAKnJ,KAAKgO,QAAQC,KAAM,CACxB,IAAIgR,EAAS9V,KAAKnJ,KAAKgO,QAAQC,KAC/B9E,KAAKnJ,KAAKgO,QAAQC,KAAO,KACrBgR,GAAQ9V,KAAKnJ,KAAK+d,MAAMiB,KAAKC,M,mCAMrC9V,KAAKsK,UAAUgI,e,8BAGXvN,EAAgBC,GACpBhF,KAAKnJ,KAAKkf,iBACV,IAAIb,EAAM/f,EAAa,EAAG,GAC1B6K,KAAKnJ,KAAK+d,MAAMiB,KAAK,CAAE9Q,SAAQC,QAAOkQ,U,2BAvKtC,OAAOlV,KAAKrG,OAAOkD,QAAQ+H,e,GAJKlL,GAkMjC,SAASsc,GAAqBL,GACjC,MAAO,CACH9e,KAAM8e,EACN1d,KAAK,GAAD,OAAKge,GAAUN,EAAKT,KAApB,eAA+BS,EAAK5Q,QACxCqI,MAAO8I,GAAgBD,GAAUN,EAAKT,MAAMS,IAIpD,IAAMM,GAAsB,CACxB,SACA,MAAO,OAAQ,OAAQ,OAAQ,QAG7BC,GAA+B,CACjCC,OAAQ,iBAAM,SACdC,IAOJ,SAAkBT,GACd,OAAQA,EAAK5Q,QACT,IAAK,QACD,MAAM,IAAN,OAAW4Q,EAAK3Q,MAAhB,sBAGJ,IAAK,OAKL,IAAK,OACD,MAAM,mCAIV,QACI,MAAO,0BAvBfqR,KA4BJ,SAAmBV,GACf,OAAQA,EAAK5Q,QACT,IAAK,QACD,MAAM,iBAAN,OAAwB4Q,EAAK3Q,MAA7B,cAGJ,IAAK,OAKL,IAAK,OACD,MAAM,mCAIV,QACI,MAAO,2BA5CfsR,KAqEJ,SAAmBX,GACf,OAAQA,EAAK5Q,QACT,IAAK,QACD,MAAM,UAAN,OAAiB4Q,EAAK3Q,MAAtB,kCAGJ,IAAK,OAIL,IAAK,OACD,MAAM,mCAGV,QACI,MAAO,2BAnFfuR,KAwFJ,SAAmBZ,GACf,OAAQA,EAAK5Q,QACT,IAAK,QACD,MAAM,IAAN,OAAW4Q,EAAK3Q,MAAhB,iCAGJ,IAAK,OAIL,IAAK,OACD,MAAM,mCAGV,QACI,MAAO,2BAtGfwR,KA+CJ,SAAmBb,GACf,OAAQA,EAAK5Q,QACT,IAAK,QACD,MAAM,IAAN,OAAW4Q,EAAK3Q,MAAhB,6BAGJ,IAAK,OAIL,IAAK,OACD,MAAM,mCAGV,QACI,MAAO,2B,2kBCnOZ,SAASyR,KACZ,MAAO,CACHhf,UAAU,EACVif,KAAM,CACFC,OAAQ,EACRC,KAAM,EACNC,QAnCD,CACHC,cAAe,EACfC,cAAe,EACfC,eAAgB,GAiCZC,IArDD,CACHL,KAAM,EACNM,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,QAAQ,EACRC,YAAa,IAiDbC,YAAa,CACTC,iBAAkB,EAClBX,QAxCD,CACHC,cAAe,EACfC,cAAe,EACfC,eAAgB,GAsCZC,IA1DD,CACHL,KAAM,EACNM,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,QAAQ,EACRC,YAAa,IAsDbG,WAAY,CACRC,iBAAkB,EAClBC,cAAe,EACfd,QA9CD,CACHC,cAAe,EACfC,cAAe,EACfC,eAAgB,GA4CZC,IAAI,GAAD,GAhEJ,CACHL,KAAM,EACNM,UAAW,EACXC,UAAW,EACXC,YAAa,EACbC,QAAQ,EACRC,YAAa,GA0DN,CAAqBM,QAAS,KAGrCzG,OAAQ,G,IC1EK0G,G,YACjB,WAAmBle,GAAiB,IAAD,8BAC/B,4CAAMA,KADSA,SAAgB,E,wEAIvBwW,GAGR,OAFAvQ,QAAQpF,IAAI2V,GAEJA,EAAS,IACb,IAAK,UACDnQ,KAAKnJ,KAAKoB,KAAOkY,EAAS,GAC1BnQ,KAAKnJ,KAAKihB,QAAUC,KAAKC,MACF,SAAnBhY,KAAKnJ,KAAKoB,MACV+H,KAAKrG,OAAOsX,QAAQlH,kBAExB,MAEJ,IAAK,YACD/J,KAAKnJ,KAAKoB,KAAO,GACjB+H,KAAKnJ,KAAKihB,QAAU,K,2BAQ5B,OAAO9X,KAAKrG,OAAOkD,QAAQob,Y,GA3BMve,GCmClC,SAASwe,KA4BZ,MA3BmB,CACfC,QAAS,CACLC,WAAW,EACXC,UAAW,GAEfC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,KAAMX,KAAKC,MACXW,GAAI,CACAC,YAAa,IACbC,WAAY,KAEhB9hB,YPqeG,CACHC,MAAO,EACPkE,iBd3YG,CACHC,IAAK,CAAEC,GAAG,EAAOjB,GAAG,EAAOG,GAAG,GAC9BuB,IAAK,CAAET,GAAG,EAAOjB,GAAG,EAAOG,GAAG,GAC9BoT,MAAO,CAAEtS,GAAG,EAAOjB,GAAG,EAAOG,GAAG,EAAOqT,GAAG,EAAOC,GAAG,IcyYpDZ,SAAU,EACV5N,UAAW,EACXsK,YAAa,EACbxQ,aAAc,EACd7B,OAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EACjB,EAAG,EAAG,EAAG,EAAG,GAChBuV,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EACtB,EAAG,EAAG,EAAG,EAAG,GAChBnI,iBAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,GAChB8E,KAAM,CACFC,mBAAoB,GAExBpR,SAAU,EACVyR,iBAAkB,EAClBlS,mBAAmB,EACnBiR,UAAW,EACX9N,SAAU,EACVxD,kBAAkB,EAClBE,aAAc,CACVC,UAAU,EACV+K,YAAa,CACTK,MAAO,EACPJ,UAAW,GAEfjE,UAAW,EACXG,cAAe,EACfM,QAAS,EACTE,aAAc,EACdN,YAAa,EACbE,iBAAkB,EAClBN,IAAK,CACDD,UAAW,EACXG,cAAe,EACfM,QAAS,EACTE,aAAc,EACdN,YAAa,EACbE,iBAAkB,GAGtB/D,YAAa,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAE7B8F,IAAK,EACLI,WAAY,EACZD,UAAW,IOnhBfgJ,SNwFG,CACH0F,IAAK,EACLjB,MAAO,EACPxB,KAAM,EACN0C,WAAY,EACZC,UAAW,EACX3F,WAAY,CACRnE,KAAM,IM9FVoE,IL3BG,CACHC,SAAU,EACVoH,QAAS,GK0BT1Z,iBxBqIG,CACHC,iBAAkB,EAClBS,gBAAiB,EACjBF,oBAAqB,EACrBO,kBAAmB,EACnBG,YAAa,EACbI,cAAe,EACfG,sBAAuB,GwB3IvB6H,UpBgOG,CACH0X,sBAAsB,EACtBzX,oBAAoB,EACpB+B,gBAAiB,EACjB3F,WAeG,CACHC,OAAO,EACPkD,kBAAmB,EACnBuD,eAAgB,EAChBE,cAAe,EACfH,sBAAuB,EACvBE,gBAAiB,EACjBE,eAAgB,IoBzPhBM,WHkSG,CACHC,QAAS,CACLC,KAAM,KACNO,KAAM,KACNkJ,IAAK,KACLrJ,KAAM,KACNkE,KAAM,MAEVwL,MAAO,GACPI,KAAM,EACNe,eAAgB,EAChB/C,UDhEG,CACHS,cAAe,EACfJ,gBAAiB,EACjBH,MAAO,CACHC,MAzBD,CACHa,cAAe,EACfH,aAAc,EACdP,kBAAmB,EACnBF,eAAe,GAsBXI,KA1BD,CACHQ,cAAe,EACfH,aAAc,EACdP,kBAAmB,EACnBF,eAAe,GAuBXG,KA3BD,CACHS,cAAe,EACfH,aAAc,EACdP,kBAAmB,EACnBF,eAAe,MI3Nf7H,WAAYkL,KACZwB,QDlBG,CACHhgB,KAAM,GAAI6f,QAAS,GCkBnB7Z,WAAY,CACRC,gBAAgB,GAEpB4E,SVGG,CACHrL,UAAU,EACVsO,KPkCG,CACH3K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,EACf2L,UAAW,GOnCXC,WN+BG,CACH9K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GM/BfyI,OLiCG,CACH3H,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GKhCf6L,WJ+BG,CACH/K,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GI/Bf8L,aH6BG,CACHhL,EAAG,EAAGjB,EAAG,EAAGG,EAAG,GG7Bf+L,MF4BG,CACHjL,EAAG,EAAGjB,EAAG,EAAGG,EAAG,K,wBarGOye,GAK1B,WAAmBC,GAAsB,IAAD,gCAArBA,SAAqB,KAHxCnc,QAAmBqb,KAGqB,KAFxCe,UAAmCC,EAEK,KAKxCC,MAAQ,WACC,EAAKF,OACN,EAAKA,KAAOG,YAAY,EAAKC,KAAM,OAPH,KAWxCC,KAAO,WACC,EAAKL,OACLM,aAAa,EAAKN,MAClB,EAAKA,UAAOC,IAdoB,KAkBxC3P,KAAM,WACF,IAAI1M,EAAU2c,KAAKC,UAAU,EAAK5c,SAClC6c,aAAaC,QAAQ,UAAW9c,IApBI,KAuBxC+c,KAAM,WACF,EAAKC,YACL,EAAKb,UAzB+B,KA4BxCtb,MAAQ,WACJ,EAAKb,QAAUqb,KACf,EAAKc,UA9B+B,KAiCxCa,UAAY,WACR,IAAIC,EAAUJ,aAAavF,QAAQ,WACnC,GAAe,MAAX2F,EAAgB,CAChB,IAAIC,EAASP,KAAKQ,MAAMF,GACxB,EAAKjd,QAAUqb,KACf+B,SAAQ,EAAKpd,QAASkd,KAtCU,KA0CxCV,KAAO,WAEH,IAAIa,EAASnC,KAAKC,MAEdzL,EAAQ2N,EADC,EAAKrd,QAAQ6b,KAG1B,EAAK7b,QAAQ6b,KAAOwB,EAEpB,EAAKpK,aAAavD,GAClB,EAAKyM,UAlDLhZ,KAAKnD,QAAQ6b,KAAOX,KAAKC,MACzBhY,KAAKmZ,SCHQgB,G,YAEjB,WAAYxgB,GAAiB,IAAD,8BACxB,4CAAMA,KAYVygB,sBAAwB,SAAChe,GACrB,OAAQA,EAAS,IACb,IAAK,cACD,EAAKvF,KAAKsa,QAAUkJ,GAAuB,EAAK1gB,OAAOkD,SACvD,EAAKhG,KAAK6f,KAAKC,OAAS2D,GAAsB,EAAKzjB,KAAK6f,KAAKC,QAC7D,MAEJ,IAAK,YACD,EAAKhd,OAAOkD,QAAQ9F,YAAYS,aAAasJ,KAAOyZ,GAAqB,EAAK5gB,OAAOkD,SACrF,EAAKhG,KAAK6f,KAAKE,KAAO4D,GAAoB,EAAK3jB,KAAK6f,KAAKE,MACzD,MAEJ,IAAK,gBACD,EAAK/f,KAAKsa,QAAUsJ,GAAyB,EAAK9gB,OAAOkD,SACzD,EAAKhG,KAAK0gB,YAAYC,iBAAmBkD,GAAwB,EAAK7jB,KAAK0gB,YAAYC,kBACvF,MAEJ,IAAK,eACG,EAAK7d,OAAOkD,QAAQ9F,YAAYS,aAAasJ,KAAO6Z,GAAuB,EAAKhhB,OAAOkD,SACvF,EAAKhG,KAAK4gB,WAAWC,iBAAmBkD,GAAsB,EAAK/jB,KAAK4gB,WAAWC,kBACnF,MAER,IAAK,YACD,EAAKmD,YACL,MAEJ,IAAK,WACD,EAAKC,WACL,MAEJ,IAAK,aACD,EAAKC,aAMb,EAAKC,mBAlDmB,EAqD5BF,SAAW,WACP,IAAIpE,EAAO,EAAK7f,KAAK6f,KAErBA,EAAKO,IAAM,CACPI,QAAQ,EACRH,UAAWR,EAAKC,OAChBQ,UAAW,EACXG,YAAa,EACbF,YAAa,EACbR,KAAMF,EAAKE,MAEfF,EAAKC,OAAS,GAhEU,EAmE5BkE,UAAY,WACR,IAAInE,EAAO,EAAK7f,KAAK6f,KAErB,EAAK7f,KAAK0gB,YAAYN,IAAM,CACxBI,QAAQ,EACRH,UAAWR,EAAKC,OAChBQ,UAAW,EAAKtgB,KAAK0gB,YAAYC,iBACjCF,YAAa,EACbF,YAAa,EACbR,KAAMF,EAAKE,MAGfF,EAAKC,OAAS,EACd,EAAK9f,KAAK0gB,YAAYC,iBAAmB,GAhFjB,EAiH5B1H,aAAe,SAACvD,IACsB,IAA9B,EAAK1V,KAAK6f,KAAKO,IAAII,QAAiB,EAAK4D,QAAQ1O,EAAQhW,IACpB,IAArC,EAAKM,KAAK0gB,YAAYN,IAAII,QAAiB,EAAK6D,cAAc3O,EAAQhW,IAClC,IAApC,EAAKM,KAAK4gB,WAAWR,IAAII,QAAiB,EAAK8D,gBAAgB5O,EAAQhW,IApHnD,EAuJ5B0kB,QAAU,SAACG,GAGP,IAAI1E,EAAO,EAAK7f,KAAK6f,KACJ,EAAK2E,gBAAgB3E,EAAKO,IAAKmE,KAG5C1E,EAAKO,IAAII,QAAS,EAClB,EAAKiE,eA/Je,EAqK5BJ,cAAgB,SAACE,GAEb,IAAI1E,EAAO,EAAK7f,KAAK0gB,YACJ,EAAK8D,gBAAgB3E,EAAKO,IAAKmE,KAG5C1E,EAAKO,IAAII,QAAS,EAClB,EAAKkE,sBA1KT,EAAKP,kBAFmB,E,qEAUxBhb,KAAKrG,OAAOkD,QAAQ0O,WAAakL,O,mCA4EjC,IAAIC,EAAO1W,KAAKnJ,KAAK6f,KACjBa,EAAcvX,KAAKnJ,KAAK0gB,YAE5BvX,KAAKnJ,KAAK4gB,WAAWR,IAAM,CACvBI,QAAQ,EACRH,UAAWR,EAAKC,OAChBiB,QAAS5X,KAAKnJ,KAAK4gB,WAAWC,iBAAmB,EACjDP,UAAWI,EAAYC,iBACvBF,YAAa,EACbF,YAAa,EACbR,KAAMF,EAAKE,MAGfF,EAAKC,OAAS,EACd3W,KAAKnJ,KAAK0gB,YAAYC,iBAAmB,EACzCxX,KAAKnJ,KAAK4gB,WAAWC,iBAAmB,I,wCAIxC,IA2Q6Bf,EA3QzBI,GA2QyBJ,EA3QY3W,KAAKnJ,KAAK6f,KAAKC,OA4QjD6E,GAAUC,GAAkB9E,IA3Q/BG,EAAgB2E,GAAkBzb,KAAKnJ,KAAK6f,KAAKC,QAErD3W,KAAKnJ,KAAK6f,KAAKG,QAAQC,cAAgBA,EACvC9W,KAAKnJ,KAAK6f,KAAKG,QAAQE,cAAgBA,EACvC/W,KAAKnJ,KAAK6f,KAAKG,QAAQG,eAAiB0E,GAAmB3E,EAAe/W,KAAKnJ,KAAK6f,KAAKE,Q,+BASnF+E,EAAchF,EAAgBiF,EAAsBR,GAC1D,IACIS,EAASC,EAASC,EADlBC,EAiQL,SAA6BC,EAAqBL,EAAsBR,GAE3E,OADQa,EAAcb,EAAU,GAAKQ,EAAeR,EAAUA,EAlQlCc,CAAoBP,EAAMH,GAASJ,GAe3D,OAZIY,EAAoBrF,EAAS,GAE7BkF,EAAUT,EACVU,EAAUE,EACVD,EA+PL,SAA+BE,EAAqBL,EAAsBR,GAE7E,OADSa,EAAcL,EAAeR,EAhQzBe,CAAsBR,EAAMC,EAAcR,KAK/CS,EAwQL,SAA+BO,EAAaC,EAAaC,GAC5D,IAAIC,EAAI,EAAID,GAAYF,EAAMC,GAC9B,OAAO/mB,KAAKM,IAAI2mB,GA1QEC,CAAsBb,EAFhCI,EAiQL,SAA+BE,EAAqBL,EAAsBU,GAE7E,IAAIG,GAAUR,EAAc,GAAK3mB,KAAKM,IAAIqmB,EAAc,IAAOA,EAAcA,GAAe,EAAIL,EAAeU,EAC3GP,EAAKzmB,KAAKwZ,KAAKxZ,KAAKM,IAAI6mB,IAE5B,OAAIA,EAAQ,GAAWV,EACXA,EAvQCW,CAAsBf,EAAMH,GAAS7E,GAEAA,GAC1CmF,GAAWnF,GAER,CAACkF,UAASC,UAASC,Q,sCAGd9E,EAAcmE,GAC1B,IAAIuB,EAAM1F,EAAIE,UACVyF,EAAI3F,EAAIC,UAF8B,EAKblX,KAAK6c,SAASF,EAAIC,EAAEpB,GAAQJ,GAApDS,EALqC,EAKrCA,QAASC,EAL4B,EAK5BA,QAASC,EALmB,EAKnBA,GAKvB,OAHA9E,EAAIK,aAAeuE,EACnB5E,EAAIC,WAAa4E,EACjB7E,EAAIE,UAAY4E,EACT9E,EAAIC,WAAa,I,sCA8BXkE,GACb,IAkOmBxE,EAAczF,EAlO7B2L,EAAgB9c,KAAKnJ,KAAK4gB,WAAWR,IAAIK,YACzCZ,EAAO1W,KAAKnJ,KAAK4gB,WAGrB,GAFiBzX,KAAKqb,gBAAgB3E,EAAKO,IAAKmE,GAI5C,GADA1E,EAAKO,IAAIW,UACLlB,EAAKO,IAAIW,QAAU,EACnBlB,EAAKO,IAAII,QAAS,EAClBrX,KAAK+c,wBACF,CACH,IAAIC,EAAgBhd,KAAK+c,oBACzBrG,EAAKO,IAAIE,WAuNEP,EAvNoBF,EAAKO,IAAIL,KAuNfzF,EAvNqB6L,EAwN3C1nB,KAAKwZ,KAAM,EAAIqC,EAASyF,IAvN3B5W,KAAKmb,gBAAgBC,GAAW0B,EAAe9c,KAAKnJ,KAAK4gB,WAAWR,IAAIK,iB,+BAMhF,IAAI2F,EAAevB,GAAmB1b,KAAKnJ,KAAK6f,KAAKO,IAAIE,UAAWnX,KAAKnJ,KAAK6f,KAAKE,MACnF5W,KAAKnJ,KAAK6f,KAAKO,IAAIG,YAAc6F,EACjCjd,KAAKnJ,KAAKsa,QAAU7b,KAAKE,MAAMynB,K,mCAI/B,IAAIA,EAAevB,GAAmB1b,KAAKnJ,KAAK6f,KAAKO,IAAIE,UAAWnX,KAAKnJ,KAAK6f,KAAKE,MACnF5W,KAAKnJ,KAAK6f,KAAKO,IAAIG,YAAc6F,EACjCjd,KAAKnJ,KAAKsa,QAAU7b,KAAKE,MAAMynB,K,0CAI/B,IAAIA,EAAevB,GAAmB1b,KAAKnJ,KAAK0gB,YAAYN,IAAIE,UAAWnX,KAAKnJ,KAAK6f,KAAKE,MAC1F5W,KAAKnJ,KAAK0gB,YAAYN,IAAIG,YAAc6F,EACxCjd,KAAKnJ,KAAKsa,QAAU7b,KAAKE,MAAOynB,K,0CAIhC,IAAIA,EAAevB,GAAmB1b,KAAKnJ,KAAK4gB,WAAWR,IAAIE,UAAWnX,KAAKnJ,KAAK6f,KAAKE,MAGzF,OAFA5W,KAAKnJ,KAAK4gB,WAAWR,IAAIG,aAAe6F,EACxCjd,KAAKnJ,KAAKsa,QAAU7b,KAAKE,MAAOynB,GACR,GAAhBA,I,2BApNR,OAAOjd,KAAKrG,OAAOkD,QAAQ0O,e,GARC7R,GAqO7B,SAAS4gB,GAAsB3D,GAClC,OAAO,EAAIA,EAGR,SAAS0D,GAAuBxjB,GACnC,OAAOvB,KAAKE,OAA2BqB,EAAK0U,WAAWmL,KAAKE,KAAM,EAmL1C4E,IA5KrB,SAAShB,GAAoB5D,GAChC,OAAO,EAAIA,EAGR,SAAS2D,GAAqB1jB,GACjC,OAAOA,EAAK0U,WAAWmL,KAAKE,KAAO/f,EAAK0U,WAAWmL,KAAKE,KAAO,EAO5D,SAAS8D,GAAwBwC,GACpC,OAAO,EAAIA,EAGR,SAASzC,GAAyB5jB,GAErC,IAAIqmB,EAAWrmB,EAAK0U,WAAWgM,YAAYC,iBACvC2F,EAAOzC,GAAwBwC,GAC/BE,EAAQ,GAAKvmB,EAAK0U,WAAWmL,KAAKE,KAAOsG,EAAWA,EAGxD,MAFY,GAAKrmB,EAAK0U,WAAWmL,KAAKE,KAAOuG,EAAOA,EAEvCC,EAOV,SAASxC,GAAsByC,GAClC,OAAO,EAAIA,EAGR,SAAS1C,GAAuB9jB,GACnC,OAAOvB,KAAKuC,IAAI,GAAIhB,EAAK0U,WAAWkM,WAAWC,iBAAiB,GAS7D,IAAM4F,GAAwC,CACjDrlB,KAAM,iBAAM,aACZC,QAAS,iBAAM,sBACfqD,OAAQ,SAAC1E,GAAD,gBAAaA,EAAK0U,WAAWmL,KAAKC,OAAlC,eAA+C2D,GAAsBzjB,EAAK0U,WAAWmL,KAAKC,UAClGxe,KApDG,SAAgCtB,GACnC,OAAOwjB,GAAuBxjB,IAASA,EAAK0U,WAAW4F,QAAUta,EAAK0U,WAAWmL,KAAKE,KAAO,GAoD7F9f,KAAMujB,GACN/e,SAAU,KAYDiiB,GAA0C,CACnDtlB,KAAM,iBAAM,kCACZC,QAAS,iBAAM,wBACfqD,OAAQ,SAAC1E,GAAD,gBAAaA,EAAK0U,WAAWgM,YAAYC,iBAAzC,eAAgEkD,GAAwB7jB,EAAK0U,WAAWgM,YAAYC,oBAC5Hrf,KAxCG,SAAkCtB,GACrC,OAAO4jB,GAAyB5jB,IAASA,EAAK0U,WAAW4F,QAwCzDra,KAAM2jB,GACNnf,SAAU,IACVjD,OAAQ,SAACxB,GAAD,OAAwC,IAA9BA,EAAK0U,WAAWmL,KAAKE,MAA8C,IAAhC/f,EAAK0U,WAAWmL,KAAKC,SAGjE6G,GAAyC,CAClDvlB,KAAM,iBAAM,WACZC,QAAS,iBAAM,uBACfqD,OAAQ,SAAC1E,GAAD,gBAAaA,EAAK0U,WAAWkM,WAAWC,iBAAxC,eAA+DkD,GAAsB/jB,EAAK0U,WAAWkM,WAAWC,oBACxHvf,KAtCG,SAAgCtB,GACnC,OAAO8jB,GAAuB9jB,IAASA,EAAKE,YAAYS,aAAasJ,KAsCrEhK,KAAM6jB,GACNtiB,OAAQ,SAACxB,GAAD,OAA2D,IAAjDA,EAAK0U,WAAWgM,YAAYC,kBAC9Clc,SAAU,OAGDmiB,GAAkC,CAC3CxlB,KAAM,iBAAM,aACZC,QAAS,iBAAM,mBACfC,KAAM,SAACtB,GAAD,OAA8C,IAApCA,EAAK0U,WAAWmL,KAAKO,IAAII,QAAoBxgB,EAAK0U,WAAWmL,KAAKC,OAAS,IAGlF+G,GAAmC,CAC5CzlB,KAAM,iBAAM,cACZC,QAAS,iBAAM,oBACfC,KAAM,SAACtB,GAAD,OAAqD,IAA3CA,EAAK0U,WAAWgM,YAAYN,IAAII,QAChDhf,OAAQ,SAACxB,GAAD,OAA2D,IAAjDA,EAAK0U,WAAWgM,YAAYC,mBAGrCmG,GAAoC,CAC7C1lB,KAAM,iBAAM,eACZC,QAAS,iBAAM,qBACfC,KAAM,SAACtB,GAAD,OAAoD,IAA1CA,EAAK0U,WAAWkM,WAAWR,IAAII,QAC/Chf,OAAQ,SAACxB,GAAD,OAA0D,IAAhDA,EAAK0U,WAAWkM,WAAWC,mBAyB3C8D,IAAW,IAEV,SAASC,GAAkB9E,GAI9B,OAFWrhB,KAAKwZ,KAAK,EAAI6H,GAAU6E,IAkChC,SAASE,GAAmBkC,EAAWC,GAC1C,MAAO,GAAKA,EAAOD,EAAIA,E,IC9YNE,G,2MAEjBhO,aAAe,SAACvD,GACZ,EAAKlC,OAAOyF,aAAavD,GAMzB,EAAK0E,QAAQzE,aAAaD,GAE1B,EAAKtC,SAAS6F,aAAavD,GAC3B,EAAKwR,SACL,EAAKC,e,EAoBTC,eAAiB,SAAC/lB,GACd,IAAIiY,EAAWjY,EAAQiF,MAAM,KAG7B,OAAQgT,EAAS,IACb,IAAK,MACD,EAAKL,aAAa,MAClB,MAEJ,IAAK,UACD,EAAKmB,QAAQf,gBAAgBC,GAC7B,MAEJ,IAAK,WACD,EAAKlG,SAASiG,gBAAgBC,GAC9B,MAEJ,IAAK,YblCV,SAA2BtZ,EAAesZ,GAE7C,OAAQA,EAAS,IACb,IAAK,SACDtZ,EAAKE,YAAYS,aAAasJ,KAAO8F,GACrC/P,EAAKiM,SAASrL,UAAW,EACzB,MAEJ,KAAK6O,GAAkBf,IACnBe,GAAkBd,GAAG3O,EAAMsZ,EAAS,IACpC,MAEJ,KAAK5J,GAAwBhB,IACzBgB,GAAwBf,GAAG3O,EAAMsZ,EAAS,IAC1C,MAEJ,KAAK3J,GAAoBjB,IACrBiB,GAAoBhB,GAAG3O,EAAMsZ,EAAS,KakBlC+N,CAAkB,EAAKrhB,QAASsT,GAChC,MAEJ,IAAK,OACD,EAAK5G,OACL,MAEJ,IAAK,OACD,EAAKqQ,OACL,MAEJ,IAAK,SACD,EAAKuE,OAAOhO,EAAS,IACrB,MAEJ,IAAK,SACD,EAAKiO,SACL,MAEJ,IAAK,MACmB,SAAhBjO,EAAS,GACT,EAAKhG,IAAIkH,eAAelB,EAAS,IACV,QAAhBA,EAAS,IAChB,EAAKhG,IAAIsH,cAActB,EAAS,IAEpC,MAEJ,IAAK,YACD,EAAK/O,UAAUjF,yBAAyBgU,GACxC,MAEJ,IAAK,SACD,EAAK9F,OAAO+P,sBAAsBjK,GAClC,MACJ,IAAK,WACD,EAAKkO,UAAUlO,EAAS,IACxB,MAEJ,IAAK,MACD,EAAKmO,IAAIC,WAAWpO,GACpB,MAEJ,IAAK,aACD,EAAKvL,WAAW+P,0BAA0BxE,GAC1C,MAEJ,QACIvQ,QAAQpF,IAAI,8BAKpB,EAAKwe,U,EAGTqF,UAAY,SAAC9Y,GACT,OAAQA,GACJ,IAAK,IACD,EAAK0L,QAAQ1G,OACb,MAEJ,IAAK,IACD,IAAK,IAAI1K,EAAQ,EAAGA,EAAQ,GAAIA,IAC5B,EAAKoR,QAAQrG,YAAY/K,EAAMhK,YAEnC,MAEJ,IAAK,IACD,EAAKob,QAAQlI,a,EAQzB6Q,KAAO,WACH,EAAKC,YACL,EAAK2E,aAAazG,KAAKC,MAAM,EAAKnb,QAAQ6b,MAC1C,EAAKM,U,EAGTmF,OAAS,SAACM,GACN,IAAIC,EAASC,EAAQ,IAIjBC,EADWH,EAAUthB,MAAM,KACP0hB,KAAI,SAAAC,GAAK,OAAEhf,SAASgf,MACxCC,EAAaC,WAAWC,GAAX,MAAAD,WAAU,YAAOJ,IAsB9B9E,GAZS4E,EAAOQ,WAAWT,GAGnBC,EAAOS,WAAWJ,IAU9B,GAAe,MAAXjF,EAAgB,CAChB,IAAIC,EAASP,KAAKQ,MAAMF,GACxB,EAAKjd,QAAUqb,KACf+B,KAAEmF,MAAM,EAAKviB,QAASkd,K,EAK9BqE,OAAS,WACL,IAAIiB,EAAa7F,KAAKC,UAAU,EAAK5c,SAEjCyiB,EADSX,EAAQ,IACDY,SAASF,IAO7B,SAAkBG,EAAkBC,GAChC,IAAIC,EAAUC,SAASC,cAAc,KACrCF,EAAQG,aAAa,OAAQ,iCAAmCC,mBAAmBL,IACnFC,EAAQG,aAAa,WAAYL,GAEjCE,EAAQK,MAAMC,QAAU,OACxBL,SAASM,KAAKC,YAAYR,GAE1BA,EAAQS,QAERR,SAASM,KAAKG,YAAYV,GAZ9BW,CAAS,kBAAD,OAAmBtI,KAAKC,MAAxB,QAAoCsH,I,EAiBhDrO,QAAU,IAAI5I,GAAJ,gB,EACV4B,SAAW,IAAIyF,GAAJ,gB,EACXvF,IAAM,IAAIiH,GAAJ,gB,EACNhQ,UAAY,IAAIlF,GAAJ,gB,EACZmO,OAAS,IAAI8P,GAAJ,gB,EACTmE,IAAM,IAAIzG,GAAJ,gB,EACNjT,WAAa,IAAI8P,GAAJ,gB,wEAtLL1U,KAAKnD,QAAQ9F,YAAYC,MADV,QAC6BgJ,KAAKnD,QAAQ9F,YAAYC,MADtD,S,mCAMTuV,GACVvM,KAAKnD,QAAQsb,QAAU,CAACC,WAAW,EAAKC,UAAW9L,GACnDvM,KAAKgZ,W,oCAILhZ,KAAKnD,QAAQsb,QAAQC,WAAY,M,GA9BLW,ICCrBuH,GALEC,gBAAoC,CACnD1pB,KAAMqhB,KACNsI,cAAe,SAACC,O,gBCSlB,YAEE,WAAYC,GAA6C,IAAD,8BACtD,4CAAMA,KAkBRC,MAAO,WAEL,IAAIhK,EAASiK,OAAOhI,YAEhBiI,EAAuB,GACvBC,EAA0B,GAI9B,GAFYC,IAASC,YAAT,gBAED,CAGT,IAAIC,EAAWF,IAASC,YAAT,gBAAuCE,cAEtD,GAAID,EAAQ,CAGV,IAAIE,GADJF,EAASA,GACiBG,wBAWtBD,EAAaL,OAASnK,EAAS,GACjCmK,EAASnK,EAASwK,EAAaN,IAC/BA,EAAM,KAENC,EAAS,GACTD,EAAMM,EAAaL,QAGrB,EAAKO,SAAS,CAACR,MAAKC,cArDxB,EAAKQ,MAAQ,CACXT,IAAK,GACLC,OAAQ,IAJ4C,EAF1D,iFAaI9gB,KAAK2gB,UAbT,2CAkBI3gB,KAAK2gB,UAlBT,+BAgEI,IAAID,EAAQ1gB,KAAK0gB,MAUjB,OACE,yBAAKroB,YAAsB6gB,IAAdwH,EAAM5Z,KACjB,yBAAKya,UAAU,QAAQxB,MAAO,CAACc,IAAI7gB,KAAKshB,MAAMT,IAAKC,OAAO9gB,KAAKshB,MAAMR,SACnE,6BACGJ,EAAM5Z,WA9EnB,GAAgCyZ,IAAMiB,YAU7BC,YAAcnB,GA6ERoB,OAtG8B,SAAChB,GAE5C,OAAS,kBAAC,GAAWiB,SAAZ,MACN,cAAG9qB,KAAH,EAAS2pB,cAAT,OACC,yBAAKnoB,YAAsB6gB,IAAdwH,EAAM5Z,KACjB,yBAAKya,UAAU,SACb,6BACGb,EAAM5Z,WCsBJ8a,GApB6B,SAAClB,GACzC,IACImB,GAA4B,IADhBvsB,KAAKF,IAAIsrB,EAAM5B,MAAO4B,EAAMrrB,KACLqrB,EAAMrrB,KAAMQ,WAAa,IAC3C,SAAjBgsB,IAAyBA,EAAe,MAHO,MAI7BtB,IAAMuB,UAAS,GAJc,oBAI5CC,EAJ4C,KAIvCC,EAJuC,KAOnD,OAFID,IAAKF,EAAe,QAGpB,yBAAKN,UAAU,aAAaxB,MAAO,CAACkC,eAAeJ,IAC/C,yBAAKN,UAAU,gBAAgBxB,MAAO,CAACmC,MAAML,GAAeM,QAAS,kBAAIH,GAAQD,KAC7E,0BAAMhC,MAAO,CAACqC,WAAW,WACpB1B,EAAM2B,QAGf,kBAAC,GAAD,CAAOvb,IAAK,uCAAS4Z,EAAM5B,MAAf,YAAwB4B,EAAMrrB,KAAOqrB,EAAM5Z,SCApDwb,GAvBiB,kBAC5B,kBAAC,GAAWX,SAAZ,MAAsB,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OAElB,yBAAKe,UAAU,qBACX,yBAAKxB,MAAO,CAACC,QAAQ,OAAQkC,MAAM,SAC/B,yBAAKX,UAAU,WACnB,kBAAC,GAAD,CAAYgB,MAAM,QAAQC,WAAW,QAAQ1D,MAAOjoB,EAAKoT,SAAS2F,WAAYva,IAAKqa,GAASM,WAAYqS,MAAK,iBAAYI,GAAO5rB,EAAKoT,SAAS2F,gBAE1I,yBAAK2R,UAAU,WACnB,kBAAC,GAAD,CAAYgB,MAAM,QAAQC,WAAW,QAAQ1D,MAAOjoB,EAAKoT,SAAS0F,IAAKta,IAAKqa,GAASa,QAAS8R,MAAK,gBAAWxrB,EAAKoT,SAAS0F,QAE5H,yBAAK4R,UAAU,WACf,kBAAC,GAAD,CAAYgB,MAAM,QAAQC,WAAW,QAAQ1D,MAAOjoB,EAAKoT,SAASyE,MAAOrZ,IAAKqa,GAASc,UAAW6R,MAAK,kBAAaxrB,EAAKoT,SAASyE,MAA3B,YAAoCgU,GAAO7rB,EAAKoT,SAASyE,MAAQ,OAExK,8CACe7X,EAAKoT,SAASiD,aAUzC,SAASuV,GAAQzsB,GAEb,IAAIC,EAAOX,KAAKE,MAAMQ,EAAO,KAAMH,WACf,IAAhBI,EAAKG,SAAcH,EAAO,IAAMA,GAEpC,IAAIE,EAASb,KAAKE,MAAOQ,EAAO,IAAM,IAAO,IAAIH,WAGjD,OAFsB,IAAlBM,EAAOC,SAAcD,EAAS,IAAMA,GAElC,GAAN,OAAUF,EAAV,YAAkBE,GAGtB,IAAMusB,GAAS,CACX,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OCjCWC,I,MAdqC,SAACjC,GAAD,OAChD,kBAAC,GAAWiB,SAAZ,MACG,gBAAG9qB,EAAH,EAAGA,KAAM2pB,EAAT,EAASA,cAAT,OACG,4BAAQe,UAAU,aAAaqB,WAAUlC,EAAMvoB,OAAMuoB,EAAMvoB,KAAKtB,GAAawB,SAAQqoB,EAAMroB,QAAOqoB,EAAMroB,OAAOxB,GAAasrB,QAAS,WAAK3B,EAAcE,EAAMxoB,WAC5J,yBAAKqpB,UAAU,mBACf,8BAAOb,EAAMzoB,MACb,yBAAKI,YAAsB6gB,IAAdwH,EAAMmC,IAAmBC,IAAKpC,EAAMmC,IAAKlM,OAAQ,OAAQoM,IAAI,MAE1E,kBAAC,GAAD,CAAOjc,IAAK4Z,EAAM5Z,YCmBfkc,GA5BiB,kBAC5B,kBAAC,GAAWrB,SAAZ,MAAsB,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OAElB,yBAAKe,UAAU,aAEX,yBAAKA,UAAU,YAAf,iBAGmB7rB,EAAamB,EAAKE,YAAYC,QAAS,8BAG1D,yBAAKqB,OAA8C,IAAtCxB,EAAKE,YAAYS,aAAasJ,IAAWygB,UAAU,UAAhE,WACK7rB,EAAamB,EAAKE,YAAYS,aAAasJ,MAAO,8BAGvD,yBAAKzI,QAAmD,IAA3CxB,EAAKE,YAAYS,aAAaC,SAAoB8pB,UAAU,eAAzE,oBACkB7rB,EAAamB,EAAKE,YAAY+D,UADhD,MAIA,yBAAKzC,OAAsC,IAA9BxB,EAAKE,YAAYqB,SAAgBmpB,UAAU,eAAxD,oBACsB7rB,EAAamB,EAAKE,YAAYqB,iBCFjD6qB,I,YAjB6B,SAACvC,GAAD,OAC1C,kBAAC,GAAWiB,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OACC,yBAAKe,UAAS,yBAAoB1qB,EAAKsT,IAAIC,SAAS,IAClD,kBAAC,GAAD,CAAiBnS,KAAK,SAASC,QAAQ,eACvC,kBAAC,GAAD,CAAiBD,KAAK,gBAAgBC,QAAQ,aAAaG,OAAQ,SAACwE,GAAW,OfuBlF,SAAsBqmB,EAAkBrsB,GAC3C,OAAQqsB,GACJ,KAAK,EACD,OAAO,EAGX,KAAK,EACD,OAA6C,IAAtCrsB,EAAKE,YAAYO,kBAA6BT,EAAKE,YAAYwS,KAAKC,mBAAqB,EAEpG,QACI,OAAO,GejC8E2Z,CAAa,EAAGtsB,MACvG,kBAAC,GAAD,CAAiBoB,KAAK,eAAeC,QAAQ,aAAaG,OAAQ,SAACwE,GAAW,OAAqD,IAA9CA,EAAQ9F,YAAYS,aAAaC,YACtH,kBAAC,GAAD,CAAiBQ,KAAK,aAAaC,QAAQ,aAAaG,OAAQ,SAACwE,GAAW,OAAgD,IAAzCA,EAAQuE,UAAUC,sBACrG,kBAAC,GAAD,CAAiBpJ,KAAK,WAAWC,QAAQ,aAAaG,OAAQ,SAACwE,GAAW,OAAuC,IAAhCA,EAAQ0O,WAAW9T,YACpG,kBAAC,GAAD,CAAiBQ,KAAK,WAAWC,QAAQ,aAAaG,OAAQ,SAACwE,GAAW,OAAqC,IAA9BA,EAAQiG,SAASrL,kBCHvF2rB,G,YAEnB,WAAY1C,GAAiB,IAAD,8BAC1B,4CAAMA,KAUR2C,QAAU,SAACC,GACLA,EAAGC,SACL,EAAKC,QAAQhD,cAAc,EAAKE,MAAMxoB,QAAQA,SACzC,EAAKmpB,SAAS,CAACoC,MAAM,EAAKnC,MAAMmC,QAXvC,EAAKnC,MAAQ,CACXmC,MAAM,GAJkB,E,sEAmB1B,IAAI5sB,EAAOmJ,KAAKwjB,QAAQ3sB,KAExB,OAAQ,6BACJ,yBAAK0qB,UAAU,aAAalpB,SAAQ2H,KAAK0gB,MAAMxoB,QAAQG,QAAO2H,KAAK0gB,MAAMxoB,QAAQG,OAAOxB,IACxF,4BAAQ0qB,UAAU,aAAaqB,WAAU5iB,KAAK0gB,MAAMxoB,QAAQC,OAAM6H,KAAK0gB,MAAMxoB,QAAQC,KAAKtB,GAAasrB,QAASniB,KAAKqjB,SACjH,yBAAK9B,UAAU,mBACb,8BAAOvhB,KAAK0gB,MAAMxoB,QAAQD,MAC5B,yBAAKI,YAAmC6gB,IAA3BlZ,KAAK0gB,MAAMxoB,QAAQ2qB,IAAmBC,IAAK9iB,KAAK0gB,MAAMxoB,QAAQ2qB,IAAKlM,OAAQ,OAAQoM,IAAI,MAEpG,kBAAC,GAAD,CAAOjc,IAAK9G,KAAK0gB,MAAMxoB,QAAQ4O,QAGnC,yBAAKya,UAAU,aAAalpB,QAAS2H,KAAKshB,MAAMmC,MAC5C,yBAAKlC,UAAU,iBAAiBY,QAASniB,KAAKqjB,SAC5C,yBAAK9B,UAAU,gBACZvhB,KAAK0gB,MAAMgD,QACZ,yBAAKnC,UAAU,wBACf,kBAAC,GAAoBvhB,KAAK0gB,MAAMxoB,SAChC,4BAAQqpB,UAAU,SAASY,QAASniB,KAAKqjB,SAAzC,mB,GAvCkC9C,IAAMiB,WAAnC4B,GAWZ3B,YAAcnB,GChBvB,IA8BeqD,GA9BqC,SAACjD,GAAD,OAChD,kBAAC,GAAWiB,SAAZ,MACG,YAA8B,IAIzB7qB,ErCHenB,EAAa4L,EqCD9B1K,EAA0B,EAA1BA,KAAM2pB,EAAoB,EAApBA,cACJtoB,EAAUwoB,EAAMxoB,QAAQrB,GACxBoB,EAAOyoB,EAAMzoB,KAAKpB,GAClB0E,EAASmlB,EAAMnlB,OAAOmlB,EAAMnlB,OAAO1E,QAAMqiB,EAM7C,OAJIwH,EAAM5pB,OACRA,EAAO4pB,EAAM5pB,KAAKD,IAIlB,yBAAKwB,SAAQqoB,EAAMroB,QAAOqoB,EAAMroB,OAAOxB,IAEvC,4BAAQ0qB,UAAU,aAAaqB,WAAUlC,EAAMvoB,OAAMuoB,EAAMvoB,KAAKtB,GAAcsrB,QAAS,WAAK3B,EAActoB,KACxG,yBAAKqpB,UAAU,mBACb,yBAAKA,UAAU,cACjB,8BAAOtpB,GACP,8BAAOsD,GACZzE,GAAM,8BAAOpB,EAAcoB,GAArB,IAA4B,8BAAO4pB,EAAMplB,UAAzC,IAA2DolB,EAAMkD,UAAU,mCrChB7DjuB,EqCgB+EmB,ErChBlEyK,EqCgBwEmf,EAAMkD,SAAS/sB,GrCf/G,IAARlB,GAAsB,IAAT4L,EAAmB,MACxBjM,KAAKE,MAAM,IAAIG,EAAI4L,GAAM1L,WAAa,KqCckC,OAE5E,yBAAKwC,YAAsB6gB,IAAdwH,EAAMmC,IAAmBC,IAAKpC,EAAMmC,IAAKlM,OAAQ,OAAQoM,IAAI,MAE1E,kBAAC,GAAD,CAAOjc,IAAK4Z,EAAM5Z,Y,8jBCf9B,IA2Le+c,GA3LW,kBACtB,kBAAC,GAAWlC,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,OACG,yBAAK0qB,UAAU,cACX,yBAAKA,UAAU,cAAf,YACA,yBAAKA,UAAU,WACX,kBAAC,GAAD,CACIrpB,QAAS,CACLA,QAAS,mBACTD,KAAK,iBAAD,OAAmBvC,EAAauT,GAAsBpS,IAAtD,cACJwB,OAAQ,SAACwE,GAAc,OAAgD,IAAzCA,EAAQ9F,YAAYO,kBAClDwP,IAAM,6BACF,sDAC2BkI,GAAmBnY,GAAMitB,QAAQ,IAE5D,yBAAKvC,UAAU,YAAf,6BAC+B7rB,EAAamB,EAAKE,YAAYiW,WAE7D,uDAC4BtX,EAAcuT,GAAsBpS,GAAQA,EAAKE,YAAYqB,SAAWvB,EAAKE,YAAY8S,qBAI7H6Z,QAAS,4FAKb,yBAAKnC,UAAU,oBAEX,kBAAC,GAAD,CACIrpB,QAAO,MACAuX,GADA,CAEH3I,IAAM,6BACF,sCACWpR,EAAa8Z,GAAqB3Y,IAD7C,aAGA,kHACsF,6BADtF,6DAIA,iCACMA,EAAKuK,UAAUgC,gBAAkB,EADvC,QAC+CvM,EAAKuK,UAAUgC,gBAAkB,MAIxFsgB,QAAS,iGAOrB,yBAAKnC,UAAU,cAAf,QACA,gEACiC7rB,EAAamB,EAAKE,YAAY8S,iBAAmBhT,EAAKE,YAAYqB,YACzF,wEAC+B1C,EAAcuT,GAAsBpS,GAAQA,EAAKE,YAAYqB,SAAWvB,EAAKE,YAAY8S,oBAElI,yBAAK0X,UAAU,eAAf,0BACwBrT,GAAcrX,GAAMitB,QAAQ,KAEpD,4DAC6B1V,GAAgBvX,GAAMitB,QAAQ,KAE3D,yBAAKvC,UAAU,cAAf,qBACA,yBAAKA,UAAU,WAEf,kBAAC,GAAD,CACItpB,KAAM,kBAAIQ,EAAiCR,MAC3CC,QAAS,kBAAIO,EAAiCP,SAC9CG,OAAQI,EAAiCJ,OACzCF,KAAMM,EAAiCN,KACvCoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiBU,kBAChD1B,KAAMyB,EACNqrB,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,kEACiC,gCAG1C,kBAAC,GAAD,CACI7O,KAAM,kBAAIU,EAAqCV,MAC/CC,QAAS,kBAAIS,EAAqCT,SAClDG,OAAQM,EAAqCN,OAC7CF,KAAMQ,EAAqCR,KAC3CoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiBQ,sBAChDxB,KAAM4B,EACNkrB,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,uJACsH,6BADtH,oDAEgD,gCAGzD,kBAAC,GAAD,CACI7O,KAAM,kBAAID,EAAoBC,MAC9BC,QAAS,kBAAIF,EAAoBE,SACjCG,OAAQL,EAAoBK,OAC5BF,KAAMH,EAAoBG,KAC1BoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiBC,mBAChDjB,KAAMitB,EACNH,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,wEACuC,gCAGhD,kBAAC,GAAD,CACI7O,KAAM,kBAAIoB,EAA+BpB,MACzCC,QAAS,kBAAImB,EAA+BnB,SAC5CC,KAAMkB,EAA+BlB,KACrCoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiBsB,gBAChDf,OAAQgB,EAA+BhB,OACvCvB,KAAMqC,EACNyqB,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,gFAC+C,gCAGxD,kBAAC,GAAD,CACI7O,KAAM,kBAAIa,EAAmCb,MAC7CC,QAAS,kBAAIY,EAAmCZ,SAChDC,KAAMW,EAAmCX,KACzCoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiBe,oBAChD/B,KAAM8B,EACNP,OAAQS,EAAmCT,OAC3CurB,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,uEACsC,gCAG/C,kBAAC,GAAD,CACI7O,KAAM,kBAAIgB,EAA6BhB,MACvCC,QAAS,kBAAIe,EAA6Bf,SAC1CG,OAAQY,EAA6BZ,OACrCF,KAAMc,EAA6Bd,KACnCoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiBkB,cAChDlC,KAAMiC,EACN6qB,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,gFAC+C,gCAGxD,kBAAC,GAAD,CACA7O,KAAM,kBAAIuB,EAAuCvB,MACjDC,QAAS,kBAAIsB,EAAuCtB,SACpDG,OAAQmB,EAAuCnB,OAC/CF,KAAMqB,EAAuCrB,KAC7CoD,OAAQ,SAAC1E,GAAD,uBAAkBA,EAAKiB,iBAAiByB,wBAChDzC,KAAMwC,EACNsqB,SAAU,kBAAI/sB,EAAKE,YAAYqB,UAC/BkD,SAAQ,WACRwL,IAAK,4EAC2C,iCAIhD,yBAAKzO,OAA8B,IAAtB8K,GAAYtM,IACzB,yBAAK0qB,UAAU,cAAf,qBACA,yBAAKA,UAAU,yBAEf,kBAAC,GAAD,CAAiBrpB,QAAQ,kCACjBD,KAAMpB,EAAKuK,UAAU3D,WAAWC,MAA1B,gEAIV,oDAA0B2F,GAAkBxM,IAC5C,yBAAK0qB,UAAU,0CACX,kBAAC,GAAD,CAAerkB,GAAIF,GAAYuG,iBAC/B,kBAAC,GAAD,CAAerG,GAAIF,GAAYwG,2BAC/B,kBAAC,GAAD,CAAetG,GAAIF,GAAY2G,mBAC/B,kBAAC,GAAD,CAAezG,GAAIF,GAAYyG,oBAC/B,kBAAC,GAAD,CAAevG,GAAIF,GAAY0G,qBAC/B,kBAAC,GAAD,CAAexG,GAAIF,GAAY4G,2BAejDogB,GAAoD,SAACtD,GAAD,OACtD,kBAAC,GAAWiB,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,OACG,kBAAC,GAAD,iBAAqB6pB,EAAMxjB,GAAGhF,QAA9B,CACIC,KAAM,SAAC0E,GAAW,OAAOS,GAAQT,EAAS6jB,EAAMxjB,KAChD4J,IAAK,sCACM/C,GAAwBlN,EAAM6pB,EAAMxjB,IAAI,6BAC9CwjB,EAAMxjB,GAAG+G,YAAY,6BAFrB,WAGQyc,EAAMxjB,GAAG4G,QAAQjN,WCtJ/BotB,GA1D8C,SAACvD,GAAD,OAC3D,kBAAC,GAAWiB,SAAZ,MACG,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OACC,yBAAKnoB,OAAQqoB,EAAMwD,gBAAkB,GAA8E,IAAzErtB,EAAKE,YAAYS,aAAawD,YAAY0lB,EAAMwD,gBAAkB,GAAU3C,UAAU,iBAC9H,yBAAKxB,MAAO,CAAEC,QAAS,OAAQmE,eAAgB,gBAAiBC,cAAe,WAC7E,6BACE,8BACApiB,GAAY0e,EAAMwD,iBAAiBjsB,MAEnC,uCACQpB,EAAKE,YAAYS,aAAawD,YAAY0lB,EAAMwD,mBAG1D,yBAAK3C,UAAU,wBAEf,kBAAC,GAAD,CACEtpB,KAAI,UACJC,QAAO,sCAAiCwoB,EAAMwD,iBAC9C/rB,KAAM,SAAC0E,GAAc,OlCib1B,SAAyBhG,EAAegJ,GAC3C,IAAIwkB,EAAWtkB,GAAgBlJ,EAAMgJ,IAAUhJ,EAAKE,YAAY+D,SAC5DwpB,EAAcniB,GAAgBtL,GAAQ,EAC1C,OAAOwtB,GAAYC,EkCpbiBC,CAAgB1nB,EAAS6jB,EAAMwD,oBAE3D,kBAAC,GAAD,CACEjsB,KAAI,uBAAkBmI,GAA6BsgB,EAAMwD,gBAAiBrtB,GAAtE,KACJqB,QAAO,6CAAwCwoB,EAAMwD,iBACrD/rB,KAAM,SAAC0E,GAAc,OAAOuD,GAA6BsgB,EAAMwD,gBAAiBrnB,GAAW,GAC3FiK,IAAM,sCACGxE,GAA2Boe,EAAMwD,gBAAiBrtB,GAAMf,cAAc,MAGnF,kBAAC,GAAD,CACEmC,KAAI,uBAAkBiI,GAAwBwgB,EAAMwD,gBAAiBrtB,GAAjE,KACJqB,QAAO,yCAAoCwoB,EAAMwD,iBACjD/rB,KAAM,SAAC0E,GAAc,OAAOqD,GAAwBwgB,EAAMwD,gBAAiBrnB,GAAW,GACtFiK,IAAM,sCACG1E,GAAsBse,EAAMwD,gBAAiBrtB,GAAMf,cAAc,OAKxE,yBAAKyrB,UAAU,wBAInB,sCACS7rB,EAAaqK,GAAgBlJ,EAAM6pB,EAAMwD,kBADlD,cAKI,6BACE,kBAAC,GAAD,CAAoBrkB,MAAO6gB,EAAMwD,yBAYpCM,GAAkD,SAAC9D,GAAD,OAC7D,kBAAC,GAAWiB,SAAZ,MACG,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OACC,6BACoB,IAAhBE,EAAM7gB,OAAP,sBAAsCgB,GAA4BhK,GAAlE,0BACiB,IAAhB6pB,EAAM7gB,OAAP,kBAAkCkB,GAAyBlK,GAA3D,cACiB,IAAhB6pB,EAAM7gB,OAAP,iBAAiChJ,EAAKE,YAAYS,aAAawD,YAAY0lB,EAAM7gB,OAAjF,oBACiB,IAAhB6gB,EAAM7gB,OAAP,oBAAoChJ,EAAKE,YAAYS,aAAawD,YAAY0lB,EAAM7gB,OAApF,uBACiB,IAAhB6gB,EAAM7gB,OAAP,iBAAiChJ,EAAKE,YAAYS,aAAawD,YAAY0lB,EAAM7gB,OAAjF,qBACiB,IAAhB6gB,EAAM7gB,OAAP,cAA8BhJ,EAAKE,YAAYS,aAAawD,YAAY0lB,EAAM7gB,OAA9E,UAED,6BAEkB,IAAhB6gB,EAAM7gB,OAAehJ,EAAKiM,SAASC,OAAO5I,EAAI,GAA/C,qBAAmE6G,GAA8BnK,GAAjG,yBC/BM4tB,GAzC2B,SAAC/D,GAAD,OACtC,kBAAC,GAAWiB,SAAZ,MACG,YAA8B,IAA3B9qB,EAA0B,EAA1BA,KAAM2pB,EAAoB,EAApBA,cAEJtoB,EAAUwoB,EAAMxoB,QAChBD,EAAOyoB,EAAMzoB,KACb+M,EAAQ0b,EAAM7Y,SAASP,IAAIzQ,GAE3B0E,EAASmlB,EAAMnlB,OAAOmlB,EAAMnlB,OAAO1E,QAAMqiB,EAEzC/gB,EAAOuP,GAAiB7Q,EAAM6pB,GAC9B5pB,EAAO8Q,GAAiB/Q,EAAM6pB,GAC9BrrB,EAAM0S,GAAuBlR,EAAM6pB,GAEvC,OACE,yBAAKroB,SAAQqoB,EAAMroB,QAAOqoB,EAAMroB,OAAOxB,IAEvC,yBAAK0qB,UAAU,cACb,yBAAKA,UAAU,2BACb,4BAAQA,UAAU,wBAAwBqB,UAAWzqB,EAAOgqB,QAAS,WAAK3B,EAActoB,KAC9F,8BAAOD,GACP,uCAAa+M,GACRzJ,GAAU,8BAAOA,GAClB,8BAAO7F,EAAcoB,GAArB,IAA4B,8BAAO4pB,EAAMvY,cAAzC,MAEA,4BAAQoZ,UAAU,aAAaqB,UAAWzqB,EAAOgqB,QAAS,WAAK3B,EAActoB,EAAQ,SAArF,UACO,6BADP,IAEE7C,EAFF,KAIA,yBAAKgD,YAAsB6gB,IAAdwH,EAAMmC,IAAmBC,IAAKpC,EAAMmC,IAAKlM,OAAQ,OAAQoM,IAAI,MAE1E,kBAAC,GAAD,CAAOjc,IAAK4Z,EAAM5Z,YC4Of4d,GA/Pe,kBAC1B,kBAAC,GAAW/C,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,OACG,6BAII,6BAEI,6BACI,0BAAM0qB,UAAU,cAAhB,sBAEJ,kDACmB1qB,EAAKE,YAAYqI,WAAY,6BAC5C,kBAAC,GAAD,CAAO0H,IAAG,sFAEd,4DAC6BqF,GAAyBtV,GAAQgK,GAA4BhK,KAE1F,gEACiC4R,GAAiC5R,IAAQ,6BACtE,kBAAC,GAAD,CAAOiQ,IAAK,8EAAmD,6BAAnD,8DAAoH,6BAApH,2BACiByG,GAAwC1W,GAAM,6BAD/D,gCAEsByW,GAAkCzW,GAAM,iCAG9E,wDACyBA,EAAKE,YAAYmC,cAAe,6BACrD,kBAAC,GAAD,CAAO4N,IAAK,mFAAwD,6BAAxD,kBACInE,GAA+B9L,GADnC,wBAC+D,6BAD/D,sBAEQ0W,GAAwC1W,GAFhD,6BAEiF,iCAGjG,yDAC0BsL,GAAgBtL,IACtC,kBAAC,GAAD,CAAOiQ,IAAK,mEAC+B,6BAD/B,UAEJtQ,EAFI,cAEWK,EAAKE,YAAYmC,aAF5B,cAE8CrC,EAAKE,YAAYqI,WAAY,iCAG3F,gEACiCkC,GAAczK,GAAMitB,QAAQ,MAIjE,6BAEI,yBAAKvC,UAAU,cAAf,YACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,yBAEX,kBAAC,GAAD,iBAAqBhS,GAArB,CACIzI,IAAK,qEACoC,6BADpC,qCAE8B0G,GAA8B3W,GAF5D,YAEqE8L,GAA+B9L,GAFpG,aAE8GyV,GAAiCzV,IAAQ,6BAFvJ,iGAQb,yBAAK0qB,UAAU,yBAGf,kBAAC,GAAD,CACItpB,KAAO,kBAAIiL,GAAiBjL,MAC5BC,QAAU,kBAAIgL,GAAiBhL,SAC/BG,OAAS6K,GAAiB7K,OAC1BF,KAAM+K,GAAiB/K,KACvBrB,KAAMmM,GACN3H,SAAS,WACLwL,IAAG,0GAGP,yBAAKya,UAAU,cACX,kBAAC,GAAmB1a,OAKhC,yBAAK0a,UAAU,cAAf,YACA,yBAAKA,UAAU,WAEX,yBAAKA,UAAU,cACX,kBAAC,GAAerZ,KAGpB,yBAAKqZ,UAAU,cACX,kBAAC,GAAenZ,MAOxB,yBAAKmZ,UAAU,WAEX,yBAAKA,UAAU,YAC4B,IAAtCoD,GAA4B9tB,IAAmB,yBAAK0qB,UAAU,oBAAoBxB,MAAO,CAAE6E,OAAQ,oBAChG,4GACA,yBAAKrD,UAAU,kCACX,kBAAC,GAAmBoD,IACpB,kBAAC,GAAmBA,IACpB,kBAAC,GAAmBA,OAIhC,yBAAKpD,UAAU,YAC4B,IAAtCoD,GAA4B9tB,IAAmB,yBAAK0qB,UAAU,oBAAoBxB,MAAO,CAAE6E,OAAQ,oBAChG,sHACA,yBAAKrD,UAAU,iCACX,kBAAC,GAAmBoD,IACpB,kBAAC,GAAmBA,IACpB,kBAAC,GAAmBA,SAUxC,6BACI,yBAAKpD,UAAU,WACX,0BAAMA,UAAU,cAAhB,4DACA,yBAAKA,UAAU,yBACX,kBAAC,GAAD,CAAiBrpB,QAAQ,+BACrBD,KAAMpB,EAAKoH,WAAWC,eAAhB,yCAKlB,yBAAKqjB,UAAU,eAEX,yBAAKA,UAAU,eACX,6BACI,6BACK1qB,EAAKE,YAAYS,aAAagH,UADnC,sBACiE3H,EAAKE,YAAYS,aAAamH,cAAgB,EAAE,6BAC7G,0BAAMtG,OAAQxB,EAAKE,YAAYS,aAAagH,WAAa3H,EAAKE,YAAYS,aAAaiH,IAAID,WACpF3H,EAAKE,YAAYS,aAAamH,eAAiB9H,EAAKE,YAAYS,aAAaiH,IAAIE,eADxF,QAES,6BACJ9H,EAAKE,YAAYS,aAAaiH,IAAID,UAHvC,sBAGqE3H,EAAKE,YAAYS,aAAaiH,IAAIE,cAAgB,EACnH,kBAAC,GAAD,CACIzG,QAAQ,gCACRD,KAAK,kBAKjB,6CACcvC,EAAa0W,GAA4BvV,IADvD,qCAGA,6BACI,kBAAC,GAAoB6K,IACrB,8CACchM,EAAa4J,GAAsBzI,IADjD,gBAKR,6BACI,kBAAC,GAAoB4K,IACrB,8CACc/L,EAAa2J,GAAcxI,IADzC,4BAOR,yBAAK0qB,UAAU,eACX,6BACI,6BACK1qB,EAAKE,YAAYS,aAAayH,QADnC,qBAC8DpI,EAAKE,YAAYS,aAAa2H,aAAe,EAAE,6BACzG,0BAAM9G,OAAQxB,EAAKE,YAAYS,aAAayH,SAAWpI,EAAKE,YAAYS,aAAaiH,IAAIQ,SAClFpI,EAAKE,YAAYS,aAAa2H,cAAgBtI,EAAKE,YAAYS,aAAaiH,IAAIU,cADvF,QAES,6BACJtI,EAAKE,YAAYS,aAAaiH,IAAIQ,QAHvC,qBAGkEpI,EAAKE,YAAYS,aAAaiH,IAAIU,aAAe,EAC/G,kBAAC,GAAD,CACIjH,QAAQ,+BACRD,KAAK,kBAIjB,uCACQiU,GAAsBrV,GAD9B,sBAGA,6BACI,kBAAC,GAAoB+K,IACrB,8CACclM,EAAa8J,GAAqB3I,IADhD,gBAKR,6BACI,kBAAC,GAAoB8K,IACrB,8CACcjM,EAAa6J,GAAa1I,IADxC,4BAOR,yBAAK0qB,UAAU,eACX,6BACI,6BACK1qB,EAAKE,YAAYS,aAAaqH,YADnC,uBACoEhI,EAAKE,YAAYS,aAAauH,iBAAmB,EAAE,6BACnH,0BAAM1G,OAAQxB,EAAKE,YAAYS,aAAaqH,aAAehI,EAAKE,YAAYS,aAAaiH,IAAII,aACtFhI,EAAKE,YAAYS,aAAauH,kBAAoBlI,EAAKE,YAAYS,aAAaiH,IAAIM,kBAD3F,QAES,6BACJlI,EAAKE,YAAYS,aAAaiH,IAAII,YAHvC,uBAGwEhI,EAAKE,YAAYS,aAAaiH,IAAIM,iBAAmB,EACzH,kBAAC,GAAD,CACI7G,QAAQ,mCACRD,KAAK,kBAKjB,kDACmBkU,GAAyBtV,GAD5C,sBAGA,6BACI,kBAAC,GAAoBiL,IACrB,8CACcpM,EAAagK,GAAyB7I,IADpD,gBAKR,6BACI,kBAAC,GAAoBgL,IACrB,8CACcnM,EAAa+J,GAAiB5I,IAD5C,8BAWhB,6BAGI,0BAAM0qB,UAAU,cAAhB,sDAEA,yBAAKA,UAAU,eACX,kBAAC,GAAD,CAAe2C,gBAAiB,IAChC,kBAAC,GAAD,CAAeA,gBAAiB,WCtKzCW,GA3Fe,kBAC1B,kBAAC,GAAWlD,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OACG,6BACI,yBAAKe,UAAU,cAAf,cACA,wHAEI,kBAAC,GAAD,CAAOza,IAAG,uHAEd,6BACA,yBAAKya,UAAU,WAEX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,cAAf,aACA,8DAGA,yBAAKA,UAAU,cAAf,QACA,yBAAKA,UAAU,uBACX,qDAEsB1qB,EAAKE,YAAYqI,WACjC,2CAEMvI,EAAK+N,WAAWoO,UAAUS,eAChC,qDAEgBC,GAAmB7c,IAEzC,8CACc,0BAAM0qB,UAAU,UAAhB,IAA2B5N,GAAc9c,MAI3D,yBAAK0qB,UAAU,cAAf,YACA,yBAAKA,UAAU,oBAEf,kBAAC,GAAD,CAAgBrpB,QAAS,iBAAM,4BAA4BD,KAAM,oCACjE,kBAAC,GAAD,CAAgBC,QAAS,iBAAM,4BAA4BD,KAAM,qCAGjE,yBAAKspB,UAAU,cAAf,SACA,yBAAKA,UAAU,oBACf,kDACmB1qB,EAAK+N,WAAWoO,UAAUK,iBAE7C,kBAAC,GAAD,CAAgBnb,QAAS,iBAAM,gCAAgCD,KAAM,yBACrE,kBAAC,GAAD,CAAgBC,QAAS,iBAAM,8BAA8BD,KAAM,0BAGnE,yBAAKspB,UAAU,cAAf,SAGA,yBAAKA,UAAU,oBAE9BhN,GAAkB1d,EAAM4d,GAAqBlP,MAAQ,kBAAC,GAAD,CAASuf,WAAW,QAAQlR,KAAM/c,EAAK+N,WAAWoO,UAAUE,MAAMC,QACvHoB,GAAkB1d,EAAM4d,GAAoBlP,MAAQ,kBAAC,GAAD,CAASuf,WAAW,OAAOlR,KAAM/c,EAAK+N,WAAWoO,UAAUE,MAAMK,OACrHgB,GAAkB1d,EAAM4d,GAAoBlP,MAAQ,kBAAC,GAAD,CAASuf,WAAW,OAAOlR,KAAM/c,EAAK+N,WAAWoO,UAAUE,MAAMM,SAK1G,yBAAK+N,UAAU,wBACX,yBAAKA,UAAU,cAAf,oBADJ,gBAEkB1qB,EAAK+N,WAAWmR,eAAe,6BAFjD,SAGWlf,EAAK+N,WAAWoQ,KAAK,6BAC5B,yBAAKuM,UAAU,cAAf,aAEA,yBAAKA,UAAU,oBACd1qB,EAAK+N,WAAWgQ,MAAMiK,KAAK,SAACkG,EAASllB,GAAV,OAAkB,kBAAC,GAAD,CAASklB,SAAUA,EAAUllB,MAAOA,EAAO0F,IAAG,eAAU1F,SAEtG,yBAAK0hB,UAAU,cAAf,YACA,yBAAKA,UAAU,oBACmB,OAAjC1qB,EAAK+N,WAAWC,QAAQC,MAAkB,kBAAC,GAAD,CAAiBigB,SAAUluB,EAAK+N,WAAWC,QAAQC,KAAMkgB,KAAM,SACxE,OAAjCnuB,EAAK+N,WAAWC,QAAQQ,MAAiB,kBAAC,GAAD,CAAiB0f,SAAUluB,EAAK+N,WAAWC,QAAQQ,KAAM2f,KAAM,SACxE,OAAhCnuB,EAAK+N,WAAWC,QAAQ0J,KAAgB,kBAAC,GAAD,CAAiBwW,SAAUluB,EAAK+N,WAAWC,QAAQ0J,IAAKyW,KAAM,QACrE,OAAjCnuB,EAAK+N,WAAWC,QAAQK,MAAiB,kBAAC,GAAD,CAAiB6f,SAAUluB,EAAK+N,WAAWC,QAAQK,KAAM8f,KAAM,SACvE,OAAjCnuB,EAAK+N,WAAWC,QAAQuE,MAAiB,kBAAC,GAAD,CAAiB2b,SAAUluB,EAAK+N,WAAWC,QAAQuE,KAAM4b,KAAM,UAEvG,kBAAC,GAAD,CAAgB9sB,QAAS,qCAA0BD,KAAM,mCAc7EgtB,GAA0D,SAACvE,GAAD,OAC5D,kBAAC,GAAWiB,SAAZ,MACK,gBrB8HoB/N,EAAgBsR,EqB9HpC,EAAGruB,KAAH,EAAS2pB,cAAT,OACG,yBAAKe,UAAU,WACEb,EAAMoE,WAAW,6BADlC,WAEyBpE,EAAM9M,KAAKR,cAAcvd,WAAW,6BAF7D,sBAGoC6qB,EAAM9M,KAAKN,kBAAkB,6BAHjE,mBAIiCoN,EAAM9M,KAAKC,aAAa,6BAJzD,UrB6HiBD,EqBxHkB8M,EAAM9M,KrBwHRsR,EqBxHcxE,EAAMoE,WrByHtDlrB,EAAcqa,GAAUiR,GAActR,EAAKI,gBqBzHuB,6BALjE,QrBiIL,SAAqBJ,EAAgBsR,GACxC,IAEIC,EAFOvrB,EAAcqa,GAAUiR,GAActR,EAAKI,eACxCJ,EAAKC,aAEfuR,EAAOxR,EAAKN,kBAChB,OAAOhe,KAAKC,KAAK4vB,EAAUC,GqBhIGC,CAAW3E,EAAM9M,KAAM8M,EAAMoE,YANnD,QAMoE,6BANpE,gBAO8BpE,EAAM9M,KAAKI,eACG,IAA3B0M,EAAM9M,KAAKR,eAAyB,kBAAC,GAAD,CAAgBlb,QAAS,+CAA6BwoB,EAAMoE,aAAc7sB,KAAM,kCACzF,IAA3ByoB,EAAM9M,KAAKR,eAAwB,kBAAC,GAAD,CAAgBlb,QAAS,mDAAiCwoB,EAAMoE,aAAc7sB,KAAM,wCAM9IqtB,GAA8D,SAAC5E,GAAD,OAChE,kBAAC,GAAWiB,SAAZ,MACK,YAA6B,EAA1B9qB,KAA0B,EAApB2pB,cAAqB,IACvBne,EAAO2T,GAAqB0K,EAAMqE,UACtC,OACA,yBAAKxD,UAAU,WACElf,EAAKpK,KAAK,6BACVoK,EAAK+K,MAAM,6BAF5B,UAGwB/K,EAAKxL,KAAKmO,MAClB,yBAAKuc,UAAU,oBACf,kBAAC,GAAD,CAAgBrpB,QAAS,4CAA0BwoB,EAAM7gB,QAAS5H,KAAM,4BACxE,kBAAC,GAAD,CAAgBC,QAAS,2CAAyBwoB,EAAM7gB,QAAS5H,KAAM,2BACvE,kBAAC,GAAD,CAAgBC,QAAS,8CAA4BwoB,EAAM7gB,QAAS5H,KAAM,oCAOhGstB,GAA4E,SAAC7E,GAAD,OAC9E,kBAAC,GAAWiB,SAAZ,MACK,YAA6B,EAA1B9qB,KAA0B,EAApB2pB,cAAqB,IACvBne,EAAO2T,GAAqB,CAACd,IAAI,EAAElQ,MAAM,EAAED,OAAO,KAEtD,OADuB,OAAnB2b,EAAMqE,WAAmB1iB,EAAO2T,GAAqB0K,EAAMqE,WAE/D,yBAAKxD,UAAU,WACEb,EAAMsE,KAAK,6BACX3iB,EAAKpK,KAAK,6BACVoK,EAAK+K,MAAM,6BAH5B,UAIwB/K,EAAKxL,KAAKmO,MAClB,kBAAC,GAAD,CAAgB9M,QAAS,8CAA4BwoB,EAAMsE,OAAQ/sB,KAAM,mCChJhFutB,G,oNASjB,IAAI3uB,EAAOmJ,KAAKwjB,QAAQ3sB,KAExB,OAEI,yBAAK0qB,UAAU,aAAalpB,QAAmC,IAA3BxB,EAAKshB,QAAQC,WAC7C,yBAAKmJ,UAAU,kBACb,yBAAKA,UAAU,gBAAf,mBACkB,6BADlB,WAEU,6BACPxrB,EAAYc,EAAKshB,QAAQE,WAAW,6BAHvC,+D,GAf8BkI,IAAMiB,WAA7BgE,GAEZ/D,YAAcnB,GCLvB,IAiCemF,GAjC4E,SAAC/E,GAAD,OACvF,kBAAC,GAAWiB,SAAZ,MACG,YAA6B,EAA1B9qB,KAA0B,EAApB2pB,cAGR,OACI,yBAAKe,UAAU,wBACf,8BAAOb,EAAMzoB,MACb,yBAAKspB,UAAU,uBAEf,0BAAMA,UAAU,mBACZ,wCACQb,EAAM5B,MAAMgF,QAAQ,KAE5B,0BAAM/D,MAAO,CAAC2F,UAAU,UAAxB,UACQhF,EAAMiF,cAGEzM,IAAnBwH,EAAMkF,UACP,0BAAMrE,UAAU,mBACZ,wCACQb,EAAMkF,SAAS9B,QAAQ,KAE/B,0BAAM/D,MAAO,CAAC2F,UAAU,UAAxB,UACQhF,EAAMiF,eCkEfE,GAnFY,kBACvB,kBAAC,GAAWlE,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OACG,yBAAKe,UAAU,cACX,0BAAMA,UAAU,cAAhB,YAGA,4LAGA,0BAAMA,UAAU,cAAhB,QAPJ,kBAQgB1qB,EAAK0U,WAAW4F,QAC5B,0BAAMoQ,UAAU,cAAhB,+BACA,yBAAKA,UAAU,YACV,EACD,kBAAC,GAAmBjE,IACpB,kBAAC,GAAmBG,IACpB,kBAAC,GAAmBF,IACpB,kBAAC,GAAmBG,IACpB,kBAAC,GAAmBF,IACpB,kBAAC,GAAmBG,KAExB,0BAAM4D,UAAU,cAAhB,gBACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,uBAAuBxB,MAAO,CAAC+F,QAAQ,SAClD,yBAAKvE,UAAU,cAAf,SACA,kBAAC,GAAD,CAAQtpB,KAAK,OAAO6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKE,KAAM+O,MAAM,OAC5D,kBAAC,GAAD,CAAQ1tB,KAAK,kBAAkB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKC,OAAQgP,MAAM,MACzE,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKG,QAAQE,cAAe4O,MAAM,QACvF,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKG,QAAQC,cAAe6O,MAAM,MACvF,kBAAC,GAAD,CAAQ1tB,KAAK,mBAAmB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKG,QAAQG,eAAgB2O,MAAM,OAE9F,yBAAKpE,UAAU,uBAAuBxB,MAAO,CAAC+F,QAAQ,SAClD,yBAAKvE,UAAU,cAAf,OACA,kBAAC,GAAD,CAAQtpB,KAAK,OAAO6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKO,IAAIL,KAAM+O,MAAM,OAChE,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKO,IAAIC,UAAWyO,MAAM,MAC/E,kBAAC,GAAD,CAAQ1tB,KAAK,gBAAgB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKO,IAAIE,UAAWwO,MAAM,QAC9E,kBAAC,GAAD,CAAQ1tB,KAAK,eAAe6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKO,IAAIK,YAAaqO,MAAM,MAC/E,kBAAC,GAAD,CAAQ1tB,KAAK,qBAAqB6mB,MAAOjoB,EAAK0U,WAAWmL,KAAKO,IAAIG,YAAauO,MAAM,QAG7F,0BAAMpE,UAAU,cAAhB,eACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,uBAAuBxB,MAAO,CAAC+F,QAAQ,SAClD,yBAAKvE,UAAU,cAAf,SACA,kBAAC,GAAD,CAAQtpB,KAAK,oBAAoB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYC,iBAAkBmO,MAAM,QAC5F,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYV,QAAQE,cAAe4O,MAAM,QAC9F,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYV,QAAQC,cAAe6O,MAAM,MAC9F,kBAAC,GAAD,CAAQ1tB,KAAK,mBAAmB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYV,QAAQG,eAAgB2O,MAAM,OAErG,yBAAKpE,UAAU,uBAAuBxB,MAAO,CAAC+F,QAAQ,SAClD,yBAAKvE,UAAU,cAAf,OACA,kBAAC,GAAD,CAAQtpB,KAAK,OAAO6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYN,IAAIL,KAAM+O,MAAM,OACvE,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYN,IAAIC,UAAWyO,MAAM,MACtF,kBAAC,GAAD,CAAQ1tB,KAAK,gBAAgB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYN,IAAIE,UAAWwO,MAAM,QACrF,kBAAC,GAAD,CAAQ1tB,KAAK,eAAe6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYN,IAAIK,YAAaqO,MAAM,MACtF,kBAAC,GAAD,CAAQ1tB,KAAK,qBAAqB6mB,MAAOjoB,EAAK0U,WAAWgM,YAAYN,IAAIG,YAAauO,MAAM,QAGpG,0BAAMpE,UAAU,cAAhB,eACA,yBAAKA,UAAU,WACX,yBAAKA,UAAU,uBAAuBxB,MAAO,CAAC+F,QAAQ,SAClD,yBAAKvE,UAAU,cAAf,SACA,kBAAC,GAAD,CAAQtpB,KAAK,UAAU6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWC,iBAAiB,EAAGiO,MAAM,QACnF,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWZ,QAAQE,cAAe4O,MAAM,QAC7F,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWZ,QAAQC,cAAe6O,MAAM,MAC7F,kBAAC,GAAD,CAAQ1tB,KAAK,mBAAmB6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWZ,QAAQG,eAAgB2O,MAAM,OAEpG,yBAAKpE,UAAU,uBAAuBxB,MAAO,CAAC+F,QAAQ,SAClD,yBAAKvE,UAAU,cAAf,OACA,kBAAC,GAAD,CAAQtpB,KAAK,OAAO6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWR,IAAIL,KAAM+O,MAAM,OACtE,kBAAC,GAAD,CAAQ1tB,KAAK,UAAU6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWR,IAAIW,QAAS+N,MAAM,OAC5E,kBAAC,GAAD,CAAQ1tB,KAAK,iBAAiB6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWR,IAAIC,UAAWyO,MAAM,MACrF,kBAAC,GAAD,CAAQ1tB,KAAK,gBAAgB6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWR,IAAIE,UAAWwO,MAAM,QACpF,kBAAC,GAAD,CAAQ1tB,KAAK,eAAe6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWR,IAAIK,YAAaqO,MAAM,MACrF,kBAAC,GAAD,CAAQ1tB,KAAK,qBAAqB6mB,MAAOjoB,EAAK0U,WAAWkM,WAAWR,IAAIG,YAAauO,MAAM,aCnDpGI,GAxBoC,SAACrF,GAAD,OACjD,kBAAC,GAAWiB,SAAZ,MACG,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OAEW,6BACE,uCACU9T,GAAOgU,EAAMjV,YAAYqC,YAAYrB,GAAe5V,IAAOitB,QAAQ,IAE7E,yBAAKvC,UAAU,YAAf,eACe7U,GAAOgU,EAAMjV,YAAYsC,gBAExC,uCACUrY,EAAcuY,GAAyByS,EAAMjV,WAAY5U,KAEnE,wCACKqY,GAAerY,EAAM6pB,EAAMjV,YADhC,mCC6DHua,GA1EoC,SAACtF,GAAD,OACjD,kBAAC,GAAWiB,SAAZ,MACG,gBAAG9qB,EAAH,EAAGA,KAAH,EAAS2pB,cAAT,OACC,yBAAKnoB,OAAQqoB,EAAMjV,WAAa,GAAuD,IAAlD5U,EAAKE,YAAYM,OAAOqpB,EAAMjV,WAAa,GAAU8V,UAAU,YAClG,kBAAC,GAAD,CAAYiB,WAAY,SAAUD,MAAM,QAAQzD,MAAOjoB,EAAKE,YAAY6V,YAAY8T,EAAMjV,YAAapW,IAAKyX,GAAc4T,EAAMjV,YAC9H4W,MAAK,UAAK3V,GAAOgU,EAAMjV,YAAYxT,KAA9B,aAAuCpB,EAAKE,YAAYM,OAAOqpB,EAAMjV,eAE5E,yBAAK8V,UAAU,eAEb,yBAAKlpB,OAAyC,IAAjCxB,EAAKE,YAAY2S,aAE5B,kBAAC,GAAD,CAAiBzR,KAAI,OAAUC,QAAO,2BAAsBwoB,EAAMjV,YAActT,KAAM,SAAC0E,GAAc,O7BiqB1G,SAAsB4O,EAAoB5U,GAC7C,IAAIC,EAAO4U,GAAcD,EAAY5U,GACrC,OAAOA,EAAKE,YAAYC,OAASF,E6BnqBmFmvB,CAAavF,EAAMjV,WAAY5O,IACzIiK,IAAK,kBAAC,GAAD,CAAU2E,WAAYiV,EAAMjV,gBAIrC,yBAAKpT,OAAyC,KAAjCxB,EAAKE,YAAY2S,aAC5B,kBAAC,GAAD,CAAiBzR,KAAI,oBAAe0T,GAAmB+U,EAAMjV,WAAY5U,GAApD,KAA8DqB,QAAO,8BAAyBwoB,EAAMjV,YACvHtT,KAAM,SAAC0E,GAAc,OAAO8O,GAAmB+U,EAAMjV,WAAY5U,GAAQ,GACzEiQ,IAAK,kBAAC,GAAD,CAAU2E,WAAYiV,EAAMjV,gBAIrC,yBAAKpT,OAAyC,KAAjCxB,EAAKE,YAAY2S,aAE5B,kBAAC,GAAD,CAAiBzR,KAAI,cAAiBC,QAAO,+BAA0BwoB,EAAMjV,YAActT,KAAM,SAAC0E,GAAc,OAAOsS,GAAiBuR,EAAMjV,WAAY5U,EAAM,KAC9JiQ,IAAK,kBAAC,GAAD,CAAU2E,WAAYiV,EAAMjV,gBAGnC,yBAAK8V,UAAU,WAAWlpB,OAAyC,IAAjCxB,EAAKE,YAAY2S,aAAnD,SACOhU,EAAcgW,GAAcgV,EAAMjV,WAAY5U,KAErD,yBAAK0qB,UAAU,WAAWlpB,OAAyC,KAAjCxB,EAAKE,YAAY2S,aAAnD,SACOhU,EAAaJ,KAAKD,IAAIuW,GAAiB8U,EAAMjV,WAAY5U,GAAS6U,GAAcgV,EAAMjV,WAAY5U,MAEzG,yBAAK0qB,UAAU,WAAWlpB,OAAyC,KAAjCxB,EAAKE,YAAY2S,aAAnD,SACOhU,E7BmxBZ,SAA2B+V,EAAoB5U,EAAeuY,GAIjE,OAAOvD,GAAeJ,EAAY5U,EAF1BuY,EADAvY,EAAKE,YAAYM,OAAOoU,GACb2D,G6BrxBS8W,CAAkBxF,EAAMjV,WAAY5U,EAAK,MAE7D,yBAAK0qB,UAAU,aAAalpB,OAAyD,IAAjDxB,EAAKE,YAAYS,aAAawD,YAAY,IAC5E,kBAAC,GAAD,CACE/C,KAAI,UACJC,QAAO,+BAA0BwoB,EAAMjV,YACvCpT,OAAQ,SAACwE,GAAc,OAA2D,IAApDA,EAAQ9F,YAAYS,aAAawD,YAAY,IAC3E7C,KAAM,SAAC0E,GAAc,OzC/B9B,SAA8BhG,EAAegJ,GAChD,OAAO2E,GAAqB3N,EAAMgJ,IAAUhJ,EAAKE,YAAYS,aAAasJ,IyC8BlCqlB,CAAqBtpB,EAAS6jB,EAAMjV,aAChE3E,IAAK,uCACKjQ,EAAKE,YAAY0N,iBAAiBic,EAAMjV,YAAY,6BAC5D,yBAAK8V,UAAU,UAAf,SACS7rB,EAAa8O,GAAqB3N,EAAM6pB,EAAMjV,aADvD,QAFG,wCAKkC,6BALlC,WAMAyD,GAAerY,EAAM6pB,EAAMjV,YAN3B,iCAgBX,yBAAK8V,UAAU,YACb,2CACc7rB,E7BisBnB,SAAqC+V,EAAoB5U,GAC5D,OAAOvB,KAAKE,MAAMuX,GAAoBtB,EAAY5U,GAAQ6V,GAAOjB,GAAYqC,YAAcrB,GAAe5V,I6BlsBvEuvB,CAA4B1F,EAAMjV,WAAY5U,KAEzE,kBAAC,GAAD,CAAOiQ,IAAK,kDACSpR,EAAaqX,GAAoB2T,EAAMjV,WAAY5U,cCyFrEwvB,GAlJW,kBACtB,kBAAC,GAAW1E,SAAZ,MACK,YAAe,IAAZ9qB,EAAW,EAAXA,KAAY,OACZ,yBAAK0qB,UAAU,WAEX,yBAAKA,UAAU,WAEX,yBAAKA,UAAU,uBAEX,yBAAKA,UAAU,cAAf,YAEA,yBAAKA,UAAU,mBACX,kBAAC,GAAD,iBAAqBjS,GAArB,CAAuCxI,IAAK,gEAE5C,kBAAC,GAAD,CAAiB7O,KAAK,oBAAoBC,QAAQ,oBAC9CG,OAAQX,EACRS,KAAMhB,EACN2P,IAAK,yBAAKya,UAAU,YAAf,SAAiC5qB,KAE1C,kBAAC,GAAD,CAAiBsB,KAAK,4BAA4BC,QAAQ,sBACtDG,OAAQjB,EACRe,KAAMjB,EACN4P,IAAK,yBAAKya,UAAU,YAAf,SAAiC7qB,KAE1C,kBAAC,GAAD,CAAiBuB,KAAK,uBAAuBC,QAAQ,qBACjDG,OAAQd,EACRY,KAAMlB,EACN6P,IAAK,yBAAKya,UAAU,YAAf,SAAiC9qB,MAI9C,yBAAK8qB,UAAU,wBACf,yBAAKA,UAAU,cAAf,UACA,yBAAKA,UAAU,WAAf,QAGA,6BACQ,kBAAC,GAAD,CACItpB,KAAK,IACLC,QAAQ,2BAGZ,kBAAC,GAAD,CACID,KAAK,MACLC,QAAQ,2BAEZ,kBAAC,GAAD,CACID,KAAK,MACLC,QAAQ,8BAKpB,yBAAKqpB,UAAU,WAEf,yBAAKA,UAAU,iCAEX,kBAAC,GAAD,CAAU9V,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,KAEM,GAA9B5U,EAAKE,YAAYM,OAAO,IAC1B,yBAAKkqB,UAAU,iCACX,kBAAC,GAAD,CAAU9V,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,IACtB,kBAAC,GAAD,CAAUA,WAAY,OAM9B,yBAAK8V,UAAU,cACX,yBAAKA,UAAU,cAAf,gCACA,yBAAKA,UAAU,WACX,yBAAKlpB,QAA+C,IAAvCxB,EAAKE,YAAYY,mBAE1B,yBAAKU,QAA+C,IAAvCxB,EAAKE,YAAYY,kBAA6B4pB,UAAU,oBACjE,kBAAC,GAAD,CAAYlsB,IAAKyT,GAAqBjS,GAClCwrB,MAAO,yBAAKd,UAAU,wBAClB,mDACgBjsB,KAAKE,MAAM,IAAMqB,EAAKE,YAAY6R,UAAYE,GAAqBjS,IADnF,QAGA,yCACMsX,GAAqBtX,MAG/BioB,MAAOjoB,EAAKE,YAAY6R,UACxB9B,IAAK,sFAMjB,yBAAKzO,OAAsC,IAA9BxB,EAAKE,YAAYqB,SAAgBmpB,UAAU,eACpD,kBAAC,GAAD,CAAQzC,MAAO5Q,GAAcrX,GAAO8uB,MAAM,IAAI1tB,KAAK,cAEvD,yBAAKI,OAAsC,IAA9BxB,EAAKE,YAAY+D,SAAgBymB,UAAU,eACpD,kBAAC,GAAD,CAAQzC,MAAOxd,GAAczK,GAAO8uB,MAAM,IAAI1tB,KAAK,cAEvD,yBAAKI,OAAqD,IAA7CxB,EAAKE,YAAYwS,KAAKC,oBAC/B,kBAAC,GAAD,CAAQsV,MAAO1Q,GAAgBvX,GAAO8uB,MAAM,IAAI1tB,KAAK,kBACpDpB,EAAKuK,UAAUgC,gBAAkB,GAAK,kBAAC,GAAD,CAAO0D,IAAK,wCAC1C+H,GAAoChY,GADM,mCAKvD,yBAAKwB,OAAwC,IAAhCgW,GAAmB,EAAGxX,IACnC,kBAAC,GAAD,CAAQioB,MAAOzQ,GAAmB,EAAExX,GAAO8uB,MAAM,IAAI1tB,KAAK,oBAC1D,kBAAC,GAAD,CAAQ6mB,MAAOzQ,GAAmB,EAAExX,GAAO8uB,MAAM,IAAI1tB,KAAK,oBACtD,kBAAC,GAAD,CAAO6O,IAAK,6BAER,yCAGA,yBAAKzO,OAAQxB,EAAKuK,UAAU3D,WAAW2G,gBAAkBvN,EAAKuK,UAAU3D,WAAW6G,iBAAmB,GAAtG,6BAC2BkK,GAAgB3X,GAAMitB,QAAQ,SAKhExV,GAAgB,EAAEzX,GAAM,GAAK,kBAAC,GAAD,CAAQioB,MAAOxQ,GAAgB,EAAEzX,GAAO8uB,MAAM,IAAI1tB,KAAK,UAEzF,yBAAKspB,UAAU,cAAf,QAGS,kBAAC,GAAD,CAAQzC,MAAOrS,GAAe5V,GAAO8uB,MAAM,IAAI1tB,KAAK,kCC7DtEquB,I,MA1Ec,kBACzB,kBAAC,GAAW3E,SAAZ,MACK,gBAAE9qB,EAAF,EAAEA,KAAF,EAAQ2pB,cAAR,OACG,yBAAKe,UAAU,cACX,0BAAMA,UAAU,cAAhB,YAGA,mLAGA,6BAEI,kBAAC,GAAD,CAAOza,IAAG,2IAGd,yBAAKya,UAAU,kBAEd1qB,EAAKE,YAAYmE,iBAAiBC,IAAIC,GAAK,6BACxC,0BAAMmmB,UAAU,cAAhB,eAGI,6BACJ,kBAAC,GAAD,CAAqBrkB,GAAIoJ,KACzB,kBAAC,GAAD,CAAqBpJ,GAAIoJ,KACzB,kBAAC,GAAD,CAAqBpJ,GAAIoJ,KACzB,6BACKzP,EAAKiM,SAASiD,KAAKE,aAI3BpP,EAAKE,YAAYmE,iBAAiBC,IAAIhB,GAAK,6BACxC,mDAGI,6BACJ,kBAAC,GAAD,CAAqB+C,GAAIqpB,GAAUhgB,WAAWb,YAC9C,kBAAC,GAAD,CAAqBxI,GAAIqpB,GAAUhgB,WAAWZ,YAC9C,kBAAC,GAAD,CAAqBzI,GAAIqpB,GAAUhgB,WAAWX,cAGjD/O,EAAKE,YAAYmE,iBAAiBC,IAAIb,GAAK,6BACxC,0BAAMinB,UAAU,cAAhB,iBAGI,6BACJ,kBAAC,GAAD,CAAqBrkB,GAAIqpB,GAAU/f,OAAOd,YAC1C,kBAAC,GAAD,CAAqBxI,GAAIqpB,GAAU/f,OAAOb,YAC1C,kBAAC,GAAD,CAAqBzI,GAAIqpB,GAAU/f,OAAOZ,cAG7C/O,EAAKE,YAAYmE,iBAAiBW,IAAIT,GAAK,6BACxC,0BAAMmmB,UAAU,cAAhB,qBADwC,iBAI1B,uBAAGiF,OAAO,SAASC,KAAK,qCAAxB,6BAEjB5vB,EAAKE,YAAYmE,iBAAiBW,IAAI1B,GAAK,6BACxC,0BAAMonB,UAAU,cAAhB,uBADwC,iBAI1B,uBAAGiF,OAAO,SAASC,KAAK,qCAAxB,6BAEjB5vB,EAAKE,YAAYmE,iBAAiBW,IAAIvB,GAAK,6BACxC,0BAAMinB,UAAU,cAAhB,gBADwC,iBAI1B,uBAAGiF,OAAO,SAASC,KAAK,qCAAxB,oCAW5BC,GAA6D,SAAChG,GAAD,OAC/D,kBAAC,GAAWiB,SAAZ,MACK,gBAAG9qB,EAAH,EAAGA,KAAH,OACG,yBAAK0qB,UAAU,2CACf,kBAAC,GAAD,iBAAoBb,EAAMxjB,GAAGhF,QAA7B,CACIpB,KAAM,SAACD,GAAD,OAAQoQ,GAAqBpQ,EAAK6pB,EAAMxjB,KAC9C/E,KAAM,SAACtB,GAAD,OAAQmQ,GAAsBnQ,EAAM6pB,EAAMxjB,KAChD5B,SAAS,QACTwL,IAAK,sCACMpR,EAAauR,GAAqBpQ,EAAM6pB,EAAMxjB,KAAK,6BACzDwjB,EAAMxjB,GAAG+G,YAAY,6BAFrB,WAGQyc,EAAMxjB,GAAG4G,QAAQjN,OAGlC,kBAAC,GAAD,CAAgBoB,KAAM,oCAAgBiP,GAA4BrQ,EAAK6pB,EAAMxjB,IAAvD,MAA+DhF,QAAS,SAACrB,GAAD,OAAQ6pB,EAAMxjB,GAAGhF,QAAQA,QAAQrB,GAAM,OACzHsB,KAAM,SAACtB,GAAD,OAAQmQ,GAAsBnQ,EAAM6pB,EAAMxjB,YCrFnDypB,G,YAIjB,WAAYjG,GAAsB,IAAD,8BAC7B,4CAAMA,KAHV/mB,YAEiC,IAejC0kB,UAAY,SAACzQ,GACkC,GAAvC,EAAKjU,OAAOkD,QAAQob,QAAQH,SAAc,EAAKne,OAAOskB,eAAe,YAAcrQ,EAAErI,MAhB5D,EAmBjCyT,OAAS,WACL,EAAKqI,SAAS,CAAExqB,KAAM,EAAK8C,OAAOkD,WApBL,EAuBjC2jB,cAAgB,SAACtoB,GACb,EAAKyB,OAAOskB,eAAe/lB,IAxBE,EA2BjC0uB,QAAU,SAACtD,GACP,IAEIuD,EAFSvD,EAAGkD,OACMM,SACG,GACzBlnB,QAAQpF,IAAIqsB,EAAU/H,OACtB,EAAK0B,cAAL,sBAAkCqG,EAAU/H,QAE5CwE,EAAGyD,kBAhCH,EAAKptB,OAAS,IAAImkB,GAAO,EAAK9E,QAE9B,EAAKsI,MAAQ,CACTzqB,KAAM,EAAK8C,OAAOkD,SAGtB+jB,OAAOoG,iBAAiB,WAAY,EAAK3I,WARZ,E,oFAY7BuC,OAAOqG,oBAAoB,WAAYjnB,KAAKqe,a,+BAyBtC,IAAD,OACL,OACI,yBAAKkD,UAAU,MAAMxB,MAAO,CAAEmC,MAAM,OAASvL,OAAO,SAChD,kBAAC,GAAWuQ,SAAZ,CAAqBpI,MAAO,CACxBjoB,KAAMmJ,KAAKshB,MAAMzqB,KACjB2pB,cAAexgB,KAAKwgB,gBAEpB,yBAAKT,MAAO,CAAEC,QAAS,OAAQoE,cAAe,SAAUzN,OAAQ,SAE5D,yBAAK4K,UAAU,UACX,kBAAC,GAAD,CAAiBrpB,QAAQ,OAAOD,KAAK,SAEF,KAAjC+H,KAAKshB,MAAMzqB,KAAKohB,QAAQhgB,MAAgB,0BAAMkvB,SAAUnnB,KAAK4mB,SAC3D,2BAAOQ,KAAK,OAAOC,aAAa,WAChC,4BAAQ9F,UAAU,aAAa6F,KAAK,UAApC,aAG+B,KAAjCpnB,KAAKshB,MAAMzqB,KAAKohB,QAAQhgB,MAAgB,yBAAKkqB,QAAS,WAAQ,EAAK3B,cAAL,mBAAtB,uBACrBxgB,KAAKshB,MAAMzqB,KAAKohB,QAAQhgB,KADH,KACW,kBAAC,GAAD,CAAO6O,IAAK,oDAGjE,6BACK/Q,EAAYiK,KAAKshB,MAAMzqB,KAAKoT,SAASC,WAAWnE,OAGrD,kBAAC,GAAD,CAAiB7N,QAAQ,OAAOD,KAAK,SACrC,kBAAC,GAAD,CAAiBC,QAAQ,SAASD,KAAK,WACvC,6BACI,4BAAQspB,UAAU,aAAaY,QAAS,WAASxC,SAAS2H,eAAe,cAAmCnH,UAA5G,UAGA,2BAAOoH,GAAG,aAAaH,KAAK,OAAOnvB,KAAK,OAAO8nB,MAAO,CAAEC,QAAS,QAC7DwH,SAAU,SAAC5Z,GACP,IAAI6Z,EAAO7Z,EAAE4Y,OAAOkB,MACpB,GAAID,EAAM,CACN,IAAIE,EAAOF,EAAK,GACZG,EAAS,IAAIC,WAGjBD,EAAOE,WAAWH,EAAM,SAGxBC,EAAOG,OAAS,SAAAC,GACZ,IAAIxB,EAASwB,EAAYxB,OACzB,GAAIA,EAAQ,CACR,IAAIyB,EAAUzB,EAAO0B,OACrBtoB,QAAQpF,IAAIytB,GACZ,EAAKzH,cAAL,iBAA6ByH,YAWzD,kBAAC,GAAD,MAEA,kBAAC,GAAD,MAEA,yBAAK1G,UAAU,gBACV4G,GAASnoB,KAAKshB,MAAMzqB,KAAKsT,IAAIC,WAGlC,kBAAC,GAAD,MACA,kBAAC,GAAD,a,GA5GSmW,IAAMiB,WAsHjC2G,GAAW,CAAC,kBAAC,GAAD,MAAa,kBAAC,GAAD,MAAa,kBAAC,GAAD,MAAiB,kBAAC,GAAD,MAAiB,kBAAC,GAAD,MAAc,kBAAC,GAAD,OC9HxEC,QACW,cAA7BxH,OAAOyH,SAASC,UAEe,UAA7B1H,OAAOyH,SAASC,UAEhB1H,OAAOyH,SAASC,SAASC,MACvB,2DCZNxH,IAASyH,OAAO,kBAAC,GAAD,MAAS7I,SAAS2H,eAAe,SDmI3C,kBAAmBmB,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c96d138e.chunk.js","sourcesContent":["export function getRandomInt(min: number, max: number) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}   \n\nexport function formatNumber(num:number): string {\n    if (Math.abs(num) < 1e6) return num.toString();\n    else return num.toExponential(2);\n}\nexport function percentOf (num: number, base: number) {\n    if (num === 0 || base === 0) return 'IDK';\n    else return Math.floor(100*num/base).toString() + '%';\n}\n\nexport function msToFullHMS (msTime: number) {\n    \n    let hour = Math.floor(msTime/HOUR_MS).toString();\n\n    let minute = Math.floor((msTime%HOUR_MS)/HOUR_MS * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n\n    let second = Math.floor((msTime%MINUTE_MS)/MINUTE_MS * 60).toString();\n    if (second.length === 1) second = '0' + second;\n    \n    \n    return `${hour}:${minute}:${second}`\n}\n\nexport const SECOND_MS = 1000\nexport const MINUTE_MS = SECOND_MS * 60\nexport const HOUR_MS = MINUTE_MS * 60\n\nexport const WORLD_POP = 7.7e9\n\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nexport var compressString = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = '';\n    var currentCount = 0;\n    var charsIndex = 0;\n    for (var i = 0; i < chars.length; i++) {\n        \n        if (currentCount = 0) {\n            currentLetter = chars[i]\n            charsIndex++\n        } else {\n            \n            if (chars[i] === currentLetter) {\n                currentCount ++;\n            } else {\n                if (currentCount > 1) {\n                    chars[charsIndex] = currentCount.toString();\n                    charsIndex++\n                } \n                currentCount = 1\n                currentLetter = chars[i]\n                charsIndex++\n                \n            }\n        \n        }\n            \n    }\n    return charsIndex + 1\n};\n\n/**\n * @param {character[]} chars\n * @return {number}\n */\nvar compress = function(chars: string[]) {\n    if (chars.length === 0) return 0\n    var currentLetter = chars[0];\n    var currentCount = 1;\n    var charsIndex = 0;\n    for (var i = 1; i < chars.length; i++) {\n        \n        if (chars[i] === currentLetter) {\n            currentCount ++;\n        } else {\n            \n            chars[charsIndex] = currentLetter\n            charsIndex++\n            \n            \n            if (currentCount > 1) {\n                var intStr = currentCount.toString();\n                for (var j = 0; j < intStr.length; j++) {\n                    chars[charsIndex] = intStr[i];\n                    charsIndex++                \n                }\n            } \n            currentCount = 1\n            currentLetter = chars[i]\n        }\n            \n    }\n    \n    chars[charsIndex] = currentLetter\n    charsIndex++        \n            \n    if (currentCount > 1) {\n        chars[charsIndex] = currentCount.toString();\n        charsIndex++\n    } \n    \n    return charsIndex\n};\n\ninterface LNode {\n    next: LNode | null;\n    val: number;\n}\nfunction ListNode(val: number): LNode {\n    return {\n        val, next: null\n    }\n}\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1: LNode | null, l2: LNode | null) {\n    var s1 = \"\";\n    var s2 = \"\";\n    \n    while(l1 !== null) {\n        s1 = s1 + l1.val.toString();\n        l1 = l1.next\n    }\n    \n    while(l2 !== null) {\n        s2 = s2 + l2.val.toString();\n        l2 = l2.next\n    }\n    \n    s1 = s1.split(\"\").reverse().join()\n    s2 = s2.split(\"\").reverse().join()\n    \n    var newVal = parseInt(s1) + parseInt(s2);\n    var newS = newVal.toString();\n    var newSSplit = newS.split(\"\");\n    \n    var popped = newSSplit.pop();\n        \n    var currentNode = null;\n    while (popped !== undefined) {\n        var newNode = ListNode(parseInt(popped))\n        newNode.next = currentNode;\n        currentNode = newNode;\n        popped = newSSplit.pop()\n    }\n    \n    return currentNode\n    \n    \n    \n    \n};","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand, DecoupledCommand2 } from \"../interfaces/ICommand\";\n\nexport default class PietyPurchases {\n\n}\n\n\nexport const congregationCost: number = 1e10;\nexport const reincarnationCost: number = 1e5;\nexport const holyPowerCost: number = 1e4;\n\nfunction piety_purchase_canBuy (data: Datamap, cost: number) {\n    return data.prophetData.piety >= cost;\n}\n\nexport function piety_purchase_canBuy_congregation (data:Datamap) {\n    return piety_purchase_canBuy(data, congregationCost)\n}\n\nexport function piety_purchase_canBuy_reincarnation (data:Datamap) {\n    return piety_purchase_canBuy(data, reincarnationCost)\n}\n\nexport function piety_purchase_canBuy_holypower (data:Datamap) {\n    return piety_purchase_canBuy(data, holyPowerCost)\n}\n\nexport function piety_purchase_buy_congregation (data: Datamap) {\n    if (piety_purchase_hide_congregation(data)) return\n    if (!piety_purchase_canBuy_congregation(data)) return;\n    data.prophetData.piety -= congregationCost;\n    data.prophetData.congregation.unlocked = true;\n}\n\nexport function piety_purchase_buy_reincarnation (data: Datamap) {\n    if (piety_purchase_hide_reincarnation(data)) return\n    if (!piety_purchase_canBuy_reincarnation(data)) return;\n    data.prophetData.piety -= reincarnationCost;\n    data.prophetData.prestigeUnlocked = true;\n}\n\nexport function piety_purchase_buy_holypower (data: Datamap) {\n    if (piety_purchase_hide_holypower(data)) return\n    if (!piety_purchase_canBuy_holypower(data)) return;\n    data.prophetData.piety -= holyPowerCost;\n    data.prophetData.holyPowerUnlocked = true;\n}\n\nexport function piety_purchase_hide_reincarnation (data: Datamap) {\n    let hidden=  data.prophetData.relics[2] === 0 || data.prophetData.prestigeUnlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_congregation (data: Datamap) {\n    let  hidden = data.prophetData.relics[4] === 0 || data.prophetData.congregation.unlocked\n    return hidden;\n}\n\nexport function piety_purchase_hide_holypower (data: Datamap) {\n    let hidden=  data.prophetData.relics[1] === 0 || data.prophetData.holyPowerUnlocked\n    return hidden;\n}\n\n\nexport function holiness_holyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(10,data.holinessUpgrades.holypowerUpgrade + 1)\n}\nexport const holiness_holypower1: DecoupledCommand = {\n    name: \"Holy Power Effectiveness\",\n    command: \"prophet holypowerUpgrade\",\n    able: (data)=>{return holiness_holyPowerUpgradeCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.maxHolyPowerUpgrade === 0}\n\n}\nexport function holiness_holyPowerUpgrade_do (data: Datamap) {\n    if (holiness_holypower1.able) if (!holiness_holypower1.able(data)) return;\n    let cost = holiness_holyPowerUpgradeCost(data);\n    data.holinessUpgrades.holypowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_holyPumpUpgradeCost (data: Datamap) {\n    return Math.pow(2, data.holinessUpgrades.holyPumpUpgrade + 1)\n}\nexport const holiness_holyPumpUpgrade_command: DecoupledCommand = {\n    name: \"Holy Power From Prayer\",\n    command: \"prophet holypumpupgrade\",\n    able: (data)=>{return holiness_holyPumpUpgradeCost(data) <= data.prophetData.holiness},\n}\nexport function holiness_holyPumpUpgrade_do (data: Datamap) {\n    if (holiness_holyPumpUpgrade_command.able) if (!holiness_holyPumpUpgrade_command.able(data)) return;\n    let cost = holiness_holyPumpUpgradeCost(data);\n    data.holinessUpgrades.holyPumpUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_maxHolyPowerUpgradeCost (data: Datamap) {\n    return Math.pow(5, data.holinessUpgrades.maxHolyPowerUpgrade + 1)\n}\nexport const holiness_maxHolyPowerUpgrade_command: DecoupledCommand = {\n    name: \"Max Holy Power\",\n    command: \"prophet maxholypowerupgrade\",\n    able: (data)=>{return holiness_maxHolyPowerUpgradeCost(data) <=data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holyPumpUpgrade === 0}\n}\nexport function holiness_maxHolyPowerUpgrade_do (data: Datamap) {\n    if (holiness_maxHolyPowerUpgrade_command.able) if (!holiness_maxHolyPowerUpgrade_command.able(data)) return;\n    let cost = holiness_maxHolyPowerUpgradeCost(data);\n    data.holinessUpgrades.maxHolyPowerUpgrade ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_believerRetentionCost (data: Datamap) {\n    return Math.floor(Math.pow(1.7, data.holinessUpgrades.believerRetention)+1)\n}\nexport const holiness_believerRetention_command: DecoupledCommand = {\n    name: \"Believer Retention\",\n    command: \"prophet believerretentionupgrade\",\n    able: (data)=>{return holiness_believerRetentionCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.maxHolyPowerUpgrade === 0 || data.prophetData.congregation.unlocked === false)}\n}\nexport function holiness_believerRetention_do (data: Datamap) {\n    if (holiness_believerRetention_command.able) if (!holiness_believerRetention_command.able(data)) return;\n    let cost = holiness_believerRetentionCost(data);\n    data.holinessUpgrades.believerRetention ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_exRelationsCost (data: Datamap) {\n    return Math.pow(3, data.holinessUpgrades.exRelations + 1)\n}\nexport const holiness_exRelations_command: DecoupledCommand = {\n    name: \"Ex Relations\",\n    command: \"prophet exrelationsupgrade\",\n    able: (data)=>{return holiness_exRelationsCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.believerRetention === 0 && (data.holinessUpgrades.believerRetention === 0 || data.prophetData.ex_believers === 0)}\n}\nexport function holiness_exRelations_do (data: Datamap) {\n    if (holiness_exRelations_command.able) if (!holiness_exRelations_command.able(data)) return;\n    let cost = holiness_exRelationsCost(data);\n    data.holinessUpgrades.exRelations ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_buildingMultiCost (data: Datamap) {\n    return Math.floor(Math.pow(3.69, data.holinessUpgrades.buildingMulti + 1) + 30)\n}\nexport const holiness_buildingMulti_command: DecoupledCommand = {\n    name: \"Relic Mult\",\n    command: \"prophet bmupgrade\",\n    able: (data)=>{return holiness_buildingMultiCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.holypowerUpgrade === 0}\n}\nexport function holiness_buildingMulti_do (data: Datamap) {\n    if (holiness_buildingMulti_command.able) if (!holiness_buildingMulti_command.able(data)) return;\n    let cost = holiness_buildingMultiCost(data);\n    data.holinessUpgrades.buildingMulti ++;\n    data.prophetData.holiness -= cost;\n}\n\nexport function holiness_devotionEffectivenessCost (data: Datamap) {\n    return Math.floor(Math.pow(124, data.holinessUpgrades.devotionEffectiveness + 1))\n}\nexport const holiness_devotionEffectiveness_command: DecoupledCommand = {\n    name: \"Devotion Effectiveness\",\n    command: \"prophet de_upgrade\",\n    able: (data)=>{return holiness_devotionEffectivenessCost(data) <= data.prophetData.holiness},\n    hidden: (data)=>{return data.holinessUpgrades.exRelations === 0}\n}\nexport function holiness_devotionEffectiveness_do (data: Datamap) {\n    if (holiness_devotionEffectiveness_command.able) if (!holiness_devotionEffectiveness_command.able(data)) return;\n    let cost = holiness_devotionEffectivenessCost(data);\n    data.holinessUpgrades.devotionEffectiveness ++;\n    data.prophetData.holiness -= cost;\n}\n\n\nexport interface HolinessUpgrades {\n    holypowerUpgrade: number;\n    holyPumpUpgrade: number;\n    maxHolyPowerUpgrade: number;\n    believerRetention: number;\n    exRelations: number;\n    buildingMulti: number;\n    devotionEffectiveness: number;\n}\n\nexport function holinessUpgradesInit () {\n    return {\n        holypowerUpgrade: 0,\n        holyPumpUpgrade: 0,\n        maxHolyPowerUpgrade: 0,\n        believerRetention: 0,\n        exRelations: 0,\n        buildingMulti: 0,\n        devotionEffectiveness: 0,\n    }\n}\n\nconst MIRaCLES_COST = 1e30\nexport const UnlockMiracles: DecoupledCommand2 = {\n    command:()=>'prophet unlockmiracles',\n    name:()=> \"Unlock Miracles\",\n    cost:()=> MIRaCLES_COST,\n    hidden:(data)=>data.prophetData.relics[9] === 0 || data.rocketData.unlocked,\n    able:(data)=>data.prophetData.piety >= MIRaCLES_COST\n}","import Engine from \"../Engine\";\n\nexport default abstract class AbstractModule {\n    \n    constructor (public engine: Engine) {\n\n    }\n\n    get data () {\n        return {\n            \n        }\n    }\n\n}","export default interface ExpoCurve {\n    coefficient: number,\n    initial: number,\n}\n\nexport function expoI_getCost(expo: ExpoCurve, owned:number) {\n\n    \n    return Math.floor(expo.initial*Math.pow(expo.coefficient,owned))\n}\n\nexport function expoI_maxBuyAmount (expo: ExpoCurve, owned:number, currency: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n    let c = currency\n\n    let logresult = Math.log(1+((c*(r - 1))/(b*Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}  \n\nexport function expoI_maxBuyCost (expo: ExpoCurve, owned:number, currency: number) {\n\n    let n = expoI_maxBuyAmount(expo, owned, currency);\n    \n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport function expoI_buyNCost (expo: ExpoCurve, owned: number, n: number) {\n    let b = expo.initial;\n    let r = expo.coefficient;\n    let k = owned\n\n    return Math.floor( b * (Math.pow(r,k)*(Math.pow(r,n)-1)) / (r - 1) )\n}\n\nexport function expoI_buyNextCost (expo: ExpoCurve, owned: number, next: number) {\n    let k = owned;\n    let n = next - k % next;\n\n    return expoI_buyNCost(expo, owned, n)\n}\n\nexport interface ExpoObject {\n    [key:string]:ExpoCurve,\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand, DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport ExpoCurve from \"../interfaces/ExpoCurve\";\n\nexport default class DevotionPurchases {\n\n}\n\nexport function doDevotionUpgrade (data: Datamap, command: string) {\n    switch (command) {\n        case 'shorterdays':\n            data.prophetData.devotion -= ABC_cost(data);\n            data.prophetData.devotionUpgrades.abc.a = true;\n            break;\n\n        case 'productiveprayer':\n                data.prophetData.devotion -= ABC_cost(data);\n                data.prophetData.devotionUpgrades.abc.b = true;\n            break;\n\n        case 'relicpower':\n                data.prophetData.devotion -= ABC_cost(data);\n                data.prophetData.devotionUpgrades.abc.c = true;\n            break;\n\n        case 'd':\n                data.prophetData.devotion -= DEF_cost(data);\n                data.prophetData.devotionUpgrades.def.a = true;\n            break;\n\n        case 'e':\n                data.prophetData.devotion -= DEF_cost(data);\n                data.prophetData.devotionUpgrades.def.b = true;\n            break;\n\n        case 'f':\n                data.prophetData.devotion -= DEF_cost(data);\n                data.prophetData.devotionUpgrades.def.c = true;\n            break;\n    \n        default:\n            break;\n    }\n}\n\nfunction ABC_cost (data: Datamap) {\n    return 1e6\n}\n\nfunction ABC_able (data: Datamap) {\n    return data.prophetData.devotion >= ABC_cost(data) && ABC_hidden(data) === false;\n}\n\nexport function ABC_hidden (data: Datamap) {\n    return data.prophetData.congregation.paritioners[0] < 1 || ABC_bought(data);\n}\n\nexport function ABC_bought (data: Datamap) {\n    return data.prophetData.devotionUpgrades.abc.a || data.prophetData.devotionUpgrades.abc.b || data.prophetData.devotionUpgrades.abc.c\n}\n\n\nexport const Devotion_Upgrade_ShorterDays: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade shorterdays',\n    name: (data)=>`(A) God of Time`,\n    hidden: ABC_hidden,\n    cost: ABC_cost,\n    able: ABC_able,\n    costName: 'Devotion',\n    change: (data)=>`Days are only 12 seconds`,\n}\n\nexport const Devotion_Upgrade_NoHPDecay: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade productiveprayer',\n    name: (data)=>`(B) God of Production`,\n    change: (data)=>`Prayer gives 1s of relic time`,\n    hidden: ABC_hidden,\n    cost: ABC_cost,\n    able: ABC_able,\n    costName: 'Devotion',\n}\n\nexport const Devotion_Upgrade_RelicPower: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade relicpower',\n    name: (data)=>`(C) God of Wealth`,\n    change: (data)=>`Expensive relics produce more`,\n    cost: ABC_cost,\n    able: ABC_able,\n    costName: 'Devotion',\n}\n\nfunction DEF_cost (data: Datamap) {\n    return 1e8\n}\n\nfunction DEF_able (data: Datamap) {\n    return data.prophetData.devotion >= DEF_cost(data) && DEF_hidden(data) === false;\n}\n\nexport function DEF_hidden (data: Datamap) {\n    return data.prophetData.congregation.paritioners[1] < 1 || DEF_bought(data);\n}\n\nfunction DEF_bought (data: Datamap) {\n    return data.prophetData.devotionUpgrades.def.a || data.prophetData.devotionUpgrades.def.b || data.prophetData.devotionUpgrades.def.c\n}\n\n\nexport const Devotion_Upgrade_D: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade d',\n    name: (data)=>`(D) God of Persuasion`,\n    change: (data)=>`Double Believer Gain`,\n    hidden: DEF_hidden,\n    cost: DEF_cost,\n    able: DEF_able,\n    costName: 'Devotion',\n}\n\nexport const Devotion_Upgrade_E: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade e',\n    name: (data)=>`(E) God of Maintainance`,\n    change: (data)=>`No Holy Power Decay`,\n    hidden: DEF_hidden,\n    cost: DEF_cost,\n    able: DEF_able,\n    costName: 'Devotion',\n}\n\nexport const Devotion_Upgrade_F: DecoupledCommand2 = {\n    command: (data)=>'followers devotionupgrade f',\n    name: (data)=>`(F) God of Greed`,\n    change: (data)=>`Expensive relics produce more`,\n    hidden: DEF_hidden,\n    cost: DEF_cost,\n    able: DEF_able,\n    costName: 'Devotion',\n}\n\nexport interface DevotionUpgradeData {\n    abc: { a: boolean, b: boolean, c: boolean };\n    def: { a: boolean, b: boolean, c: boolean };\n    ghijk: { a: boolean, b: boolean, c: boolean, d: boolean, e: boolean };\n}\n\nexport function DevotionUpgradeData_init (): DevotionUpgradeData {\n    return {\n        abc: { a: false, b: false, c: false, },\n        def: { a: false, b: false, c: false, },\n        ghijk: { a: false, b: false, c: false, d: false, e: false },\n    }\n}","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_maxBuyCost, expoI_buyNCost, expoI_buyNextCost } from \"../interfaces/ExpoCurve\";\nimport { helper_prophet_exBeliever_harm, availablePeople } from \"./Prophet\";\nimport { doDevotionUpgrade } from \"./DevotionPurchases\";\n\nexport default class Followers extends AbstractModule {\n\n\n    get data() {\n        return this.engine.datamap.followers;\n    }\n\n    handle_followers_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'recruit':\n                this.handle_recruit_command(cmdArray)\n                break;\n\n            case 'upgrade':\n                this.handle_upgrade_command(cmdArray)\n                break;\n\n            case 'recruitparitioner':\n                this.recruitParitioner(cmdArray[2]);\n                break;\n\n            case 'recruitmaxparitioner':\n                this.recruitMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'recruithalfmaxparitioner':\n                this.recruitHalfMaxParitioner(cmdArray[2]);\n                break;\n\n            case 'unlock':\n                this.handle_unlock_command(cmdArray);\n                break;\n\n            case 'divinity':\n                this.handle_divinity_command(cmdArray);\n                break;\n\n            case 'devotionupgrade':\n                doDevotionUpgrade(this.engine.datamap, cmdArray[2])\n                break;\n\n\n            default:\n                break;\n        }\n    }\n\n    handle_divinity_command = (cmdArray: string[]) => {\n        let data = this.engine.datamap;\n\n        Object.values(DP_Upgrades).forEach(dp => {\n            if (cmdArray[2] === dp_key(dp)) {\n                buy_divinityPurchase(data, dp)\n            }\n        })\n\n        if (cmdArray[2] === 'reset_toggle') {\n            this.data.DPUpgrades.reset = !this.data.DPUpgrades.reset\n        }\n\n    }\n\n    handle_recruit_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.recruit_preacher()\n                break;\n            case 'devotee':\n                this.recruit_devotee()\n                break;\n            case 'doorknocker':\n                this.recruit_doorknocker()\n                break;\n            case 'preachermax':\n                this.recruit_preacher_max()\n                break;\n            case 'devoteemax':\n                this.recruit_devotee_max()\n                break;\n            case 'doorknockermax':\n                this.recruit_doorknocker_max()\n                break;\n            case 'autotoggle':\n                this.engine.datamap.automation.auto_buyToNext = !this.engine.datamap.automation.auto_buyToNext\n            break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_upgrade_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'preacher':\n                this.upgrade_preacher()\n                break;\n\n            case 'devotee':\n                this.upgrade_devotee();\n                break;\n\n            case 'doorknocker':\n                this.upgrade_doorknocker();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    handle_unlock_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'adornments':\n                this.unlockAdornments();\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    recruit_preacher_max = () => {\n        while (preacher_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preachers < this.engine.datamap.prophetData.congregation.old.preachers)) {\n            this.recruit_preacher();\n        }\n        while (preacher_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.preacherLevel < this.engine.datamap.prophetData.congregation.old.preacherLevel)) {\n            this.upgrade_preacher();\n        }\n    }\n\n    recruit_doorknocker_max = () => {\n        while (doorknocker_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknocker < this.engine.datamap.prophetData.congregation.old.doorknocker)) {\n            this.recruit_doorknocker();\n        }\n        while (doorknocker_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.doorknockerLevel < this.engine.datamap.prophetData.congregation.old.doorknockerLevel)) {\n            this.upgrade_doorknocker();\n        }\n    }\n\n    recruit_devotee_max = () => {\n        while (devotee_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devotee < this.engine.datamap.prophetData.congregation.old.devotee)) {\n            this.recruit_devotee();\n        }\n        while (devotee_upgrade_cmd_able(this.engine.datamap) && (this.engine.datamap.prophetData.congregation.devoteeLevel < this.engine.datamap.prophetData.congregation.old.devoteeLevel)) {\n            this.upgrade_devotee();\n        }\n    }\n\n    recruit_preacher = () => {\n        if (preacher_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= preacher_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preachers++;\n    }\n\n    upgrade_preacher = () => {\n        if (preacher_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= preacher_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.preacherLevel++;\n    }\n\n    recruit_devotee = () => {\n        if (devotee_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= devotee_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devotee++;\n    }\n\n    upgrade_devotee = () => {\n        if (devotee_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= devotee_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.devoteeLevel++;\n    }\n\n    recruit_doorknocker = () => {\n        if (doorknocker_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.believers--;\n        this.engine.datamap.prophetData.holiness -= doorknocker_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknocker++;\n    }\n\n    upgrade_doorknocker = () => {\n        if (doorknocker_upgrade_cmd_able(this.engine.datamap) === false) return;\n        this.engine.datamap.prophetData.holiness -= doorknocker_upgrade_cost(this.engine.datamap)\n        this.engine.datamap.prophetData.congregation.doorknockerLevel++;\n    }\n\n    recruitParitioner(arg0: string) {\n        console.log('recruiting!');\n\n        let index = parseInt(arg0);\n        let amount = 1;\n        let cost = paritioner_cost(this.engine.datamap, index);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_maxBuyAmount(index, this.engine.datamap);\n        let cost = paritioner_buyNCost(index, this.engine.datamap, amount);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    recruitHalfMaxParitioner(arg0: string) {\n        let index = parseInt(arg0);\n        let amount = paritioner_buyHalfMax_amount(index, this.engine.datamap);\n        let cost = paritioner_buyNCost(index, this.engine.datamap, amount);\n\n        if (this.engine.datamap.prophetData.devotion >= cost) {\n            this.engine.datamap.prophetData.devotion -= cost;\n            this.engine.datamap.prophetData.congregation.paritioners[index] += amount;\n        }\n    }\n\n    dayTriggerParitioners(days: number) {\n        if (this.engine.datamap.prophetData.congregation.paritioners[0] > 0) this.proudDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[1] > 0) this.wealthDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[2] > 0) this.curiousDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[3] > 0) this.smartDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[4] > 0) this.dumbDay(days)\n        if (this.engine.datamap.prophetData.congregation.paritioners[5] > 0) this.badDay(days)\n    }\n\n    dailyBelieverGain(days:number) {\n        this.engine.datamap.prophetData.believers += this.data.DPUpgrades.dailyBelieverGain;\n    }\n\n    proudDay(days: number) {\n        this.engine.datamap.prophetData.believers += proudBeliever_believer_gain(this.engine.datamap) * days\n    }\n    wealthDay(days: number) {\n        this.engine.datamap.prophetData.congregation.USD += WealthyBeliever_USD_gain(this.engine.datamap) * days\n        this.engine.datamap.prophetData.believers += WealthyBeliever_Believer_gain(this.engine.datamap) * days\n    }\n    curiousDay(days: number) {\n        this.engine.datamap.prophetData.congregation.questions += this.engine.datamap.prophetData.congregation.paritioners[2] * days\n    }\n    smartDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity += this.engine.datamap.prophetData.congregation.paritioners[3] * days\n    }\n    dumbDay(days: number) {\n        this.engine.datamap.prophetData.congregation.crediblity -= this.engine.datamap.prophetData.congregation.paritioners[4] * days\n    }\n    badDay(days: number) {\n        this.engine.datamap.prophetData.ex_believers = Math.max(0, this.engine.datamap.prophetData.ex_believers - this.engine.datamap.prophetData.congregation.paritioners[5] * days)\n    }\n\n    unlockAdornments() {\n        let data = this.engine.datamap;\n        if (UnlockAdornments_able(data) === false) return;\n        else {\n            data.prophetData.devotion -= UnlockAdornments_cost(data)\n            data.followers.adornmentsUnlocked = true;\n        }\n    }\n}\n\nexport interface FollowerData {\n    faithfulCongregation: boolean;\n    adornmentsUnlocked: boolean;\n    devotedPrestige: number;\n    DPUpgrades: DPUpgrades_Data;\n}\n\n\nexport function followerDataInit() {\n    return {\n        faithfulCongregation: false,\n        adornmentsUnlocked: false,\n        devotedPrestige: 0,\n        DPUpgrades: DPUpgrades_Init()\n    }\n}\n\nexport interface DPUpgrades_Data {\n    reset: boolean;\n    dailyBelieverGain: number;\n    heavyHolyPower: number;\n    superHolyPump: number;\n    fasterRelicProduction: number;\n    monthMultiplier: number;\n    yearMultiplier: number;\n}\n\nexport function DPUpgrades_Init () {\n    return {\n        reset: false,\n        dailyBelieverGain: 0,\n        heavyHolyPower: 0,\n        superHolyPump: 0,\n        fasterRelicProduction: 0,\n        monthMultiplier: 0,\n        yearMultiplier: 0\n    }\n}\n\nexport function devotion_mult(data: Datamap) {\n    let base = Math.log(data.prophetData.devotion + 1) + 1;\n    base += base * data.holinessUpgrades.buildingMulti;\n    return base\n    /**\n    let devotion = data.prophetData.devotion\n    const CUTOFF = 10000\n    let base = Math.sqrt(devotion) + 1\n    if (base > CUTOFF) {\n        let rest = Math.sqrt(Math.sqrt(devotion - CUTOFF * CUTOFF))\n        return rest + CUTOFF\n    }\n    return base\n    /**/\n}\n\n\n//clergy\n\n//preacher\n\nexport function preacher_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preachers;\n    return Math.pow(10, count) + 10;\n}\nfunction preacher_cmd_able(data: Datamap) {\n    return (data.prophetData.believers >= 1) && (data.prophetData.holiness > preacher_cost(data))\n}\nexport const recruit_preacher_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit preacher',\n    able: preacher_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function preacher_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.preacherLevel;\n    return Math.pow(4, count) + 10;\n}\nfunction preacher_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > preacher_upgrade_cost(data))\n}\nexport const upgrade_preacher_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade preacher',\n    able: preacher_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n///devotee\n\nexport function devotee_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devotee + 1;\n    return Math.pow(3, count) + 5\n}\nfunction devotee_cmd_able(data: Datamap) {\n    return (data.prophetData.believers >= 1) && (data.prophetData.holiness > devotee_cost(data))\n}\nexport const recruit_devotee_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit devotee',\n    able: devotee_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function devotee_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.devoteeLevel;\n    return Math.pow(5, count) + 5\n}\nfunction devotee_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > devotee_upgrade_cost(data))\n}\nexport const upgrade_devotee_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade devotee',\n    able: devotee_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n//door knocker\n\nexport function doorknocker_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknocker;\n    return Math.pow(2, count) + 10\n}\nfunction doorknocker_cmd_able(data: Datamap) {\n    return (data.prophetData.believers >= 1) && (data.prophetData.holiness > doorknocker_cost(data))\n}\nexport const recruit_doorknocker_cmd: DecoupledCommand = {\n    name: 'Recruit',\n    command: 'followers recruit doorknocker',\n    able: doorknocker_cmd_able,\n    hidden: () => { return false }\n}\n\n\n\nexport function doorknocker_upgrade_cost(data: Datamap) {\n    let count = data.prophetData.congregation.doorknockerLevel;\n    return Math.pow(4, count) + 10\n}\nfunction doorknocker_upgrade_cmd_able(data: Datamap) {\n    return (data.prophetData.holiness > doorknocker_upgrade_cost(data))\n}\nexport const upgrade_doorknocker_cmd: DecoupledCommand = {\n    name: 'Upgrade',\n    command: 'followers upgrade doorknocker',\n    able: doorknocker_upgrade_cmd_able,\n    hidden: () => { return false }\n}\n\n\n//paritioners\n\nexport const ParitionerExpos: ExpoCurve[] = [\n    { coefficient: 1.02, initial: 1000 },\n    { coefficient: 1.04, initial: 1000000 },\n    { coefficient: 1.06, initial: 1000000000 },\n    { coefficient: 1.08, initial: 1000000000000 },\n    { coefficient: 1.10, initial: 1000000000000000 },\n    { coefficient: 1.12, initial: 1000000000000000000 },\n]\n\nexport const Paritioners: ParitionerStats[] = [\n    { name: 'Proud Believers', expo: ParitionerExpos[0] },\n    { name: 'Wealthy Believers', expo: ParitionerExpos[1] },\n    { name: 'Curious Believers', expo: ParitionerExpos[3] },\n    { name: 'Educated Believers', expo: ParitionerExpos[2] },\n    { name: 'Political Believers', expo: ParitionerExpos[4] },\n    { name: 'Violent Believers', expo: ParitionerExpos[5] },\n]\n\ninterface ParitionerStats {\n    expo: ExpoCurve;\n    name: string;\n}\n\nexport function paritioner_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.congregation.paritioners[index];\n    return expoI_getCost(Paritioners[index].expo, owned)\n}\n\nexport function paritioner_able(data: Datamap, index: number) {\n    let costable = paritioner_cost(data, index) <= data.prophetData.devotion\n    let peopleable =  availablePeople(data) > 0;\n    return costable && peopleable;\n}\nexport function paritioner_maxBuyAmount(index: number, data: Datamap) {\n    let costbound = expoI_maxBuyAmount(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n    let peopleBound = availablePeople(data);\n    return Math.min(costbound, peopleBound)\n}\n\nexport function paritioner_maxBuyCost(index: number, data: Datamap) {\n    let costbound = expoI_maxBuyCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], data.prophetData.devotion)\n    let peopleBound = expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], paritioner_maxBuyAmount(index, data))\n    return Math.min(costbound, peopleBound)\n}\n\nexport function paritioner_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], n)\n}\n\nexport function paritioner_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(Paritioners[index].expo, data.prophetData.congregation.paritioners[index], next)\n}\n\nexport function paritioner_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = paritioner_buyNCost(index, data, n);\n    return data.prophetData.devotion >= cost\n}\n\nexport function paritioner_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.congregation.paritioners[index];\n    let n = next - k % next;\n    return paritioner_canBuyN(index, data, n);\n}\n\nexport function paritioner_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = paritioner_maxBuyAmount(index, data);\n    let half = Math.floor(full / 2);\n    return half;\n}\n\nexport function paritioner_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = paritioner_buyHalfMax_amount(index, data);\n    return paritioner_buyNCost(index, data, half)\n}\n\nexport function proudBeliever_believer_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[0]\n    if (data.prophetData.devotionUpgrades.def.a) gain = gain * 2\n    gain += gain * data.prophetData.congregation.USDUpgrades.pamphlets\n    gain += gain * data.followers.DPUpgrades.dailyBelieverGain;\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain);\n    return realGain;\n}\n\nexport function WealthyBeliever_USD_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[1];\n    gain += gain * data.prophetData.congregation.USDUpgrades.tithe;\n    gain += gain * .10 * data.pantheon.wealth.a\n\n    return Math.floor(gain);\n}\n\nexport function dailyBelieverMult (data :Datamap) {\n    let mult = 1;\n}\n\nexport function WealthyBeliever_Believer_gain(data: Datamap) {\n    let gain =  data.prophetData.congregation.paritioners[1] / 100;\n    gain = gain * data.pantheon.wealth.b;\n    gain += gain * data.prophetData.congregation.USDUpgrades.tithe;\n    gain += gain * data.followers.DPUpgrades.dailyBelieverGain;\n    if (data.prophetData.devotionUpgrades.def.a) gain = gain * 2\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain);\n    return Math.floor(realGain);\n}\n\nexport function UnlockAdornments_cost(data: Datamap) {\n    return 1e10\n}\nexport function UnlockAdornments_able(data: Datamap) {\n    return data.prophetData.devotion >= UnlockAdornments_cost(data)\n}\nexport const UnlockAdornments: DecoupledCommand = {\n    command: 'followers unlock adornments',\n    name: \"Unlock Adornments\",\n    hidden: (data) => { return data.prophetData.congregation.paritioners[1] === 0 || data.followers.adornmentsUnlocked },\n    able: UnlockAdornments_able,\n}\n\nexport function getDivinity(data: Datamap) {\n    return data.followers.devotedPrestige\n}\n\nexport function availableDivinity(data: Datamap) {\n    return getDivinity(data) - spentDivinity(data);\n}\n\nexport function spentDivinity (data: Datamap) {\n    let base = 0;\n    let dpu = DP_Upgrades;\n    base += specificSpentDivinity(data, DP_Upgrades.DP_beliverGain);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_fasterRelicProduction);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_heavyHolyPower);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_monthMultiplier);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_superHolyPump);\n    base += specificSpentDivinity(data, DP_Upgrades.DP_yearMultiplier);\n    return base;\n}\n\nexport function specificSpentDivinity (data: Datamap, dp : DivinityPurchase ) {\n    return expoI_buyNCost(dp.expo, 0, dp.countFn(data))\n}\n\nexport interface DivinityPurchase {\n    command: DecoupledCommand;\n    expo: ExpoCurve;\n    countFn: (data: Datamap) => number;\n    action: (data: Datamap) => void;\n    description: string;\n}\n\n\nexport function buy_divinityPurchase(data: Datamap, divinityPurcase: DivinityPurchase) {\n    if (dp_able(data, divinityPurcase) === false) { return; }\n    else {\n        divinityPurcase.action(data)\n    }\n}\n\nexport function divinityPurcase_getCost(data: Datamap, divinityPurcase: DivinityPurchase) {\n    return expoI_getCost(divinityPurcase.expo, divinityPurcase.countFn(data))\n\n}\n\nexport function dp_able(data: Datamap, dp: DivinityPurchase) {\n    return divinityPurcase_getCost(data, dp) <= availableDivinity(data);\n}\nexport function dp_key(dp: DivinityPurchase) {\n    return dp.command.command.split(' ')[2]\n}\n\nexport function tierOne_Divinity_hidden(data: Datamap): boolean {\n    return getDivinity(data) === 0\n}\n\n\n\nconst believerGain_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction believerGain_count(data: Datamap): number {\n    return data.followers.DPUpgrades.dailyBelieverGain;\n}\nexport const DP_beliverGain: DivinityPurchase = {\n    command: {\n        command: 'followers divinity believergain',\n        name: `x2 Daily Believer Gain`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: believerGain_expo,\n    countFn: believerGain_count,\n    description: 'Gain 100% increased believers each day',\n    action: (data) => {\n        data.followers.DPUpgrades.dailyBelieverGain++;\n    }\n}\n\nconst heavyHolyPower_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction heavyHolyPower_count(data: Datamap): number {\n    return data.followers.DPUpgrades.heavyHolyPower;\n}\nexport const DP_heavyHolyPower: DivinityPurchase = {\n    command: {\n        command: 'followers divinity heavyholypower',\n        name: `Holy Power Effect and Decay`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: heavyHolyPower_expo,\n    countFn: heavyHolyPower_count,\n    description: 'Holy Power decays 100% faster and gives 100% increased Relic Production Multiplier',\n    action: (data) => {\n        data.followers.DPUpgrades.heavyHolyPower++;\n    }\n}\n\nconst superHolyPump_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction superHolyPump_count(data: Datamap): number {\n    return data.followers.DPUpgrades.superHolyPump;\n}\nexport const DP_superHolyPump: DivinityPurchase = {\n    command: {\n        command: 'followers divinity superholypump',\n        name: `10x Holy Power from Prayer`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: superHolyPump_expo,\n    countFn: superHolyPump_count,\n    description: '900% more Holy Power from prayer',\n    action: (data) => {\n        data.followers.DPUpgrades.superHolyPump++;\n    }\n}\n\nconst fasterRelicProduction_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction fasterRelicProduction_count(data: Datamap): number {\n    return data.followers.DPUpgrades.fasterRelicProduction;\n}\nexport const DP_fasterRelicProduction: DivinityPurchase = {\n    command: {\n        command: 'followers divinity fasterrelicproduction',\n        name: `Faster Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: fasterRelicProduction_expo,\n    countFn: fasterRelicProduction_count,\n    description: '10% faster relic production',\n    action: (data) => {\n        data.followers.DPUpgrades.fasterRelicProduction++;\n    }\n}\n\nconst monthMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction monthMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.monthMultiplier;\n}\nexport const DP_monthMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity monthmultiplier',\n        name: `Month Based Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: monthMultiplier_expo,\n    countFn: monthMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with year based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.monthMultiplier++;\n    }\n}\n\nconst yearMultiplier_expo: ExpoCurve = {\n    initial: 1,\n    coefficient: 4,\n}\nfunction yearMultiplier_count(data: Datamap): number {\n    return data.followers.DPUpgrades.yearMultiplier;\n}\nexport const DP_yearMultiplier: DivinityPurchase = {\n    command: {\n        command: 'followers divinity yearmultiplier',\n        name: `Year Based Relic Production`,\n        hidden: tierOne_Divinity_hidden,\n    },\n    expo: yearMultiplier_expo,\n    countFn: yearMultiplier_count,\n    description: '100% more Relic Production Multiplier per level per Year, additive with month based bonus',\n    action: (data) => {\n        data.followers.DPUpgrades.yearMultiplier++;\n    }\n}\n\n\nexport const DP_Upgrades = {\n    DP_beliverGain, DP_fasterRelicProduction, DP_heavyHolyPower,\n    DP_monthMultiplier, DP_superHolyPump, DP_yearMultiplier\n}","\nimport ExpoCurve, { expoI_buyNextCost, expoI_maxBuyCost, expoI_maxBuyAmount, expoI_getCost, expoI_buyNCost } from \"../interfaces/ExpoCurve\";\n\nimport { Datamap } from \"../Datamap\";\n\nexport const RelicUSDUpgradeExpos: ExpoCurve[] = [\n    { coefficient: 3.0, initial: 150 },\n    { coefficient: 2.8, initial: 140 },\n    { coefficient: 2.6, initial: 130 },\n    { coefficient: 2.4, initial: 120 },\n    { coefficient: 2.2, initial: 110 },\n    { coefficient: 2.0 , initial: 1000 },\n    { coefficient: 1.8, initial: 2000 },\n    { coefficient: 1.6, initial: 3000 },\n    { coefficient: 1.4, initial: 4000 },\n    { coefficient: 1.2, initial: 5000 },\n]\n\nexport function relicUSDupgrade_cost(data: Datamap, index: number) {\n    let owned = data.prophetData.relicUSDUpgrades[index];\n    return expoI_getCost(RelicUSDUpgradeExpos[index], owned)\n}\n\nexport function relicUSDupgrade_able(data: Datamap, index: number) {\n    return relicUSDupgrade_cost(data, index) <= data.prophetData.congregation.USD\n}\nexport function relicUSDupgrade_maxBuyAmount(index: number, data: Datamap) {\n    return expoI_maxBuyAmount(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_maxBuyCost(index: number, data: Datamap) {\n    return expoI_maxBuyCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], data.prophetData.congregation.USD)\n}\n\nexport function relicUSDupgrade_buyNCost(index: number, data: Datamap, n: number) {\n    return expoI_buyNCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], n)\n}\n\nexport function relicUSDupgrade_buyNextCost(index: number, data: Datamap, next: number) {\n    return expoI_buyNextCost(RelicUSDUpgradeExpos[index], data.prophetData.relicUSDUpgrades[index], next)\n}\n\nexport function relicUSDupgrade_canBuyN(index: number, data: Datamap, n: number) {\n    let cost = relicUSDupgrade_buyNCost(index, data, n);\n    return data.prophetData.congregation.USD >= cost\n}\n\nexport function relicUSDupgrade_canBuyNext(index: number, data: Datamap, next: number) {\n    let k = data.prophetData.relicUSDUpgrades[index];\n    let n = next - k % next;\n    return relicUSDupgrade_canBuyN(index, data, n);\n}\n\nexport function relicUSDupgrade_buyHalfMax_amount(index: number, data: Datamap) {\n    let full = relicUSDupgrade_maxBuyAmount(index, data);\n    let half = Math.floor(full/2);\n    return half;\n}\n\nexport function relicUSDupgrade_buyHalfMax_cost(index: number, data: Datamap) {\n    let half = relicUSDupgrade_buyHalfMax_amount(index, data);\n    return relicUSDupgrade_buyNCost(index, data, half)\n}","import { Datamap } from \"../Datamap\";\n\nconst ITEM_POWERS = {\n    effective_devotee_mult, devotee_power_mult, prayer_upgrades\n}\n\nexport default ITEM_POWERS;\n   \n   function effective_devotee_mult (data: Datamap) {\n       if (data.adornments.equiped.book) {\n           if (data.adornments.equiped.book.origin = 'ruins') {\n               return data.adornments.equiped.book.level + 1;\n           }\n       }\n       return 1;\n   }\n   \n   function devotee_power_mult (data: Datamap) {\n       if (data.adornments.equiped.ring) {\n           if (data.adornments.equiped.ring.origin = 'ruins') {\n               return data.adornments.equiped.ring.level + 1;\n           }\n       }\n       return 1;\n   }\n\n   function prayer_upgrades (data: Datamap) {\n    let eq = data.adornments.equiped;\n    if (eq.cane) {\n        if (eq.cane.origin == 'ruins') {\n            data.prophetData.believers += eq.cane.level\n        }\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\n\ninterface TimePantheonUpgradeSet extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\nconst TimePantheonUpgrades: TimePantheonUpgradeSet = {\n    key: 'time',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.time,\n}\nexport const ThisPantheon = TimePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% Faster Relics`,\n    }, expo: { coefficient: 100, initial:  1e20},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `Each upgrade provides .1 seconds per second more time for relics`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% Faster Days`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `Each upgrade provides .1 seconds per second more time for days`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% Chance for Double Days`,\n    }, expo: { coefficient: 100, initial: 1e30},\n    countFn: (data)=>ThisPantheon.getData(data).c,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).c += count;\n    },\n    description: `10% Chance for 2 Days worth of (positive and negative) effects instead of 1.`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number,\n    bonusDays: number;\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0,\n        bonusDays: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\ninterface ProductionPantheonUpgradeSet extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\nconst ProductionPantheonUpgrades: ProductionPantheonUpgradeSet = {\n    key: 'production',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.production,\n}\nexport const ThisPantheon = ProductionPantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10x Maximum Holy Power`,\n    }, expo: { coefficient: 100, initial:  1e20},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10x Maximum Holy Power`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `2x Holy Power Effectiveness`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `2x Holy Power Effectiveness`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `Add 1s to God of Production's power`,\n    }, expo: { coefficient: 100, initial: 1e30},\n    countFn: (data)=>ThisPantheon.getData(data).c,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).c += count;\n    },\n    description: `+1s of Relic Production from Prayer. Doesn't work without the God of Production`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'wealth',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.wealth,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% more USD from Wealthy Believers`,\n    }, expo: { coefficient: 100, initial:  1e20},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: ``,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `Wealthy Believers Also Recruit Believers`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: ``,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `5% less salary for explorer`,\n    }, expo: { coefficient: 100, initial: 1e30},\n    countFn: (data)=>ThisPantheon.getData(data).c,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).c += count;\n    },\n    description: ``,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'persuasion',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.persuasion,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% Faster Relics`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10% Faster Relics`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% Shorter Days`,\n    }, expo: { coefficient: 100, initial:  1e30},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Shorter (from 12s) days!`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% Chance for Double Days`,\n    }, expo: { coefficient: 100, initial: 1e35},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Chance for 2 Days worth of (positive and negative) effects instead of 1.`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'maintainance',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.maintainance,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% Faster Relics`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10% Faster Relics`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% Shorter Days`,\n    }, expo: { coefficient: 100, initial:  1e30},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Shorter (from 12s) days!`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% Chance for Double Days`,\n    }, expo: { coefficient: 100, initial: 1e35},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Chance for 2 Days worth of (positive and negative) effects instead of 1.`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { Datamap } from \"../../Datamap\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\nimport ExpoCurve, { expoI_getCost } from \"../../interfaces/ExpoCurve\";\nimport { BasePanteonUpgradeSet, BasePantheonUpgrade, buy_pantheonPurchase, buyMax_pantheonPurchase } from \"./Types\";\n\ninterface LocalPantheon extends BasePanteonUpgradeSet {\n    getData: (data: Datamap) => UpgradeData\n}\n\n//JUST EDIT THIS!\nconst EditMePantheonUpgrades: LocalPantheon = {\n    key: 'greed ',\n    do: doPantheonUpgrade,\n    getData: (data) => data.pantheon.greed,\n}\n\nexport const ThisPantheon = EditMePantheonUpgrades;\n\n\nfunction doPantheonUpgrade(data: Datamap, command: string) {\n\n\n    switch (command) {\n        case 'a':\n            buy_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'b':\n            buy_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'c':\n            buy_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        case 'amax':\n            buyMax_pantheonPurchase(data, Upgrade_A);\n            break;\n\n        case 'bmax':\n            buyMax_pantheonPurchase(data, Upgrade_B);\n            break;\n\n        case 'cmax':\n            buyMax_pantheonPurchase(data, Upgrade_C);\n            break;\n\n        default:\n            break;\n    }\n}\n\n\nexport const Upgrade_A: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} a`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 1`,\n        change: (data) => `10% Faster Relics`,\n    }, expo: { coefficient: 100, initial:  1e25},\n    countFn: (data)=>ThisPantheon.getData(data).a,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).a += count;\n    },\n    description: `10% Faster Relics`,\n}\n\nexport const Upgrade_B: BasePantheonUpgrade = {\n    command: {\n        command: (data) => `pantheon ${ThisPantheon.key} b`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 2`,\n        change: (data) => `10% Shorter Days`,\n    }, expo: { coefficient: 100, initial:  1e30},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count=1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Shorter (from 12s) days!`,\n\n}\n\nexport const Upgrade_C: BasePantheonUpgrade = {\n    command: {\n\n        command: (data) => `pantheon ${ThisPantheon.key} c`,\n        name: (data) => `God of ${ThisPantheon.key} upgrade 3`,\n        change: (data) => `10% Chance for Double Days`,\n    }, expo: { coefficient: 100, initial: 1e35},\n    countFn: (data)=>ThisPantheon.getData(data).b,\n    action: (data, count =1)=>{ \n        ThisPantheon.getData(data).b += count;\n    },\n    description: `10% Chance for 2 Days worth of (positive and negative) effects instead of 1.`,\n\n}\n\nexport interface UpgradeData {\n    a: number,\n    b: number,\n    c: number\n}\n\nexport function UpgradeData_init(): UpgradeData {\n    return {\n        a: 0, b: 0, c: 0\n    }\n}","import { ABC_bought } from \"../DevotionPurchases\";\nimport { Datamap } from \"../../Datamap\";\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\n\n\nimport * as TIME from './Time';\nimport * as PRODUCTION from './Production';\nimport * as WEALTH from './Wealth';\n\nimport * as PERSUASION from './Persuasion';\nimport * as MAINTAINANCE from './Maintainance';\nimport * as GREED from './Greed';\n\nexport default {TIME, PRODUCTION, WEALTH, PERSUASION, MAINTAINANCE, GREED}\n\nexport const PANTHEON_COST = 5e4;\nexport const UnlockPantheonCommand: DecoupledCommand2 = {\n    name: ()=>\"Unlock Pantheon Upgrades\",\n    hidden: (data)=>!ABC_bought(data) || data.pantheon.unlocked,\n    able: (data)=>data.prophetData.congregation.USD > PANTHEON_COST,\n    cost: ()=>PANTHEON_COST,\n    command: ()=>\"pantheon unlock\",\n    costName: 'USD',\n    tip: `Pantheon upgrades persist through Reincarnation`\n}\n","import ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_buyNCost } from \"../../interfaces/ExpoCurve\";\n\nimport { DecoupledCommand2 } from \"../../interfaces/ICommand\";\n\nimport * as TIME from './Time';\nimport * as PRODUCTION from './Production';\nimport * as WEALTH from './Wealth';\n\nimport * as PERSUASION from './Persuasion';\nimport * as MAINTAINANCE from './Maintainance';\nimport * as GREED from './Greed';\n\nimport { Datamap } from \"../../Datamap\";\nimport { PANTHEON_COST } from \"./Pantheons\";\n\n\nexport interface BasePanteonUpgradeSet {\n    key: string;\n    do: (data:Datamap, command: string) => void;\n}\n\nexport interface BasePantheonUpgrade {\n    expo: ExpoCurve,\n    command: DecoupledCommand2,\n    countFn: (data: Datamap) => number;\n    action: (data: Datamap, count: number) => void;\n    description: string;\n}\n\nexport function doPantheonUpgrade(data: Datamap, commands: string[]) {\n\n    switch (commands[1]) {\n        case 'unlock':\n            data.prophetData.congregation.USD -= PANTHEON_COST;\n            data.pantheon.unlocked = true;\n            break;\n\n        case TIME.ThisPantheon.key:\n            TIME.ThisPantheon.do(data, commands[2])\n            break;\n\n        case PRODUCTION.ThisPantheon.key:\n            PRODUCTION.ThisPantheon.do(data, commands[2])\n            break;\n\n        case WEALTH.ThisPantheon.key:\n            WEALTH.ThisPantheon.do(data, commands[2]);\n            break;\n\n        default:\n            break;\n    }\n}\n\nexport interface PantheonData {\n    unlocked: boolean;\n    \n    time: TIME.UpgradeData;\n    production: PRODUCTION.UpgradeData;\n    wealth: WEALTH.UpgradeData;\n\n    persuasion: PERSUASION.UpgradeData;\n    maintainance: MAINTAINANCE.UpgradeData;\n    greed: GREED.UpgradeData;\n}\n\nexport function PantheonData_init(): PantheonData {\n    return {\n        unlocked: false,\n        time: TIME.UpgradeData_init(), \n        production: PRODUCTION.UpgradeData_init(),\n        wealth : WEALTH.UpgradeData_init(),\n\n        persuasion : PERSUASION.UpgradeData_init(),\n        maintainance : MAINTAINANCE.UpgradeData_init(),\n        greed : GREED.UpgradeData_init(),\n    }\n}\n\n\n\nexport function buy_pantheonPurchase(data: Datamap, pantheonPurchase: BasePantheonUpgrade) {\n    if (pantheonPurchase_able(data, pantheonPurchase) === false) { return; }\n    else {\n        data.prophetData.piety -= pantheonPurchaseCost(data, pantheonPurchase)\n        pantheonPurchase.action(data, 1)\n    }\n}\n\nexport function pantheonPurchaseCost(data: Datamap, divinityPurcase: BasePantheonUpgrade) {\n    return expoI_getCost(divinityPurcase.expo, divinityPurcase.countFn(data))\n\n}\n\nexport function pantheonPurchase_able(data: Datamap, dp: BasePantheonUpgrade) {\n    return pantheonPurchaseCost(data, dp) <= data.prophetData.piety;\n}\n\nexport function pantheonPurchase_maxAmmount(data: Datamap, dp: BasePantheonUpgrade) {\n    return expoI_maxBuyAmount(dp.expo, dp.countFn(data),data.prophetData.piety);\n}\nexport function pantheonPurchase_maxCost(data: Datamap, dp: BasePantheonUpgrade) {\n    let ammount = pantheonPurchase_maxAmmount(data, dp);\n    return expoI_buyNCost(dp.expo, dp.countFn(data),ammount);\n}\n\nexport function buyMax_pantheonPurchase(data: Datamap, dp: BasePantheonUpgrade) {\n    let ammount = pantheonPurchase_maxAmmount(data,dp);\n    let cost = pantheonPurchase_maxCost(data,dp)\n\n        if (data.prophetData.piety >= cost) {\n            data.prophetData.piety -= cost;\n            dp.action(data, ammount);\n        }\n}","import ExpoCurve, { expoI_getCost, expoI_maxBuyAmount, expoI_buyNCost } from \"./ExpoCurve\";\n\nimport { DecoupledCommand2 } from \"./ICommand\";\n\nimport { Datamap } from \"../Datamap\";\nimport { ReactNode } from \"react\";\n\nexport default interface ExpoCommand {\n    expo: ExpoCurve,\n    countFns: CountFns;\n    currencyFns: CurrencyFns;\n    \n    //command: DecoupledCommand2,\n    name: string;\n    command: string;\n    currencyName?: string;\n\n    hidden: (data: Datamap) => boolean;\n\n    change?: (data: Datamap) => string;\n    img?: string;\n    tip?: ReactNode;\n}\n\nexport interface CountFns {\n    get: (data: Datamap) => number;\n    gain: (data: Datamap, ammount: number) => void;\n}\n\nexport interface CurrencyFns {\n    get: (data: Datamap) => number;\n    spend: (data: Datamap, ammount: number) => void;\n}\n\nexport const CurrencyFn_USD: CurrencyFns = {\n    get: (data: Datamap) => data.prophetData.congregation.USD,\n    spend: (data: Datamap, ammount: number) => { data.prophetData.congregation.USD -= ammount }\n}\n\n\nexport function expoCommand_buy(data: Datamap, expoCommand: ExpoCommand) {\n    if (expoCommand_Able(data, expoCommand) === false) { return; }\n    else {\n        expoCommand.currencyFns.spend(data, expoCommand_Cost(data, expoCommand));\n        expoCommand.countFns.gain(data, 1);\n    }\n}\n\nexport function expoCommand_Cost(data: Datamap, expoCommand: ExpoCommand) {\n    return expoI_getCost(expoCommand.expo, expoCommand.countFns.get(data))\n}\n\nexport function expoCommand_Able(data: Datamap, ep: ExpoCommand) {\n    return expoCommand_Cost(data, ep) <= ep.currencyFns.get(data);\n}\n\nexport function expoCommand_maxAmmount(data: Datamap, ep: ExpoCommand) {\n    return expoI_maxBuyAmount(ep.expo, ep.countFns.get(data), ep.currencyFns.get(data));\n}\nexport function expoCommand_maxCost(data: Datamap, ep: ExpoCommand) {\n    let ammount = expoCommand_maxAmmount(data, ep);\n    return expoI_buyNCost(ep.expo, ep.countFns.get(data), ammount);\n}\n\nexport function expoCommand_buyMax(data: Datamap, ep: ExpoCommand) {\n    let ammount = expoCommand_maxAmmount(data,ep);\n    let cost = expoCommand_maxCost(data,ep)\n\n        if (ep.currencyFns.get(data) >= cost) {\n            ep.currencyFns.spend(data, cost );\n            ep.countFns.gain(data, ammount);\n        }\n}\n\n","import { Datamap } from \"../Datamap\";\nimport { DecoupledCommand, DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport ExpoCurve from \"../interfaces/ExpoCurve\";\nimport ExpoCommand, { CurrencyFn_USD } from \"../interfaces/ExpoCommand\";\n\n\nexport const USD_UpgradeTithe: ExpoCommand = {\n    name: `Invest in Tithe Extraction`,\n    command: `prophet usdupgrade tithe`,\n    currencyName: `USD`,\n    \n    countFns: {\n        get: (data) => data.prophetData.congregation.USDUpgrades.tithe,\n        gain: (data, ammount) => { data.prophetData.congregation.USDUpgrades.tithe += ammount }\n    },\n    expo: { initial: 100, coefficient: 15 },\n    currencyFns: CurrencyFn_USD,\n    tip: `Increase Effectiveness of Wealthy Believers`,\n\n    hidden: (data) => data.prophetData.congregation.paritioners[1] === 0,\n}\n\nexport const USD_Upgrade_Pamphlets: ExpoCommand = {\n    name: `Invest in 'Why Us?' Pamphlets`,\n    command: `prophet usdupgrade pamphlets`,\n    currencyName: `USD`,\n    \n    countFns: {\n        get: (data) => data.prophetData.congregation.USDUpgrades.pamphlets,\n        gain: (data, ammount) => { data.prophetData.congregation.USDUpgrades.pamphlets += ammount }\n    },\n    expo: { initial: 5000, coefficient: 300 },\n    tip: `Increase Effectiveness of Proud Believer`,\n    currencyFns: CurrencyFn_USD,\n\n    hidden: (data) => data.prophetData.congregation.USDUpgrades.tithe === 0,\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { getRandomInt, WORLD_POP } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport { piety_purchase_buy_congregation, piety_purchase_buy_reincarnation, piety_purchase_buy_holypower, holiness_holyPowerUpgrade_do, holiness_holyPumpUpgrade_do, holiness_maxHolyPowerUpgrade_do, holiness_believerRetention_do, holiness_exRelations_do, holiness_buildingMulti_do, holinessUpgradesInit, UnlockMiracles, holiness_devotionEffectiveness_do } from \"./PietyPurchases\";\nimport { devotion_mult, DP_Upgrades, DPUpgrades_Init } from \"./Followers\";\nimport { relicUSDupgrade_cost } from \"./USDRelicPurchases\";\nimport { DevotionUpgradeData, DevotionUpgradeData_init } from \"./DevotionPurchases\";\nimport ITEM_POWERS from \"./ItemPowers\";\nimport { PantheonData_init } from \"./Pantheon/Types\";\nimport { expoCommand_buy, expoCommand_buyMax } from \"../interfaces/ExpoCommand\";\nimport { USD_UpgradeTithe, USD_Upgrade_Pamphlets } from \"./USDPurchases\";\n\nexport default class ProphetModule {\n\n    constructor(public engine: Engine) {\n\n    }\n\n    get data() {\n        return this.engine.datamap.prophetData;\n    }\n\n    processCommands(cmdArray: string[]) {\n        switch (cmdArray[1]) {\n            case 'pray':\n                this.pray();\n                break;\n\n            case 'proselytize':\n                this.proselytize();\n                break;\n\n            case 'preach':\n                this.preach();\n                break;\n\n            case 'relicupgrade':\n                this.upgradeRelic(cmdArray[2])\n                break;\n\n\n            case 'buyrelic':\n                this.buyRelic(cmdArray[2]);\n                break;\n\n            case 'buymaxrelic':\n                this.buyMaxRelic(cmdArray[2]);\n                break;\n\n            case 'buyto25relic':\n                this.buyToNRelic(cmdArray[2], 25);\n                break;\n\n            case 'setbuyrelic':\n                switch (cmdArray[2]) {\n                    case '1':\n                        this.data.relicsetbuy = 1;\n                        break;\n\n                    case '25':\n                        this.data.relicsetbuy = 25;\n                        break;\n\n                    case 'max':\n                        this.data.relicsetbuy = 99;\n\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            case 'prestige':\n                this.prestige();\n                break;\n\n            case 'devotedprestige':\n                this.devotedprestige();\n                break;\n\n            case 'congregate':\n                piety_purchase_buy_congregation(this.engine.datamap)\n                break;\n\n            case 'reincarnate':\n                piety_purchase_buy_reincarnation(this.engine.datamap)\n                break;\n\n            case 'holypower':\n                piety_purchase_buy_holypower(this.engine.datamap)\n                break;\n\n            case 'holypowerUpgrade':\n                holiness_holyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'holypumpupgrade':\n                holiness_holyPumpUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'maxholypowerupgrade':\n                holiness_maxHolyPowerUpgrade_do(this.engine.datamap);\n                break;\n\n            case 'believerretentionupgrade':\n                holiness_believerRetention_do(this.engine.datamap);\n                break;\n\n            case 'exrelationsupgrade':\n                holiness_exRelations_do(this.engine.datamap);\n                break;\n\n            case 'bmupgrade':\n                holiness_buildingMulti_do(this.engine.datamap);\n                break;\n\n            case 'de_upgrade':\n                holiness_devotionEffectiveness_do(this.engine.datamap);\n                break;\n\n            case 'unlockmiracles':\n                this.engine.datamap.rocketData.unlocked = true;\n                if (UnlockMiracles.cost) this.engine.datamap.prophetData.piety -= UnlockMiracles.cost(this.engine.datamap);\n                break;\n\n            case 'usdupgrade':\n                switch (cmdArray[2]) {\n                    case 'tithe':\n                        expoCommand_buy(this.engine.datamap, USD_UpgradeTithe)\n                        break;\n\n                    case 'tithemax':\n                        expoCommand_buyMax(this.engine.datamap, USD_UpgradeTithe);\n                        break;\n\n                    case 'pamphlets':\n                        expoCommand_buy(this.engine.datamap, USD_Upgrade_Pamphlets)\n                        break;\n\n                    case 'pamphletsmax':\n                        expoCommand_buyMax(this.engine.datamap, USD_Upgrade_Pamphlets);\n                        break;\n                \n                    default:\n                        console.log('broken in prophet->usdupgrade');\n                        \n                        break;\n                }\n                break\n\n            default:\n                console.log('broke in prophet comand');\n\n                break;\n        }\n    }\n\n    upgradeRelic(arg0: string) {\n        let upgradeIndex = parseInt(arg0);\n        let cost = relicUSDupgrade_cost(this.engine.datamap, upgradeIndex);\n\n        if (this.data.congregation.USD >= cost) {\n            this.data.congregation.USD -= cost;\n            this.data.relicUSDUpgrades[upgradeIndex]++;\n        }\n    }\n\n\n    buyRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_getCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex]++;\n        }\n    }\n\n    buyMaxRelic(arg0: string) {\n        let relicIndex = parseInt(arg0);\n        let ammount = relic_maxBuyAmount(relicIndex, this.engine.datamap)\n        let cost = relic_maxBuyCost(relicIndex, this.engine.datamap);\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += ammount;;\n        }\n    }\n\n    buyNRelic(arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, n)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += n;\n        }\n    }\n\n    buyToNRelic(arg0: string, n: number) {\n        let relicIndex = parseInt(arg0);\n        let remainder = this.data.relics[relicIndex] % n;\n        let needToN = n - remainder;\n\n        let cost = relic_buyNCost(relicIndex, this.engine.datamap, needToN)\n\n        if (this.data.piety >= cost) {\n            this.data.piety -= cost;\n            this.data.relics[relicIndex] += needToN;\n        }\n    }\n\n    dayTrigger(days: number) {\n\n        \n\n        if (this.data.holyPower > 0) this.holyDump(days);\n\n        if (this.data.congregation.doorknocker > 0) this.doorknockers(days);\n        this.engine.followers.dayTriggerParitioners(days);\n        if (this.data.believers > 0) this.believersLeave(days);\n\n\n        if (this.data.congregation.preachers > 0) this.preachers(days);\n        if (this.data.congregation.devotee > 0) this.devotees(days);\n\n        if (this.engine.datamap.automation.auto_buyToNext && this.data.congregation.unlocked) {\n            this.engine.followers.recruit_doorknocker_max();\n            this.engine.followers.recruit_devotee_max();\n            this.engine.followers.recruit_preacher_max();\n        }\n        \n    }\n\n    devotees(days: number) {\n        this.data.devotion += devotee_devotion_gain(this.engine.datamap) * days\n    }\n\n    doorknockers(days: number) {\n        this.data.believers += (doorknocker_beliver_gain(this.engine.datamap)) * days\n    }\n\n    believersLeave = (days: number) => {\n        for (let i = 0; i < days; i++) {\n\n            let loss = getRandomInt(0, helper_prophet_maxBelieversDecay(this.engine.datamap));\n            let boundLoss = Math.min(this.data.believers, loss)\n            this.data.ex_believers += boundLoss;\n            this.data.believers -= boundLoss;\n\n        }\n    }\n\n    holyDump = (days: number) => {\n        if (this.data.devotionUpgrades.def.b) return;\n        this.data.holyPower = Math.max(this.data.holyPower - (24 * (1 + this.engine.datamap.followers.DPUpgrades.heavyHolyPower)), 0);\n    }\n\n    preachers(days: number) {\n        let gain = getRandomInt(0, preachers_max_deovtion_gain(this.engine.datamap));\n\n        this.data.devotion += gain * days;\n    }\n\n    preach() {\n        this.data.devotion += getRandomInt(0, preach_max_deovtion_gain(this.engine.datamap));\n    }\n\n    proselytize() {\n        if (this.engine.datamap.prophetData.holiness === 0) return;\n        this.engine.datamap.prophetData.holiness--;\n        let gain = getRandomInt(0, helper_prophet_maxBeliverGainNet(this.engine.datamap));\n        this.data.believers += gain;\n    }\n\n    pray() {\n        this.data.piety++;\n        if (this.data.holyPowerUnlocked) {\n            this.holyPump();\n        }\n        if (this.data.devotionUpgrades.abc.b) {\n            let delta = 1000;\n            delta += delta * this.engine.datamap.pantheon.production.c\n            this.processDetla(delta);\n        }\n        ITEM_POWERS.prayer_upgrades(this.engine.datamap);\n        \n    }\n\n    holyPump = () => {\n        this.data.holyPower = Math.min(this.data.holyPower + 1 * Math.pow(2, this.engine.datamap.holinessUpgrades.holyPumpUpgrade) * Math.pow(10, this.engine.datamap.followers.DPUpgrades.superHolyPump), prophet_maxHolyPower(this.engine.datamap));\n    }\n\n    processDetla(delta: number) {\n\n        delta = delta * relicDeltaMult(this.engine.datamap)\n\n        RELICS.forEach((relicData, relicIndex) => {\n            if (this.data.relics[relicIndex] === 0) return;\n            this.data.relicTimers[relicIndex] += delta;\n            let timeCost = relic_getTime(relicIndex);\n\n            if (this.data.relicTimers[relicIndex] >= timeCost) {\n                let count = Math.floor(this.data.relicTimers[relicIndex] / timeCost)\n                this.data.relicTimers[relicIndex] -= timeCost * count;\n                this.data.piety += relic_getProduction(relicIndex, this.engine.datamap) * count\n            }\n        });\n\n        if (this.data.piety > this.data.maxPiety) {\n            this.data.maxPiety = this.data.piety;\n        }\n\n    }\n\n    pietyDecay(delta: number) {\n        //lookup math to simulate this over time\n        let decay = (delta / 1000) * (helper_prophet_pietyDecay(this.engine.datamap));\n        decay = Math.floor(decay);\n        return decay;\n    }\n\n    prestige = () => {\n        \n        let ppgain = prophet_prestige_gain(this.engine.datamap);\n        if (ppgain === 0 || this.data.prestigeUnlocked === false) return;\n        \n        let oldData = this.data;\n        \n        let itemDevotion = 0;\n        if (this.engine.datamap.adornments.equiped.robe) {\n            if (this.engine.datamap.adornments.equiped.robe.origin === 'ruins') {\n                itemDevotion = Math.floor(this.engine.datamap.adornments.equiped.robe.level * .01 * oldData.devotion);\n            }\n        }\n\n        let oldMult = oldData.holiness;\n        let newCount = this.data.save.reincarnationCount + 1;\n        let selected = this.data.relicsetbuy;\n        let newOld = {\n            preachers: this.data.congregation.preachers,\n            preacherLevel: this.data.congregation.preacherLevel,\n            devotee: this.data.congregation.devotee,\n            devoteeLevel: this.data.congregation.devoteeLevel,\n            doorknocker: this.data.congregation.doorknocker,\n            doorknockerLevel: this.data.congregation.doorknockerLevel,\n        }\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.data.holiness = oldMult + Math.floor(ppgain);\n        if (this.data.holiness < 0) this.data.holiness = 0;\n        this.data.startingHoliness = this.data.holiness\n        this.data.relicsetbuy = selected;\n        this.data.save.reincarnationCount = newCount;\n        this.data.congregation.old = newOld;\n        this.data.devotion += itemDevotion\n\n        this.prestigeCleanup();\n    }\n\n    devotedprestige = () => {\n        let newCount = this.data.save.reincarnationCount + 1;\n\n\n        this.engine.datamap.prophetData = init_ProphetData();\n\n        this.engine.datamap.followers.devotedPrestige++;\n        this.data.save.reincarnationCount = newCount;\n        \n        this.prestigeCleanup();\n        this.hardCleanup();\n    }\n    \n    hardCleanup = () => {\n        this.engine.datamap.pantheon = PantheonData_init();\n        this.engine.datamap.holinessUpgrades = holinessUpgradesInit()\n    }\n\n    prestigeCleanup = () => {\n        this.engine.datamap.gameTime.currentRun.time = 0;\n        this.engine.datamap.nav.mainArea = 0\n        this.engine.gameTime.reset();\n        this.engine.rocket.reset();\n        this.engine.adornments.exploring.reset();\n        if (this.engine.datamap.followers.DPUpgrades.reset) {\n            this.engine.datamap.followers.DPUpgrades = DPUpgrades_Init();\n        }\n    }\n}\n\nexport function relicDeltaMult(data:Datamap){\n    let mult = 1;\n    \n    mult += (.1 * data.followers.DPUpgrades.fasterRelicProduction)\n    mult += (.1 * data.pantheon.time.a);\n\n    return mult;\n}\n\nexport function availablePeople (data:Datamap) {\n    let congregation = data.prophetData.congregation\n    return WORLD_POP - data.prophetData.believers - data.prophetData.ex_believers - congregation.devotee - congregation.doorknocker - congregation.preachers\n}\n\nexport function preach_max_deovtion_gain(data: Datamap) {\n    return data.prophetData.believers;\n}\n\nexport function devotee_devotion_gain(data: Datamap) {\n    let count = data.prophetData.congregation.devotee\n    let power = data.prophetData.congregation.devoteeLevel + 1;\n    count = count * ITEM_POWERS.effective_devotee_mult(data);\n    power = power * ITEM_POWERS.devotee_power_mult(data);    \n    return count * power\n}\n\nexport function doorknocker_beliver_gain(data: Datamap) {\n    let gain = data.prophetData.congregation.doorknocker * (1 + data.prophetData.congregation.doorknockerLevel)\n    gain += gain * data.followers.DPUpgrades.dailyBelieverGain;\n    if (data.prophetData.devotionUpgrades.def.a) gain = gain * 2\n    let harm = helper_prophet_exBeliever_harm(data);\n    let realPossibleGain = Math.max(0, gain - harm);\n    let realGain = Math.min(availablePeople(data),realPossibleGain)\n    return realGain;\n\n}\n\nexport function preachers_max_deovtion_gain(data: Datamap) {\n    return preach_max_deovtion_gain(data) * data.prophetData.congregation.preachers * (1 + data.prophetData.congregation.preacherLevel);\n}\n\nexport function helper_prophet_maxBelieversDecay(data: Datamap) {\n    let total_power = helper_prophet_size_believerDecay(data) + helper_prophet_exBeliever_believerDecay(data);\n\n    return Math.floor(total_power)\n\n}\n\n\nexport function helper_prophet_size_believerDecay(data: Datamap) {\n    let size = data.prophetData.believers;\n    let power = size / 10;\n    let total_power = power / (1 + data.holinessUpgrades.believerRetention);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGain(data: Datamap) {\n    return Math.floor(Math.log(1 + data.prophetData.piety))\n}\n\nexport function helper_prophet_exBeliever_harm(data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex / 10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_exBeliever_believerDecay(data: Datamap) {\n    let ex = data.prophetData.ex_believers;\n    let power = ex / 10;\n    let total_power = (power) / (1 + data.holinessUpgrades.exRelations);\n    total_power = total_power / (1 + data.holinessUpgrades.believerRetention);\n    return Math.floor(total_power);\n}\n\nexport function helper_prophet_maxBeliverGainNet(data: Datamap) {\n    let gain = helper_prophet_maxBeliverGain(data);\n    let harm = helper_prophet_exBeliever_harm(data);\n    return Math.max(0, gain - harm)\n}\n\nexport function helper_prophet_pietyDecay(data: Datamap) {\n    return Math.floor(data.prophetData.piety / 10000) * data.gameTime.year;\n}\n\nexport function prophet_maxHolyPower(data: Datamap) {\n    let relics = data.prophetData.relics;\n    let sum = relics[0] + relics[1] + relics[2] + relics[3] + relics[4];\n    sum = sum * (1 + data.holinessUpgrades.maxHolyPowerUpgrade)\n    sum += sum * data.pantheon.production.a * 10\n    return sum;\n}\n\nexport interface I_PropheData {\n    piety: number;\n    devotionUpgrades: DevotionUpgradeData;\n    maxPiety: number;\n    believers: number;\n    ex_believers: number;\n    relics: number[];\n    relicsetbuy: number;\n    relicTimers: number[];\n    relicUSDUpgrades: number[];\n    holiness: number;\n    startingHoliness: number;\n    prestigeUnlocked: boolean;\n    holyPower: number;\n    devotion: number;\n    holyPowerUnlocked: boolean;\n    save: {\n        reincarnationCount: number,\n    }\n    congregation: {\n        unlocked: boolean;\n        old: {\n            preachers: number;\n            preacherLevel: number;\n            devotee: number;\n            devoteeLevel: number;\n            doorknocker: number;\n            doorknockerLevel: number;\n        }\n        preachers: number;\n        preacherLevel: number;\n        devotee: number;\n        devoteeLevel: number;\n        doorknocker: number;\n        doorknockerLevel: number;\n        USDUpgrades : {\n            tithe: number,\n            pamphlets: number,\n        }\n\n        paritioners: number[];\n\n        USD: number;\n        questions: number;\n        crediblity: number;\n\n\n\n    }\n}\n\nexport function init_ProphetData(): I_PropheData {\n    return {\n        piety: 0,\n        devotionUpgrades: DevotionUpgradeData_init(),\n        maxPiety: 0,\n        believers: 0,\n        relicsetbuy: 1,\n        ex_believers: 0,\n        relics: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        relicTimers: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        relicUSDUpgrades: [0, 0, 0, 0, 0,\n            0, 0, 0, 0, 0,],\n        save: {\n            reincarnationCount: 0\n        },\n        holiness: 0,\n        startingHoliness: 0,\n        holyPowerUnlocked: false,\n        holyPower: 0,\n        devotion: 0,\n        prestigeUnlocked: false,\n        congregation: {\n            unlocked: false,\n            USDUpgrades: {\n                tithe: 0,\n                pamphlets: 0,\n            },\n            preachers: 0,\n            preacherLevel: 0,\n            devotee: 0,\n            devoteeLevel: 0,\n            doorknocker: 0,\n            doorknockerLevel: 0,\n            old: {\n                preachers: 0,\n                preacherLevel: 0,\n                devotee: 0,\n                devoteeLevel: 0,\n                doorknocker: 0,\n                doorknockerLevel: 0,\n            },\n\n            paritioners: [0, 0, 0, 0, 0, 0],\n\n            USD: 0,\n            crediblity: 0,\n            questions: 0\n\n        }\n    }\n}\n\n\ninterface KongGenerator {\n    name: string;\n    initialCost: number;\n    coefficient: number;\n    initialTime: number;\n    initialRevenue: number;\n}\n\nconst LemonadeStand: KongGenerator = {\n    name: \"Holy Sponge\",\n    initialCost: 5,\n    coefficient: 1.12,\n    initialTime: 1,\n    initialRevenue: 1,\n}\n\nconst NewspaperDelivery: KongGenerator = {\n    name: \"Holy Thorn\",\n    initialCost: 500,\n    coefficient: 1.15,\n    initialTime: 8,\n    initialRevenue: 160,\n}\n\nconst CarWash: KongGenerator = {\n    name: \"Holy Nail\",\n    initialCost: 50000,\n    coefficient: 1.14,\n    initialTime: 24,\n    initialRevenue: 7400,\n}\n\nconst PizzaDelivery: KongGenerator = {\n    name: \"Holy Lance\",\n    initialCost: 5000000,\n    coefficient: 1.13,\n    initialTime: 2 * 24,\n    initialRevenue: 53200,\n}\n\nconst DonutShop: KongGenerator = {\n    name: \"True Cross\",\n    initialCost: 5000000000,\n    coefficient: 1.12,\n    initialTime: 7 * 24,\n    initialRevenue: 988400,\n}\n\n\nconst FakeNews1: KongGenerator = {\n    name: \"SuperSponge\",\n    initialCost: 1e15,\n    coefficient: 1.22,\n    initialTime: 1,\n    initialRevenue: 4e5,\n}\n\nconst FakeNews2: KongGenerator = {\n    name: \"Crown of Thorns\",\n    initialCost: 1e18,\n    coefficient: 1.22,\n    initialTime: 8,\n    initialRevenue: 16e6,\n}\n\nconst FakeNews3: KongGenerator = {\n    name: \"Holy Nailgun\",\n    initialCost: 1e21,\n    coefficient: 1.22,\n    initialTime: 24,\n    initialRevenue: 64e7,\n}\n\nconst FakeNews4: KongGenerator = {\n    name: \"Holier Lance\",\n    initialCost: 1e24,\n    coefficient: 1.22,\n    initialTime: 2 * 24,\n    initialRevenue: 128e8,\n}\n\nconst FakeNews5: KongGenerator = {\n    name: \"Inverted Cross\",\n    initialCost: 1e27,\n    coefficient: 1.22,\n    initialTime: 7 * 24,\n    initialRevenue: 256e9,\n}\n\n\nexport const RELICS = [LemonadeStand, NewspaperDelivery, CarWash, PizzaDelivery, DonutShop,\n    FakeNews1, FakeNews2, FakeNews3, FakeNews4, FakeNews5]\n\nexport function relic_getCost(relicIndex: number, data: Datamap) {\n    let relicData = RELICS[relicIndex];\n\n    let owned = data.prophetData.relics[relicIndex];\n    let cost_base = relicData.initialCost;\n    let coefficient = relicData.coefficient;\n\n    return Math.floor(cost_base * Math.pow(coefficient, owned))\n}\n\nexport function relic_canBuy(relicIndex: number, data: Datamap) {\n    let cost = relic_getCost(relicIndex, data);\n    return data.prophetData.piety >= cost;\n}\n\nexport function relic_getTime(relicIndex: number) {\n    return RELICS[relicIndex].initialTime * 1000;\n}\n\nexport function relic_getProduction(relicIndex: number, data: Datamap) {\n    let val = Math.floor(\n        data.prophetData.relics[relicIndex] *\n        RELICS[relicIndex].initialRevenue *\n        relic_getProductionMulti(relicIndex, data) *\n        holiness_mult(data) *\n        relic_hoylPowerMulti(data) *\n        devotion_mult(data) *\n        reincation_mult(data) *\n        special_relic_mult(relicIndex, data) *\n        item_relic_mult(relicIndex, data)\n    )\n    return val\n}\n\nexport function item_relic_mult(index:number, data :Datamap) {\n    let mult = 1;\n    let eq = data.adornments.equiped;\n    if (eq.cap) {\n        if (eq.cap.origin === 'ruins') {\n            mult += eq.cap.level;\n        }\n    }\n    return mult;\n}\n\nexport function special_relic_mult(index: number, data: Datamap) {\n    let mult = 1;\n    mult += time_relic_mult(data)\n    if (data.prophetData.devotionUpgrades.abc.c) mult = mult * (index + 1);\n    if (data.prophetData.devotionUpgrades.def.c) mult = mult * (index + 1);\n    return mult;\n}\n\nexport function time_relic_mult(data: Datamap) {\n    return year_relic_mult(data) + month_relic_mult(data)\n}\n\nexport function year_relic_mult(data: Datamap) {\n    return data.followers.DPUpgrades.yearMultiplier * data.gameTime.year\n}\n\nexport function month_relic_mult(data: Datamap) {\n    return data.followers.DPUpgrades.monthMultiplier * data.gameTime.month\n}\n\nexport function holiness_mult(data: Datamap) {\n    return CALC_holy_mult(data.prophetData.startingHoliness)\n}\n\nexport function reincation_mult(data: Datamap) {\n    return (data.prophetData.save.reincarnationCount + 1) * reincation_mult_from_superPrestiges(data)\n}\n\nexport function reincation_mult_from_superPrestiges (data:Datamap) {\n    return data.followers.devotedPrestige + 1\n}\n\nfunction CALC_holy_mult(holiness: number) {\n    //return Math.log(holiness + 1)\n    \n    const CUTOFF = 10000\n    let base = Math.sqrt(holiness) + 1\n    if (base > CUTOFF) {\n        let rest = Math.sqrt(Math.sqrt(holiness - CUTOFF * CUTOFF))\n        return rest + CUTOFF\n    }\n    return base\n}\n\nexport function next_holiness_mult(data: Datamap) {\n    return CALC_holy_mult(data.prophetData.holiness + prophet_prestige_gain(data))\n}\n\nexport function relic_getProductionPerecond(relicIndex: number, data: Datamap) {\n    return Math.floor(relic_getProduction(relicIndex, data) / RELICS[relicIndex].initialTime * relicDeltaMult(data))\n}\n\nexport function relic_hoylPowerMulti(data: Datamap) {\n    let HPPower = Math.log(data.prophetData.holyPower + 1);\n    let mult1 = data.holinessUpgrades.holypowerUpgrade + 1;\n    let mult2 = data.followers.DPUpgrades.heavyHolyPower + 1;\n    let mult3 = data.pantheon.production.b + 1;\n    let val = HPPower * mult1 * mult2 * mult3;\n    val = Math.floor(val);\n    return val + 1\n}\n\nexport const PRODMULTIPER25 = 1.5\n\nexport function Building_Multi(data: Datamap, index: number) {\n    return 1.5 + (.1 * (data.holinessUpgrades.buildingMulti + data.prophetData.relicUSDUpgrades[index]))\n}\n\nexport function relic_getProductionMulti(relicIndex: number, data: Datamap) {\n    return Math.pow(Building_Multi(data, relicIndex), Math.floor(data.prophetData.relics[relicIndex] / 25))\n}\n\nexport function relic_maxBuyAmount(relicIndex: number, data: Datamap) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n    let c = data.prophetData.piety;\n\n    let logresult = Math.log(1 + ((c * (r - 1)) / (b * Math.pow(r, k))))\n    let logchange = logresult / Math.log(r);\n    let result = Math.floor(logchange)\n\n    return result;\n}\n\nexport function prophet_prestige_gain(data: Datamap) {\n    return Math.floor(Math.sqrt(Math.sqrt(data.prophetData.maxPiety) / 100))\n}\n\nexport function relic_maxBuyCost(relicIndex: number, data: Datamap) {\n\n    let n = relic_maxBuyAmount(relicIndex, data);\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_buyNCost(relicIndex: number, data: Datamap, n: number) {\n    let b = RELICS[relicIndex].initialCost;\n    let r = RELICS[relicIndex].coefficient;\n    let k = data.prophetData.relics[relicIndex];\n\n    return Math.floor(b * (Math.pow(r, k) * (Math.pow(r, n) - 1)) / (r - 1))\n}\n\nexport function relic_buyNextCost(relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_buyNCost(relicIndex, data, n)\n}\n\nexport function relic_canBuyN(relicIndex: number, data: Datamap, n: number) {\n    let cost = relic_buyNCost(relicIndex, data, n);\n    return data.prophetData.piety >= cost\n}\n\nexport function relic_canBuyNext(relicIndex: number, data: Datamap, next: number) {\n    let k = data.prophetData.relics[relicIndex];\n    let n = next - k % next;\n\n    return relic_canBuyN(relicIndex, data, n);\n}\n\nexport const CMD_prophet_pray: DecoupledCommand = {\n    name: \"Pray\",\n    command: 'prophet pray',\n}\n\nexport const CMD_prophet_proselytize: DecoupledCommand = {\n    name: \"Proselytize\",\n    command: 'prophet proselytize',\n}\n\nexport const CMD_prophet_preach: DecoupledCommand = {\n    name: \"Preach\",\n    command: 'prophet preach',\n}\n\nfunction can_devotedPrestige(data: Datamap) {\n    return data.prophetData.devotion >= devotedPrestige_cost(data);\n}\n\nexport function devotedPrestige_cost(data: Datamap) {\n    return 1e8 * Math.pow(69.69, data.followers.devotedPrestige);\n}\n\nfunction hide_devotedPrestige(data: Datamap) {\n    return (data.prophetData.congregation.paritioners[1] === 0) && (data.followers.devotedPrestige === 0)\n}\n\nexport const CMD_prophet_devotedPrestige: DecoupledCommand = {\n    name: \"Devoted Reincarnation\",\n    command: 'prophet devotedprestige',\n    able: can_devotedPrestige,\n    hidden: hide_devotedPrestige,\n}","import Engine from \"../Engine\";\nimport { DecoupledCommand } from \"../interfaces/ICommand\";\nimport { Datamap } from \"../Datamap\";\nimport { getRandomInt } from \"../util\";\n\nexport default class GameTime {\n\n    constructor(public engine: Engine) {\n\n    }\n    \n    get data () {\n        return this.engine.datamap.gameTime;\n    }\n\n    reset = () => {\n        this.engine.datamap.gameTime = GameTimeInit();\n    }\n\n    static get requiredMS () {\n        return 24000;\n    }\n    static maxDays = 30;\n    static maxMonths = 12;\n\n\n    processDelta = (delta: number) => {\n        this.data.currentRun.time += delta;\n        \n\n        if (this.engine.datamap.prophetData.devotionUpgrades.abc.a) {\n            delta = delta * 2;    \n        }\n        if (this.engine.datamap.pantheon.time.b) {\n            delta = delta * (1 + .1 * this.engine.datamap.pantheon.time.b);\n        }\n   \n\n        let mscost = GameTime.requiredMS;\n        this.data.msprogress += delta;\n        if (this.data.msprogress >= mscost) {\n            this.data.msprogress -= mscost;\n            this.passDayAction();\n        }\n    }\n\n    processCommands = (commands: string[]) => {\n        switch (commands[1]) {\n            case 'passday':\n                this.passDay();\n                break;\n\n            case 'eatday':\n                this.eatDay();\n                break;\n        \n            default:\n                console.log('error in gametime processCommands')\n                break;\n        }\n    }\n\n    passDayAction = () => {\n        let daysForTriggers = 1 + Math.floor(this.data.msprogress / GameTime.requiredMS)\n        this.data.day ++;\n        //this.engine.save();\n        if (this.data.day > GameTime.maxDays) {\n            this.data.day -= GameTime.maxDays;\n            this.data.month ++; \n            if (this.data.month > GameTime.maxMonths) {\n                this.data.month -= GameTime.maxMonths;\n                this.data.year ++;\n            }\n        }\n\n        this.dayTriggers(daysForTriggers);\n\n        if (this.data.msprogress >= GameTime.requiredMS) this.multiday();\n    }\n\n    multiday = () => {\n        let mscost = GameTime.requiredMS;\n        let startms = this.data.msprogress;\n\n        let elapsed_days = Math.floor(this.data.msprogress / mscost);\n        this.data.msprogress = this.data.msprogress % GameTime.requiredMS;\n        \n        let totalDays = elapsed_days + this.data.day;\n        this.data.day = ((totalDays - 1) % 30) + 1;\n        \n        let elapased_months = Math.floor((totalDays - 1) / 30);\n        \n        let totalMonths = this.data.month + elapased_months;\n        this.data.month = ((totalMonths- 1)%12)+1;\n\n        let gainedYears = Math.floor((totalMonths - 1) / 12)\n        this.data.year +=  gainedYears;\n\n        //console.log('multiday!', startms, elapsed_days, elapased_months, gainedYears);\n\n    }\n\n    dayTriggers(days: number) {\n        let bonus = 0;\n        for (let i = 0; i < days + bonus; i++) {\n            if (i < days) {\n                let rng = getRandomInt(1,10);\n                if (rng <= this.engine.datamap.pantheon.time.c) {\n                    bonus ++;\n                    this.engine.datamap.pantheon.time.bonusDays ++;\n                }\n            }\n            this.engine.prophet.dayTrigger(1);\n            this.engine.datamap.rocketData.joules ++;\n            this.engine.adornments.dayTrigger();\n        }\n    }\n\n    passDay = () => {\n        this.passDayAction()\n    }\n\n    eatDay = () => {\n        if (this.data.day < 2) return;\n        this.data.day --;\n        this.data.eatenDays ++;\n    }\n    \n}\n\nexport interface GameTimeData {\n    msprogress: number;\n    day: number;\n    month: number;\n    year: number;\n    eatenDays: number;\n    currentRun: {\n        time: number;\n    }\n}\n\nexport function GameTimeInit (): GameTimeData {\n    return {\n        day: 1,\n        month: 1,\n        year: 0,\n        msprogress: 0,\n        eatenDays: 0,\n        currentRun: {\n            time: 0\n        }\n    }\n}\n\nexport const COMMAND_EAT_DAY: DecoupledCommand = {\n    name: 'Eat Day',\n    command: 'gametime eatday',\n    able: (datamap:Datamap) => {\n        return datamap.gameTime.day > 1;\n    }\n}\n\nexport const COMMAND_pass_day: DecoupledCommand = {\n    name: \"Pass Day\",\n    command: 'gametime passday',\n}","import AbstractModule from \"./AbstractModule\";\nimport { Datamap } from \"../Datamap\";\n\nexport default class NavArea extends AbstractModule {\n\n    get data (): NavAreaData {\n        return this.engine.datamap.nav;\n    }\n\n    changeMainArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.mainArea = number;\n        this.data.subArea = 0;\n    }\n\n    changeSubArea = (stringedNumber: string) => {\n        let number = parseInt(stringedNumber);\n        this.data.subArea = number;\n    }\n\n}\n\nexport type NavAreaData = {\n    mainArea: number;\n    subArea: number;\n}\n\nexport function NavAreaDataInit (): NavAreaData {\n    return {\n        mainArea: 0,\n        subArea: 0,\n    }\n}\n\nexport function areaUnlocked(areaIndex:number, data: Datamap) {\n    switch (areaIndex) {\n        case 0:\n            return true\n            break;\n\n        case 1: \n            return data.prophetData.prestigeUnlocked === true || data.prophetData.save.reincarnationCount > 0\n            break;\n        default:\n            return false;\n    }\n}\n\n/* hidden={(datamap)=>{return datamap.prophetData.prestigeUnlocked === false && data.prophetData.holiness === 0}}/>\n          <CommandButtonFC name='Followers' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n          */","import AbstractModule from \"./AbstractModule\";\nimport { Datamap } from \"../Datamap\";\nimport ExpoCurve, { ExpoObject, expoI_getCost } from \"../interfaces/ExpoCurve\";\n\nexport default class Exploring extends AbstractModule {\n\n    sendRuins() {\n        if (this.data.areas.ruins.beingExplored || this.data.readyForMission === 0) return;\n        this.data.areas.ruins.assignedExplorers = this.data.readyForMission;\n        this.data.areas.ruins.beingExplored = true;\n        this.data.readyForMission = 0;\n    }\n\n    sendMart() {\n        if (this.data.areas.mart.beingExplored || this.data.readyForMission === 0) return;\n        this.data.areas.mart.assignedExplorers = this.data.readyForMission;\n        this.data.areas.mart.beingExplored = true;\n        this.data.readyForMission = 0;\n    }\n\n    sendShop() {\n        if (this.data.areas.shop.beingExplored || this.data.readyForMission === 0) return;\n        this.data.areas.shop.assignedExplorers = this.data.readyForMission;\n        this.data.areas.shop.beingExplored = true;\n        this.data.readyForMission = 0;\n    }\n\n    stopRuins() {\n        this.data.areas.ruins.assignedExplorers = 0;\n        this.data.areas.ruins.beingExplored = false;\n    }\n    \n    stopMart() {\n        this.data.areas.mart.assignedExplorers = 0;\n        this.data.areas.mart.beingExplored = false;\n    }\n\n    stopShop() {\n        this.data.areas.shop.assignedExplorers = 0;\n        this.data.areas.shop.beingExplored = false;\n    }\n\n    hireExplorer ( ) {\n        if (can_hire(this.engine.datamap) === false) return;\n        this.data.explorerCount ++;\n    }\n\n    fireExplorer () {\n        if (this.data.explorerCount > 0) {\n            this.data.explorerCount --;\n            this.engine.datamap.prophetData.believers --;\n        }\n    }\n\n    get data () {\n        return this.engine.datamap.adornments.explorers;\n    }\n \n    handle_explore_command = (cmdArray: string[]) => {\n        switch (cmdArray[2]) {\n            case 'hire':\n                this.hireExplorer();\n                break;\n\n            case 'fire':\n                this.fireExplorer();\n                break;\n            \n            case 'sendup':\n                this.sendup();\n                break;\n\n            case 'senddown':\n                this.senddown();\n                break;\n\n            case 'ruins':\n                this.sendRuins();\n                break;\n            \n            case 'mart':\n                this.sendMart();\n                break;\n\n            case 'shop':\n                this.sendShop();\n                break;\n\n                case 'stopruins':\n                this.stopRuins();\n                break;\n            \n            case 'stopmart':\n                this.stopMart();\n                break;\n\n            case 'stopshop':\n                this.stopShop();\n                break;\n            \n                default:\n                break;\n        }\n    }\n\n    exploreDay = () => {\n\n        this.checkBelievers();\n        this.checkSalary();\n        this.checkOut();\n\n        this.checkReady();\n\n        this.exploreProgress();\n    }\n\n    checkBelievers () {\n        if (this.engine.datamap.prophetData.believers < this.data.explorerCount) {\n            this.data.explorerCount = this.engine.datamap.prophetData.believers;\n        }\n    }\n\n    checkReady () {\n        if (availableExplorers(this.engine.datamap) < this.data.readyForMission) {\n            this.data.readyForMission = availableExplorers(this.engine.datamap);\n        }\n    }\n\n    checkOut () {\n        if (availableExplorers(this.engine.datamap) < 0) {\n            this.stopRuins();\n            this.stopMart();\n            this.stopShop();\n        }\n    }\n\n\n    \n\n    checkSalary () {\n        if (this.engine.datamap.prophetData.congregation.USD < currentSalary(this.engine.datamap)) {\n            this.engine.datamap.prophetData.congregation.USD = 0;\n            this.engine.datamap.prophetData.believers -= this.data.explorerCount;\n            this.data.explorerCount = 0;\n        } else {\n            this.engine.datamap.prophetData.congregation.USD -= currentSalary(this.engine.datamap);\n        }\n    }\n\n    sendup () {\n        this.data.readyForMission = Math.min(availableExplorers(this.engine.datamap), this.data.readyForMission + 1)\n    }\n\n    senddown () {\n        this.data.readyForMission = Math.max(0, this.data.explorerCount - 1)\n    }\n\n    exploreProgress () {\n        let areas = this.data.areas;\n\n        [areas.ruins, areas.mart, areas.shop].forEach(area => {\n            if (area.beingExplored) {\n                area.investedDays += area.assignedExplorers;\n            }\n        });\n        this.checkForFinshedAreas();\n    }\n\n    checkForFinshedAreas = () => {\n        this.exploreRuins();\n        this.exploreMart();\n        this.exploreShop();\n    }\n\n    checkArea(area: AreaData, expo: ExpoCurve) {\n        let goal = getAreaGoalDirct(area,expo)\n        if (area.investedDays >= goal) {\n            area.investedDays -= goal;\n            area.exploredCount ++;\n            return true;\n        } else return false;\n    }\n\n    exploreRuins () {\n        let area = this.data.areas.ruins;\n        let expo = AreaExpos.ruins;\n        let key = 'ruins';\n        \n        let done = this.checkArea(area,expo);\n        if (done) {\n            this.engine.adornments.getItem(key, area.exploredCount);\n        }\n    }\n\n    exploreMart () {\n        let area = this.data.areas.mart;\n        let expo = AreaExpos.mart;\n        let key = 'mart';\n        \n        let done = this.checkArea(area,expo);\n        if (done) {\n            this.engine.adornments.getItem(key, area.exploredCount);\n        }\n    }\n\n    exploreShop () {\n        let area = this.data.areas.shop;\n        let expo = AreaExpos.shop;\n        let key = 'shop';\n        \n        let done = this.checkArea(area,expo);\n        if (done) {\n            this.engine.adornments.getItem(key, area.exploredCount);\n        }\n    }\n\n    reset = () => {\n        this.engine.datamap.adornments.explorers = ExplorersData_init();\n    }\n\n}\n\nconst EXPLORER_SALARY = 10;\n\nexport const AreaExpos: ExpoObject = {\n    ruins: { coefficient: 4, initial: 365 },\n    mart: { coefficient: 2, initial: 365 * 10 },\n    shop: { coefficient: 3, initial: 365 * 100 },\n}\n\nexport function getAreaGoal (area: AreaData, areaExpoKey: string) {\n    return expoI_getCost(AreaExpos[areaExpoKey], area.exploredCount)\n}\n\nexport function getAreaETA (area: AreaData, areaExpoKey: string) {\n    let goal = expoI_getCost(AreaExpos[areaExpoKey], area.exploredCount)\n    let current = area.investedDays;\n    let remainder = goal - current;\n    let rate = area.assignedExplorers;\n    return Math.ceil(remainder/rate)\n}\n\nexport function getAreaGoalDirct (area: AreaData, areaExpo: ExpoCurve) {\n    return expoI_getCost(areaExpo, area.exploredCount)\n}\n\n\n\nexport function can_hire (data: Datamap) {\n    return data.prophetData.believers > data.adornments.explorers.explorerCount;\n}\n\nexport function availableExplorers (data:Datamap) {\n    let explorData = data.adornments.explorers;\n    return explorData.explorerCount - explorData.areas.ruins.assignedExplorers - explorData.areas.shop.assignedExplorers - explorData.areas.mart.assignedExplorers\n}\n\nexport function currentSalary (data:Datamap) {\n    let val = data.adornments.explorers.explorerCount * EXPLORER_SALARY\n    if (data.pantheon.wealth.c > 0) {\n        val = val * Math.pow(.95, data.pantheon.wealth.c)\n    } \n    return Math.floor(val);\n    \n}\n\nexport interface AreaData {\n    exploredCount: number,\n    investedDays: number,\n    assignedExplorers: number,\n    beingExplored: boolean,\n}\n\nexport function AreaData_init (): AreaData {\n    return {\n        exploredCount: 0,\n        investedDays: 0,\n        assignedExplorers: 0,\n        beingExplored: false,\n    }\n\n}\n\n\nexport interface ExplorersData {\n    explorerCount: number;\n    readyForMission: number;\n    areas: {\n        ruins: AreaData;\n        shop: AreaData;\n        mart: AreaData;\n    }\n}\n\nexport function ExplorersData_init(): ExplorersData {\n    return {\n        explorerCount: 0,\n        readyForMission: 0,\n        areas: {\n            ruins: AreaData_init(),\n            shop: AreaData_init(),\n            mart: AreaData_init(),\n        }\n    }\n}\n\nexport function show_explore_area (data:Datamap, areaKey: string) {\n    switch (areaKey) {\n        case 'mart':\n            return getAreaGoalDirct(data.adornments.explorers.areas.ruins, AreaExpos.ruins) > AreaExpos.mart.initial;\n            break;\n\n        case 'shop':\n            return getAreaGoalDirct(data.adornments.explorers.areas.mart, AreaExpos.mart) > AreaExpos.shop.initial;\n            break;\n    \n        default:\n            return true\n            break;\n    }\n}\n\nconst RUINS_STRS = {\n    key: 'ruins',\n    name: 'Ruins'\n}\n\nconst MART_STRS = {\n    key: 'mart',\n    name: 'Mart'\n}\n\nconst SHOP_STRS = {\n    key: 'shop',\n    name: 'Shop'\n}\n\nexport const AREA_STRS = {\n    RUINS_STRS, MART_STRS, SHOP_STRS\n}","import AbstractModule from \"./AbstractModule\";\nimport * as TimePantheon from \"./Pantheon/Time\";\nimport ExpoCurve from \"../interfaces/ExpoCurve\";\nimport Exploring, { AreaData, AreaData_init, ExplorersData, ExplorersData_init } from \"./Exploring\";\nimport { getRandomInt } from \"../util\";\nimport { string } from \"prop-types\";\nimport { Datamap } from \"../Datamap\";\n\nexport default class Adornments extends AbstractModule {\n\n\n    get data() {\n        return this.engine.datamap.adornments;\n    }\n\n    handle_adornments_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'explorer':\n                this.exploring.handle_explore_command(cmdArray);\n                break;\n\n            case 'empty':\n                this.data.items = [];\n                break;\n\n            case 'sell':\n                let index_ = parseInt(cmdArray[2]);\n                let item_ = this.data.items[index_]\n                this.data.items.splice(index_, 1);\n                this.data.gems += item_.level;\n                break;\n\n            case 'combine':\n                this.combine(parseInt(cmdArray[2]));\n                break;\n\n\n            case 'equip':\n                let index = parseInt(cmdArray[2]);\n                let item = this.data.items[index]\n                switch (item.iNo) {\n                    case 1:\n                        this.unequipCap()\n                        this.data.equiped.cap = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 2:\n                        this.unequipCane()\n                        this.data.equiped.cane = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 3:\n                        this.unequipRobe()\n                        this.data.equiped.robe = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 4:\n                        this.unequipRing()\n                        this.data.equiped.ring = this.data.items.splice(index, 1)[0];\n                        break;\n\n                    case 5:\n                        this.unequipBook();\n                        this.data.equiped.book = this.data.items.splice(index, 1)[0];\n\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            case 'unequip':\n                switch (cmdArray[2]) {\n                    case 'cane':\n                        this.unequipCane();\n                        break;\n\n                    case 'robe':\n                        this.unequipRobe();\n\n                        break;\n\n                    case 'cap':\n                        this.unequipCap();\n\n                        break;\n\n                    case 'book':\n                        this.unequipBook();\n\n                        break;\n\n                    case 'ring':\n                        this.unequipRing();\n                        break;\n\n                    default:\n                        break;\n                }\n                break;\n\n            default:\n                break;\n        }\n    }\n\n    unequipCap() {\n        if (this.data.equiped.cap) {\n            let toPush = this.data.equiped.cap;\n            this.data.equiped.cap = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    combine = (index: number) => {\n        let check_item = this.data.items[index];\n        if (check_item.level >= 10) return;\n\n        let matches: number[] = [];\n        this.data.items.some((item, i_index) => {\n            if (index === i_index) return false;\n            if (check_item.iNo === item.iNo) {\n                if (check_item.level === item.level) {\n                    if (check_item.origin === item.origin) {\n                        matches.push(i_index);\n                        return true;\n                    }\n                }\n            }\n            return false;\n        })\n        if (matches.length > 0) {\n            this.data.items[index].level++;\n            this.data.items.splice(matches[0], 1)\n        }\n\n    }\n\n    unequipCane() {\n        if (this.data.equiped.cane) {\n            let toPush = this.data.equiped.cane;\n            this.data.equiped.cane = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    unequipRobe() {\n        if (this.data.equiped.robe) {\n            let toPush = this.data.equiped.robe;\n            this.data.equiped.robe = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    unequipRing() {\n        if (this.data.equiped.ring) {\n            let toPush = this.data.equiped.ring;\n            this.data.equiped.ring = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n    unequipBook() {\n        if (this.data.equiped.book) {\n            let toPush = this.data.equiped.book;\n            this.data.equiped.book = null;\n            if (toPush) this.data.items.push(toPush)\n        }\n    }\n\n\n    dayTrigger() {\n        this.exploring.exploreDay();\n    }\n\n    getItem(origin: string, level: number) {\n        this.data.adornmentCount++;\n        let iNo = getRandomInt(1, 5)\n        this.data.items.push({ origin, level, iNo })\n    }\n\n    exploring = new Exploring(this.engine)\n}\n\nconst AdornmentCurve: ExpoCurve = {\n    coefficient: 1e2,\n    initial: 1e2\n}\n\nexport interface AdornmentItem {\n    origin: string,\n    level: number,\n    iNo: number,\n}\n\nexport interface FullAdornmentItem {\n    data: AdornmentItem;\n    name: string;\n    power: string;\n}\n\nexport function getFullAdornmentItem(item: AdornmentItem): FullAdornmentItem {\n    return {\n        data: item,\n        name: `${ItemNames[item.iNo]} of ${item.origin}`,\n        power: PowerDictionary[ItemNames[item.iNo]](item)\n    }\n}\n\nconst ItemNames: string[] = [\n    'unused',\n    'Cap', 'Cane', 'Robe', 'Ring', 'Book'\n]\n\nconst PowerDictionary: I_PowerDict = {\n    unused: () => 'BROKE',\n    Cap: capStats,\n    Cane: caneStats,\n    Robe: robeStats,\n    Ring: ringStats,\n    Book: bookStats,\n}\n\nfunction capStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Piety Production`\n            break;\n\n        case 'mart':\n            return `Nothing yet - make a suggestion!`\n            return `+${item.level}x Devotion Production`\n            break;\n\n        case 'shop':\n            return `Nothing yet - make a suggestion!`\n            return `+${item.level}x USD Production`\n            break;\n\n        default:\n            return 'ERROR CAP - NO ORIGIN'\n            break;\n    }\n}\n\nfunction caneStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `Prayer gives +${item.level} Believers`\n            break;\n\n        case 'mart':\n            return `Nothing yet - make a suggestion!`\n            return `Prayer Gives +${item.level} Devotion`\n            break;\n\n        case 'shop':\n            return `Nothing yet - make a suggestion!`\n            return `Proseltyzing gives USD at ${item.level}0%  instead of Believers `\n            break;\n\n        default:\n            return 'ERROR CANE - NO ORIGIN'\n            break;\n    }\n}\n\nfunction bookStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Effective Devotee Count`\n            break;\n\n        case 'mart':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        case 'shop':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        default:\n            return 'ERROR CAP - NO ORIGIN'\n            break;\n    }\n}\n\nfunction robeStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `Retain ${item.level}% of Devotion on Reincarnation`\n            break;\n\n        case 'mart':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        case 'shop':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        default:\n            return 'ERROR ROBE - NO ORIGIN'\n            break;\n    }\n}\n\nfunction ringStats(item: AdornmentItem) {\n    switch (item.origin) {\n        case 'ruins':\n            return `+${item.level}x Devotee Deovtion Production`\n            break;\n\n        case 'mart':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        case 'shop':\n            return `Nothing yet - make a suggestion!`\n            break;\n\n        default:\n            return 'ERROR RING - NO ORIGIN'\n            break;\n    }\n}\n\ninterface I_PowerDict {\n    [key: string]: (item: AdornmentItem) => string;\n}\n\n\nexport interface AdornmentData {\n    adornmentCount: number;\n    items: AdornmentItem[];\n    equiped: {\n        cap: AdornmentItem | null;\n        cane: AdornmentItem | null;\n        robe: AdornmentItem | null;\n        ring: AdornmentItem | null;\n        book: AdornmentItem | null;\n    }\n    gems: number;\n    explorers: ExplorersData\n}\n\nexport function adornmentDataInit(): AdornmentData {\n    return {\n        equiped: {\n            book: null,\n            cane: null,\n            cap: null,\n            ring: null,\n            robe: null,\n        },\n        items: [],\n        gems: 0,\n        adornmentCount: 0,\n        explorers: ExplorersData_init()\n    }\n}\n\n","export interface SimData {\n    mass: number;\n            current_v: number;\n            current_h: number;\n            active: boolean;\n            elapsedTime: number;\n            impactJouls: number\n}\n\nexport function SimDataInit ():SimData {\n    return {\n        mass: 1,\n        current_h: 0,\n        current_v: 0,\n        impactJouls: 0,\n        active: false,\n        elapsedTime: 0,\n    }\n}\n\nexport interface DerivedData {\n    estimatedTime: number;\n    estimatedVMax: number;\n    estimatedJouls: number;\n}\n\nexport function DerivedDataInit ():DerivedData {\n    return {\n        estimatedTime: 0,\n        estimatedVMax: 0,\n        estimatedJouls: 0,\n    }\n}\n\nexport interface RocketData {\n    unlocked: boolean;\n    ball: {\n        height: number,\n        mass: number,\n        derived: DerivedData;\n        sim: SimData\n    }\n    thrown_ball: {\n        initial_velocity: number,\n        derived: DerivedData;\n        sim: SimData\n    }\n    bouncyball: {\n        bounces_upgrades: number;\n        loss_upgrades: number;\n        derived: DerivedData;\n        sim: SimData & {bounces: number;};\n    }\n    joules: number;\n}\n\nexport function RocketDataInit(): RocketData {\n    return {\n        unlocked: false,\n        ball: {\n            height: 0,\n            mass: 0,\n            derived: DerivedDataInit(),\n            sim: SimDataInit(),\n        },\n        thrown_ball: {\n            initial_velocity: 0,\n            derived: DerivedDataInit(),\n            sim: SimDataInit()\n        },\n        bouncyball: {\n            bounces_upgrades: 0,\n            loss_upgrades: 0,\n            derived: DerivedDataInit(),\n            sim: {...SimDataInit() ,bounces: 0},\n\n        },\n        joules: 0\n    }\n}\n","import AbstractModule from \"./AbstractModule\";\nimport Engine from \"../Engine\";\n\nexport default class NameAndCode extends AbstractModule {\n    constructor(public engine: Engine) {\n        super(engine);\n    }\n\n    nacCommand (commands: string []) {\n        console.log(commands);\n        \n        switch (commands[1]) {\n            case 'setname':\n                this.data.name = commands[2];\n                this.data.timeSet = Date.now();\n                if (this.data.name === 'DREP'){\n                    this.engine.prophet.devotedprestige();\n                }\n                break;\n\n            case 'clearname':\n                this.data.name = '';\n                this.data.timeSet = 0;\n        \n            default:\n                break;\n        }\n    }\n\n    get data() {\n        return this.engine.datamap.nacData;\n    }\n\n    \n}\n\nexport interface NameAndCode_Data {\n    name: string;\n    timeSet: number;\n}\n\nexport function NameAndCode_Init (): NameAndCode_Data {\n    return {\n        name: '', timeSet: 0\n    }\n}","import { I_PropheData, init_ProphetData } from \"./modules/Prophet\";\nimport { GameTimeData, GameTimeInit } from \"./modules/Gametime\";\nimport { NavAreaData, NavAreaDataInit } from \"./modules/NavArea\";\nimport { HolinessUpgrades, holinessUpgradesInit } from \"./modules/PietyPurchases\";\nimport { FollowerData, followerDataInit } from \"./modules/Followers\";\nimport { AdornmentData, adornmentDataInit } from \"./modules/Adornments\";\nimport { RocketData, RocketDataInit } from \"./modules/RocketTypes\";\nimport { NameAndCode_Data, NameAndCode_Init } from \"./modules/NameAndCode\";\nimport { PantheonData, PantheonData_init } from \"./modules/Pantheon/Types\";\n\nexport interface Datamap {\n    offline: {\n        happening: boolean;\n        totaltime: number;\n    }\n    x: number;\n    y: number;\n    z: number;\n    ticks: number;\n    last: number;\n    ui: {\n        innerWidth: number;\n        innerHeight: number;\n    }\n    prophetData: I_PropheData;\n    gameTime: GameTimeData;\n    nav: NavAreaData,\n    holinessUpgrades: HolinessUpgrades,\n    followers: FollowerData,\n    adornments: AdornmentData,\n    rocketData: RocketData,\n    nacData: NameAndCode_Data,\n    automation: {\n        auto_buyToNext: boolean,\n    },\n    pantheon: PantheonData;\n}\n\nexport function newDefaultMap () {\n    let map: Datamap = {\n        offline: {\n            happening: false,\n            totaltime: 0,\n        },\n        x: 0, \n        y: 0, \n        z: 0,\n        ticks: 0,\n        last: Date.now(),\n        ui: {\n            innerHeight: 600,\n            innerWidth: 800,\n        },\n        prophetData: init_ProphetData(),\n        gameTime: GameTimeInit(),\n        nav: NavAreaDataInit(),\n        holinessUpgrades: holinessUpgradesInit(),\n        followers: followerDataInit(),\n        adornments: adornmentDataInit(),\n        rocketData: RocketDataInit(),\n        nacData: NameAndCode_Init(),\n        automation: {\n            auto_buyToNext: false,\n        },\n        pantheon: PantheonData_init(),\n    }\n    return map;\n}","import {Datamap, newDefaultMap} from './Datamap';\nimport * as _ from 'lodash'\n\nexport default abstract class CoreEngine {\n\n    datamap: Datamap = newDefaultMap();\n    loop: NodeJS.Timeout | undefined = undefined;\n\n    constructor(public notify: VoidFunction){\n        this.datamap.last = Date.now();\n        this.start();\n    }\n\n    start = () => {\n        if (!this.loop) {\n            this.loop = setInterval(this.tick, 200);\n        }\n    }\n\n    stop = () => {\n        if (this.loop){\n            clearTimeout(this.loop);\n            this.loop = undefined;\n        } \n    }\n\n    save= () => {\n        let datamap = JSON.stringify(this.datamap);\n        localStorage.setItem('datamap', datamap);\n    }\n\n    load= () => {\n        this.quietLoad();        \n        this.notify();\n    }\n\n    reset = () => {\n        this.datamap = newDefaultMap();\n        this.notify();\n    }\n\n    quietLoad = () => {\n        let combstr = localStorage.getItem('datamap');\n        if (combstr != null){\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n    }\n\n    tick = () => {\n        \n        let newnow = Date.now();\n        let oldnow = this.datamap.last;\n        let delta = newnow - oldnow;\n\n        this.datamap.last = newnow;\n        \n        this.processDelta(delta)\n        this.notify();\n    }\n\n    abstract processDelta (delta: number): void;\n    abstract executeCommand (command: string): void;\n \n}\n\n\n","import { DecoupledCommand2 } from \"../interfaces/ICommand\";\nimport AbstractModule from \"./AbstractModule\";\nimport { SECOND_MS } from \"../util\";\nimport { Datamap } from \"../Datamap\";\nimport Engine from \"../Engine\";\nimport { SimData, RocketDataInit } from \"./RocketTypes\";\n\nexport default class Rocket extends AbstractModule {\n\n    constructor(engine: Engine) {\n        super(engine);\n        this.updateEstimates();\n    }\n\n    get data() {\n        return this.engine.datamap.rocketData;\n    }\n\n    reset () {\n        this.engine.datamap.rocketData = RocketDataInit();\n    }\n\n    handle_rocket_command = (cmdArray: string[]) => {\n        switch (cmdArray[1]) {\n            case 'ballheight+':\n                this.data.joules -= ballHeightUpgrade_cost(this.engine.datamap);\n                this.data.ball.height = nextBallHeightUpgrade(this.data.ball.height);\n                break;\n\n            case 'ballmass+':\n                this.engine.datamap.prophetData.congregation.USD -= ballMassUpgrade_cost(this.engine.datamap)\n                this.data.ball.mass = nextBallMassUpgrade(this.data.ball.mass)\n                break;\n\n            case 'ballvelocity+':\n                this.data.joules -= ballVelocityUpgrade_cost(this.engine.datamap);\n                this.data.thrown_ball.initial_velocity = nextBallVelocityUpgrade(this.data.thrown_ball.initial_velocity);\n                break;\n\n            case 'ballbounces+':\n                    this.engine.datamap.prophetData.congregation.USD -= ballBounceUpgrade_cost(this.engine.datamap);\n                    this.data.bouncyball.bounces_upgrades = nextBallBounceUpgrade(this.data.bouncyball.bounces_upgrades);\n                    break;\n\n            case 'throwball':\n                this.throwball();\n                break;\n\n            case 'dropball':\n                this.dropball();\n                break;\n\n            case 'bounceball':\n                this.bounceball();\n                break;\n\n            default:\n                break;\n        }\n        this.updateEstimates();\n    }\n\n    dropball = () => {\n        let ball = this.data.ball;\n\n        ball.sim = {\n            active: true,\n            current_h: ball.height,\n            current_v: 0,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n        ball.height = 0;\n    }\n\n    throwball = () => {\n        let ball = this.data.ball;\n\n        this.data.thrown_ball.sim = {\n            active: true,\n            current_h: ball.height  ,\n            current_v: this.data.thrown_ball.initial_velocity,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n\n        ball.height = 0;\n        this.data.thrown_ball.initial_velocity = 0;\n    }\n\n    bounceball () {\n        //console.log('bounce');\n        \n        let ball = this.data.ball;\n        let thrown_ball = this.data.thrown_ball\n\n        this.data.bouncyball.sim = {\n            active: true,\n            current_h: ball.height,\n            bounces: this.data.bouncyball.bounces_upgrades + 1,\n            current_v: thrown_ball.initial_velocity,\n            elapsedTime: 0,\n            impactJouls: 0,\n            mass: ball.mass,\n        }\n\n        ball.height = 0;\n        this.data.thrown_ball.initial_velocity = 0;\n        this.data.bouncyball.bounces_upgrades = 0;\n    }\n\n    updateEstimates() {\n        let estimatedVMax = freefall_vmax_from_h(this.data.ball.height);\n        let estimatedTime = freefall_t_from_h(this.data.ball.height);\n\n        this.data.ball.derived.estimatedTime = estimatedTime\n        this.data.ball.derived.estimatedVMax = estimatedVMax\n        this.data.ball.derived.estimatedJouls = freefall_j_from_mv(estimatedVMax, this.data.ball.mass)\n    }\n\n    processDelta = (delta: number) => {\n        if (this.data.ball.sim.active === true) this.ballsim(delta / SECOND_MS);\n        if (this.data.thrown_ball.sim.active === true) this.thrownballsim(delta / SECOND_MS);\n        if (this.data.bouncyball.sim.active === true) this.bounceyball_sim(delta / SECOND_MS);\n    }\n\n    vhat_sim (v_in: number, height: number, acceleration: number, seconds: number) {\n        let estimatedDistance = freefall_d_from_vat(v_in, GRAVITY, seconds)\n        let delta_t, delta_h, vf;\n\n        if (estimatedDistance + height > 0) {\n\n            delta_t = seconds;\n            delta_h = estimatedDistance\n            vf = freefall_vf_from_viat(v_in, acceleration, seconds)\n        } else { //need to solve FROM d\n\n            vf = freefall_vf_from_viad(v_in, GRAVITY, height);\n\n            delta_t = freefall_t_from_vivfd(v_in, vf, height)\n            delta_h = -height\n        }\n        return {delta_t, delta_h, vf}\n    }\n\n    move_and_impact(sim: SimData, seconds: number){\n        let vin = sim.current_v;\n        let h = sim.current_h;\n\n\n        let {delta_t, delta_h, vf} = this.vhat_sim(vin,h,GRAVITY,seconds);\n\n        sim.elapsedTime += delta_t;\n        sim.current_h += delta_h;\n        sim.current_v = vf;\n        return sim.current_h <= 0\n    }\n\n    ballsim = (seconds: number) => {\n\n        \n        let ball = this.data.ball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.active = false;\n            this.ballimpact();\n        }\n\n    }\n\n\n    thrownballsim = (seconds: number) => {\n\n        let ball = this.data.thrown_ball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.active = false;\n            this.thrown_ballimpact();\n        }\n\n\n    }\n    \n    bounceyball_sim (seconds: number) {\n        let initial_time =  this.data.bouncyball.sim.elapsedTime\n        let ball = this.data.bouncyball;\n        let did_impact = this.move_and_impact(ball.sim, seconds);\n        //console.log(ball);\n        if (did_impact) {\n            ball.sim.bounces --\n            if (ball.sim.bounces < 0) {\n                ball.sim.active = false;\n                this.bounce_ballimpact();\n            } else {\n                let bounce_energy = this.bounce_ballimpact();\n                ball.sim.current_v = v_from_mj(ball.sim.mass, bounce_energy)\n                this.bounceyball_sim(seconds - (initial_time - this.data.bouncyball.sim.elapsedTime))\n            }\n        }\n    }\n\n    impact() {\n        let gainedJoules = freefall_j_from_mv(this.data.ball.sim.current_v, this.data.ball.mass);\n        this.data.ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor(gainedJoules)\n    }\n\n    ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.ball.sim.current_v, this.data.ball.mass);\n        this.data.ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor(gainedJoules)\n    }\n\n    thrown_ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.thrown_ball.sim.current_v, this.data.ball.mass);\n        this.data.thrown_ball.sim.impactJouls = gainedJoules;\n        this.data.joules += Math.floor( gainedJoules )\n    }\n\n    bounce_ballimpact() {\n        let gainedJoules = freefall_j_from_mv(this.data.bouncyball.sim.current_v, this.data.ball.mass);\n        this.data.bouncyball.sim.impactJouls += gainedJoules;\n        this.data.joules += Math.floor( gainedJoules )\n        return (gainedJoules) * .8\n    }\n\n}\n\n\n\n//CLASS HELPERS \n\nexport function nextBallHeightUpgrade(height: number) {\n    return 1 + height;\n}\n\nexport function ballHeightUpgrade_cost(data: Datamap) {\n    return Math.floor(-kinetic_energy_mgdh(data.rocketData.ball.mass, 1))\n}\n\nexport function ballHeightUpgrade_able(data: Datamap) {\n    return ballHeightUpgrade_cost(data) <= data.rocketData.joules && data.rocketData.ball.mass > 0;\n}\n\nexport function nextBallMassUpgrade(mass: number) {\n    return 1 + mass;\n}\n\nexport function ballMassUpgrade_cost(data: Datamap) {\n    return data.rocketData.ball.mass * data.rocketData.ball.mass + 1;\n}\n\nexport function ballMassUpgrade_able(data: Datamap) {\n    return ballMassUpgrade_cost(data) <= data.prophetData.congregation.USD;\n}\n\nexport function nextBallVelocityUpgrade(velocity: number) {\n    return 2 + velocity;\n}\n\nexport function ballVelocityUpgrade_cost(data: Datamap) {\n    // ke = 1/2mvv\n    let velocity = data.rocketData.thrown_ball.initial_velocity;\n    let newv = nextBallVelocityUpgrade(velocity);\n    let oldKE = .5 * data.rocketData.ball.mass * velocity * velocity;\n    let newKE = .5 * data.rocketData.ball.mass * newv * newv;\n    \n    return newKE-oldKE; \n}\n\nexport function ballVelocityUpgrade_able(data: Datamap) {\n    return ballVelocityUpgrade_cost(data) <= data.rocketData.joules;\n}\n\nexport function nextBallBounceUpgrade(bounce: number) {\n    return 1 + bounce;\n}\n\nexport function ballBounceUpgrade_cost(data: Datamap) {\n    return Math.pow(10, data.rocketData.bouncyball.bounces_upgrades+4);\n}\n\nexport function ballBounceUpgrade_able(data: Datamap) {\n    return ballBounceUpgrade_cost(data) <= data.prophetData.congregation.USD;\n}\n\n//ROCKET COMMANDS\n\nexport const cmd_ballheightplus: DecoupledCommand2 = {\n    name: () => 'Lift Ball',\n    command: () => 'rocket ballheight+',\n    change: (data) => `${data.rocketData.ball.height} -> ${nextBallHeightUpgrade(data.rocketData.ball.height)}`,\n    able: ballHeightUpgrade_able,\n    cost: ballHeightUpgrade_cost,\n    costName: 'j'\n}\n\nexport const cmd_ballmassplus: DecoupledCommand2 = {\n    name: () => 'Increase Ball Mass',\n    command: () => 'rocket ballmass+',\n    change: (data) => `${data.rocketData.ball.mass} -> ${nextBallMassUpgrade(data.rocketData.ball.mass)}`,\n    able: ballMassUpgrade_able,\n    cost: ballMassUpgrade_cost,\n    costName: 'USD'\n}\n\nexport const cmd_ballvelocityplus: DecoupledCommand2 = {\n    name: () => 'Increase Initial Ball Velocity',\n    command: () => 'rocket ballvelocity+',\n    change: (data) => `${data.rocketData.thrown_ball.initial_velocity} -> ${nextBallVelocityUpgrade(data.rocketData.thrown_ball.initial_velocity)}`,\n    able: ballVelocityUpgrade_able,\n    cost: ballVelocityUpgrade_cost,\n    costName: 'j',\n    hidden: (data) => data.rocketData.ball.mass === 0 || data.rocketData.ball.height === 0,\n}\n\nexport const cmd_ballbouncesplus: DecoupledCommand2 = {\n    name: () => 'Bounces',\n    command: () => 'rocket ballbounces+',\n    change: (data) => `${data.rocketData.bouncyball.bounces_upgrades} -> ${nextBallBounceUpgrade(data.rocketData.bouncyball.bounces_upgrades)}`,\n    able: ballBounceUpgrade_able,\n    cost: ballBounceUpgrade_cost,\n    hidden: (data) => data.rocketData.thrown_ball.initial_velocity === 0,\n    costName: 'USD'\n}\n\nexport const cmd_dropball: DecoupledCommand2 = {\n    name: () => 'Drop Ball',\n    command: () => 'rocket dropball',\n    able: (data) => data.rocketData.ball.sim.active === false && data.rocketData.ball.height > 0,\n}\n\nexport const cmd_throwball: DecoupledCommand2 = {\n    name: () => 'Throw Ball',\n    command: () => 'rocket throwball',\n    able: (data) => data.rocketData.thrown_ball.sim.active === false,\n    hidden: (data) => data.rocketData.thrown_ball.initial_velocity === 0,\n}\n\nexport const cmd_bouncyball: DecoupledCommand2 = {\n    name: () => 'Bounce Ball',\n    command: () => 'rocket bounceball',\n    able: (data) => data.rocketData.bouncyball.sim.active === false,\n    hidden: (data) => data.rocketData.bouncyball.bounces_upgrades === 0,\n\n}\n/*\n    {\\displaystyle \\Delta v=v_{\\text{e}}\\ln {\\frac {m_{0}}{m_{f}}}=I_{\\text{sp}}g_{0}\\ln {\\frac {m_{0}}{m_{f}}}}\n\nwhere:\n\n    Δ v   {\\displaystyle \\Delta v\\ } \\Delta v\\ is delta-v – the maximum change of velocity of the vehicle (with no external forces acting).\n    m 0 {\\displaystyle m_{0}} m_{0} is the initial total mass, including propellant, also known as wet mass.\n    m f {\\displaystyle m_{f}} m_{f} is the final total mass without propellant, also known as dry mass.\n    v e = I sp g 0 {\\displaystyle v_{\\text{e}}=I_{\\text{sp}}g_{0}} {\\displaystyle v_{\\text{e}}=I_{\\text{sp}}g_{0}} is the effective exhaust velocity, where:\n\n        I sp {\\displaystyle I_{\\text{sp}}} I_{\\text{sp}} is the specific impulse in dimension of time.\n        g 0 {\\displaystyle g_{0}} g_{0} is standard gravity.\n*/\n\n/* PHYSICS */\n\n//h = 1/2gt2, m\n\n//h = 1/2vt\n\n//v = gt, m/s\n\nconst GRAVITY = -9.8\n\nexport function freefall_t_from_h(height: number) { //return s\n\n    let time = Math.sqrt(2 * height / -GRAVITY);\n\n    return time;\n}\n\nexport function freefall_vmax_from_h(height: number) { //return m/s\n    let vmax = GRAVITY * freefall_t_from_h(height);\n    return vmax;\n}\n\nexport function freefall_d_from_vat(velocity_in: number, acceleration: number, seconds: number) { //return m\n    let d = velocity_in * seconds + .5 * acceleration * seconds * seconds;\n    return d;\n}\n\nexport function freefall_vf_from_viat(velocity_in: number, acceleration: number, seconds: number) { //return m/s\n    let vf = velocity_in + acceleration * seconds;\n    return vf;\n}\n\nexport function freefall_vf_from_viad(velocity_in: number, acceleration: number, distance: number) { //return m/s\n\n    let vf_sq = ((velocity_in + 1) / Math.abs(velocity_in + 1)) * (velocity_in * velocity_in) + 2 * acceleration * distance;\n    let vf = Math.sqrt(Math.abs(vf_sq));\n    //console.log('ff_vf_viad', velocity_in, acceleration, distance, vf_sq, vf);\n    if (vf_sq < 0) return -vf\n    else return vf\n}\n\nexport function freefall_t_from_vivfd(v_i: number, v_f: number, distance: number) { //return s\n    let t = 2 * distance / (v_i + v_f)\n    return Math.abs(t)\n}\n\nexport function freefall_j_from_mv(v: number, m_kg: number, ) { //return j \n    return .5 * m_kg * v * v\n}\n\nexport function v_from_mj (mass: number, joules: number) {\n    let velocity = Math.sqrt( 2 * joules / mass )\n    return velocity;\n}\n\nexport function kinetic_energy_mgdh (mass: number, delta_h: number) {\n    return mass * delta_h * GRAVITY;    \n}","import CoreEngine from \"./CoreEngine\";\nimport ProphetModule from \"./modules/Prophet\";\nimport GameTime from \"./modules/Gametime\";\nimport NavArea from \"./modules/NavArea\";\nimport Followers from \"./modules/Followers\";\nimport { MINUTE_MS } from \"./util\";\nimport Rocket from \"./modules/Rocket\";\nimport NameAndCode from \"./modules/NameAndCode\";\nimport Adornments from \"./modules/Adornments\";\nimport { doPantheonUpgrade } from \"./modules/Pantheon/Types\";\nimport { newDefaultMap } from \"./Datamap\";\nimport _ from \"lodash\";\n\nexport default class Engine extends CoreEngine {\n    \n    processDelta = (delta: number) => {\n        this.rocket.processDelta(delta)\n        /*\n        if (this.datamap.nacData.name === 'DEVC') {\n            delta = delta * 10;\n        }*/\n        //console.log('tick');\n        this.prophet.processDetla(delta)\n        \n        this.gameTime.processDelta(delta)\n        this.bounds();\n        this.stopOffline();\n\n    }\n\n    bounds () {\n        const PIETYBOUND = 1e100\n        if (this.datamap.prophetData.piety> PIETYBOUND) this.datamap.prophetData.piety = PIETYBOUND;\n    }\n\n\n    \n    startOffline (delta: number) {\n        this.datamap.offline = {happening: true,totaltime: delta}\n        this.notify();\n    }\n\n    stopOffline () {\n        this.datamap.offline.happening = false;\n    }\n\n    executeCommand = (command: string) => {\n        let commands = command.split(' ');\n        //console.log(`process ${command}, ${commands}`);\n\n        switch (commands[0]) {\n            case '1hr':\n                this.processDelta(60 * 60 * 1000);\n                break;\n\n            case 'prophet':\n                this.prophet.processCommands(commands)\n                break;\n\n            case 'gametime':\n                this.gameTime.processCommands(commands);\n                break;\n\n            case 'pantheon':\n                doPantheonUpgrade(this.datamap, commands)\n                break;\n\n            case 'save':\n                this.save();\n                break;\n\n            case 'load':\n                this.load();\n                break;\n\n            case 'import':\n                this.import(commands[1]);\n                break;\n            \n            case 'export':\n                this.export();\n                break;\n\n            case 'nav':\n                if (commands[1] === 'main') {\n                    this.nav.changeMainArea(commands[2])\n                } else if (commands[1] === 'sub') {\n                    this.nav.changeSubArea(commands[2])\n                }\n                break;\n\n            case 'followers':\n                this.followers.handle_followers_command(commands)\n                break;\n\n            case 'rocket':\n                this.rocket.handle_rocket_command(commands);\n                break;\n            case 'keypress':\n                this.handleKey(commands[1]);\n                break;\n\n            case 'nac':\n                this.nac.nacCommand(commands)\n                break;\n\n            case 'adornments':\n                this.adornments.handle_adornments_command(commands);\n                break;\n       \n            default:\n                console.log('...the dev made a mistake.')\n                break;\n\n        }\n\n        this.notify();\n    }\n\n    handleKey = (key: string) => {\n        switch (key) {\n            case 'p':\n                this.prophet.pray();\n                break;\n\n            case 'm':\n                for (let index = 0; index < 10; index++) {                    \n                    this.prophet.buyMaxRelic(index.toString())\n                }\n                break;\n\n            case 'r':\n                this.prophet.prestige();\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    load = () => {\n        this.quietLoad();\n        this.startOffline(Date.now()-this.datamap.last)\n        this.notify();\n    }\n\n    import = (lzutf8str: string) => {\n        var LZUTF8 = require('lzutf8');\n        \n        //console.log(lzutf8str);\n        let arrayStr = lzutf8str.split(',')\n        let arrayInt = arrayStr.map(value=>parseInt(value))\n        let magicArray = Uint8Array.of(...arrayInt);\n        \n\n        //var string = new TextDecoder(\"utf-8\").decode(lzutf8str);\n        //let test = new Uint8Array(lzutf8str)\n        //let uint8array: Uint8Array = new Uint8Array(lzutf8str)\n        //let uint8array = new Uint8Array()\n        //var uint8array = new TextEncoder().encode(lzutf8str);\n        //console.log(uint8array);\n\n        var output = LZUTF8.encodeUTF8(lzutf8str);\n        //console.log(output, arrayStr, magicArray);\n        \n        let check = LZUTF8.decompress(magicArray);\n        //console.log(check);\n\n        /**\n         * \n      */\n        \n        \n\n        let combstr = check;\n        if (combstr != null){\n            let oldobj = JSON.parse(combstr);\n            this.datamap = newDefaultMap();\n            _.merge(this.datamap, oldobj)\n        }\n\n    }\n\n    export = () => {\n        let dataString = JSON.stringify(this.datamap);\n        var LZUTF8 = require('lzutf8');\n        let output = LZUTF8.compress(dataString);\n        //  console.log(output)\n        //console.log(dataString.length)\n\n//        download(`prophet_export_${Date.now()}.txt`,dataString)\n        download(`prophet_export_${Date.now()}.txt`,output)\n\n        function download(filename: string, text: string) {\n            var element = document.createElement('a');\n            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n            element.setAttribute('download', filename);\n          \n            element.style.display = 'none';\n            document.body.appendChild(element);\n          \n            element.click();\n          \n            document.body.removeChild(element);\n          }\n\n    }\n\n    prophet = new ProphetModule(this);\n    gameTime = new GameTime(this);\n    nav = new NavArea(this);\n    followers = new Followers(this)\n    rocket = new Rocket(this);\n    nac = new NameAndCode(this);\n    adornments = new Adornments(this);\n}\n\n","import * as React from 'react';\nimport { Datamap, newDefaultMap } from '../engine/Datamap';\n\ntype AppContextType = {\n  data: Datamap;\n  submitCommand: (str:string)=>void;\n}\n\n// Create a context wrapping some shared state\nlet AppContext = React.createContext<AppContextType>({\n  data: newDefaultMap(),\n  submitCommand: (str)=>{},\n});\n\nexport default AppContext;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './TipFC.scss'\nimport ReactDOM from 'react-dom';\n\nconst TipFC: React.FC<{ tip?: ReactNode }> = (props) => {\n  \n  return ( <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC'>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n)}\n\nexport class classTipFC extends React.Component<{ tip: ReactNode }, {top: string|number, bottom: string|number}>{\n\n  constructor(props: Readonly<{ tip: React.ReactNode; }>) {\n    super(props)\n    this.state = {\n      top: \"\",\n      bottom: \"\"\n    }\n  }\n\n  static contextType = AppContext;\n\n  componentDidMount () {\n    this.setTB();\n  }\n  \n\n  componentDidUpdate() {\n    this.setTB();\n  }\n\n  setTB= ()=>{\n\n    let height = window.innerHeight;\n\n    let top: number | string = \"\"\n    let bottom: number | string = \"\"\n\n    let myDom = ReactDOM.findDOMNode(this);\n\n    if (myDom) {\n\n\n      let parent = ((ReactDOM.findDOMNode(this) as Element).parentElement as Element)\n\n      if (parent) {\n\n        parent = parent as Element;\n        let parentBounds = parent.getBoundingClientRect()\n\n        /*\n        if (parentBounds.right > width / 2) {\n          right = width - parentBounds.right;\n          left = \"\"\n        } else {\n          right = \"\"\n          left = parentBounds.left\n        }*/\n\n        if (parentBounds.bottom > height / 2) {\n          bottom = height - parentBounds.top;\n          top = \"\"\n        } else {\n          bottom = \"\";\n          top = parentBounds.bottom;\n        }\n\n        this.setState({top, bottom});\n      }\n    }\n\n  }\n\n  render() {\n    let props = this.props;\n\n    //let width = window.innerWidth;\n\n    //let left: number | string = \"\"\n    //let right: number | string = \"\"\n    \n\n    \n\n    return (\n      <div hidden={props.tip === undefined} >\n        <div className='TipFC' style={{top:this.state.top, bottom:this.state.bottom}}>\n          <div>\n            {props.tip}\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default TipFC;\n\n","import React, { ReactNode } from 'react';\nimport TipFC from './TipFC';\n\nexport interface ProgressProps {\n    value: number;\n    max: number;\n    color?: string;\n    background?: string;\n    label: string | ReactNode; \n    textColor?: string\n    tip?: ReactNode;\n}\n\n   \nconst ProgressFC: React.FC<ProgressProps> = (props) => {\n    let trueValue = Math.min(props.value, props.max)\n    let widthpercent = (trueValue * 100 / (props.max)).toString() + \"%\";\n    if (widthpercent === 'NaN%') widthpercent = '0%';\n    const [off, setOff] = React.useState(false);\n    if (off) widthpercent = '100%'\n\n    return (\n        <div className='ProgressFC' style={{backgroundSize:widthpercent}}>\n            <div className='InnerProgress' style={{width:widthpercent}} onClick={()=>setOff(!off)}>\n                <span style={{whiteSpace:'nowrap'}}>\n                    {props.label} \n                </span>\n            </div>\n            <TipFC tip={<div>{`${props.value}/${props.max}`}{props.tip}</div>} />\n        </div>\n    )\n}\n\n\nexport default ProgressFC;","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport ProgressFC from \"./comps/ProgressFC\";\nimport GameTime from \"../engine/modules/Gametime\";\n\nconst BottomBar: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='UIRow GameTimeRow'>\n            <div style={{display:'flex', width:'100%'}}>\n                <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.msprogress} max={GameTime.requiredMS} label={`Time - ${msToHM(data.gameTime.msprogress)}`} />\n                </div>\n                <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.day} max={GameTime.maxDays} label={`Day - ${data.gameTime.day}`} />\n            </div>\n            <div className='timebar'>\n            <ProgressFC color='green' background='white' value={data.gameTime.month} max={GameTime.maxMonths} label={`Month - ${data.gameTime.month} ${MONTHS[data.gameTime.month - 1]}`} />\n            </div>\n            <div>\n                {`Year - ${data.gameTime.year}`}\n            </div>\n            </div>\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default BottomBar;\n\nfunction msToHM (msTime: number) {\n    \n    let hour = Math.floor(msTime/1000).toString();\n    if (hour.length === 1) hour = '0' + hour;\n\n    let minute = Math.floor((msTime%1000)/1000 * 60).toString();\n    if (minute.length === 1) minute = '0' + minute;\n    \n    return `${hour}:${minute}`\n}\n\nconst MONTHS = [\n    'JAN',\n    'FEB',\n    'MAR',\n    'APR',\n    'MAY',\n    'JUN',\n    'JUL',\n    'AUG',\n    'SEP',\n    'OCT',\n    'NOV',\n    'DEC',\n]","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\n   \nconst CommandButtonFC: React.FC<DecoupledCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false} hidden={props.hidden?props.hidden(data):false} onClick={()=>{submitCommand(props.command)}}>\n            <div className='innerCommandRow'>\n            <span>{props.name}</span> \n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n      )}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButtonFC;\n","import AppContext from \"../context/context\";\nimport React from \"react\";\nimport { formatNumber } from \"../engine/util\";\nimport { prophet_maxHolyPower } from \"../engine/modules/Prophet\";\n\nconst ProphetUI: React.FC<{}> = () => (\n    <AppContext.Consumer>{({ data, submitCommand }) => (\n\n        <div className='ProphetUI'>\n\n            <div className='PietyDiv'>\n                \n\n                    {`Piety: ${formatNumber(data.prophetData.piety)}`}<br/>\n            </div>\n\n            <div hidden={data.prophetData.congregation.USD === 0} className='USDDiv'>\n            {`$${formatNumber(data.prophetData.congregation.USD)}`}<br/>\n            </div>\n\n            <div hidden={data.prophetData.congregation.unlocked === false} className='DevotionDiv'>\n                {`Devotion: ${formatNumber(data.prophetData.devotion)} `}\n            </div>\n\n            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                    {`Holiness: ${formatNumber(data.prophetData.holiness)}`}\n            </div>\n\n        </div>\n\n    )}</AppContext.Consumer>\n)\n\nexport default ProphetUI;\n\n","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport './NavBar.scss';\nimport CommandButtonFC from './CommandButtonFC';\nimport { areaUnlocked } from '../../engine/modules/NavArea';\n\nconst NavBar: React.FC<{tip?: ReactNode}> = (props) => (\n  <AppContext.Consumer>\n      {({ data, submitCommand }) => (\n        <div className={`NavBar selected${data.nav.mainArea+1}`}>\n          <CommandButtonFC name='Relics' command='nav main 0' />\n          <CommandButtonFC name='Reincarnation' command='nav main 1' hidden={(datamap)=>{return !areaUnlocked(1, data)}}/>\n          <CommandButtonFC name='Congregation' command='nav main 2' hidden={(datamap)=>{return datamap.prophetData.congregation.unlocked === false}} />\n          <CommandButtonFC name='Adornments' command='nav main 3' hidden={(datamap)=>{return datamap.followers.adornmentsUnlocked === false}} />\n          <CommandButtonFC name='Miracles' command='nav main 4' hidden={(datamap)=>{return datamap.rocketData.unlocked === false}} />\n          <CommandButtonFC name='Pantheon' command='nav main 5' hidden={(datamap)=>{return datamap.pantheon.unlocked === false}} />\n        </div>    \n\n\n      )}\n    </AppContext.Consumer>\n)\n\nexport default NavBar;","import React, { ReactNode } from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport CommandButtonFC from './CommandButtonFC';\n\nexport interface CCBProps {\n  command: DecoupledCommand;\n  warning: ReactNode\n}\n\nexport default class ConfirmCommandButton extends React.Component<CCBProps, {open:boolean}>{ \n\n  constructor(props:CCBProps) {\n    super(props)\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  static contextType = AppContext;\n\n  fakeBuy = (ev: React.MouseEvent) => {\n    if (ev.shiftKey) {\n      this.context.submitCommand(this.props.command.command)\n    } else this.setState({open:!this.state.open})\n    \n  }\n\n  render () {\n    let data = this.context.data;\n\n    return (<div>\n        <div className='FakeButton' hidden={this.props.command.hidden?this.props.command.hidden(data):false}>\n        <button className='DCommandFC' disabled={this.props.command.able?!this.props.command.able(data):false} onClick={this.fakeBuy}>\n            <div className='innerCommandRow'>\n              <span>{this.props.command.name}</span> \n            <img hidden={this.props.command.img === undefined} src={this.props.command.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={this.props.command.tip} />\n        </button>\n        </div>\n        <div className='WarningBox' hidden={!this.state.open}>\n            <div className='WarningOverlay' onClick={this.fakeBuy}>\n              <div className='WarningPopup'>\n                {this.props.warning}\n                <div className='flexrow spacebetween'>\n                <CommandButtonFC {...this.props.command}/>\n                <button className='PlainD' onClick={this.fakeBuy}>\n                  cancel\n                </button>\n                </div>\n              </div>\n            </div>\n        </div>\n    </div>)\n  }\n}\n\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand2 } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport { percentOf, formatNumber } from '../../engine/util';\n   \nconst CommandButton2: React.FC<DecoupledCommand2> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n        let command = props.command(data);\n        let name = props.name(data);\n        let change = props.change?props.change(data):undefined;\n        let cost;\n        if (props.cost) {\n          cost = props.cost(data)\n        }\n\n        return (\n          <div hidden={props.hidden?props.hidden(data):false}>\n\n          <button className='DCommandFC' disabled={props.able?!props.able(data):false}  onClick={()=>{submitCommand(command)}}>\n            <div className='innerCommandRow'>\n              <div className='flexcolumn'>\n            <span>{name}</span>\n            <span>{change}</span> \n      {cost&&<span>{formatNumber (cost)} <span>{props.costName}</span> {props.resource&&<span>({percentOf(cost, props.resource(data))})</span>}</span>}\n            </div>\n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </button>\n          </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default CommandButton2;\n","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\nimport CommandButtonFC from \"./CommandButtonFC\";\n\nimport { prophet_prestige_gain, next_holiness_mult, holiness_mult, reincation_mult, CMD_prophet_devotedPrestige, devotedPrestige_cost, Building_Multi } from \"../../engine/modules/Prophet\";\n\nimport { holiness_holyPumpUpgrade_command, holiness_holyPumpUpgradeCost, holiness_maxHolyPowerUpgrade_command, holiness_maxHolyPowerUpgradeCost, holiness_holypower1, holiness_holyPowerUpgradeCost as holiness_holyPowerEffectivenessUpgradeCost, holiness_buildingMulti_command, holiness_buildingMultiCost, holiness_believerRetention_command, holiness_believerRetentionCost, holiness_exRelations_command, holiness_exRelationsCost, holiness_devotionEffectiveness_command, holiness_devotionEffectivenessCost } from \"../../engine/modules/PietyPurchases\";\nimport ConfirmCommandButton from \"./ConfirmCommandButton\";\nimport { formatNumber } from \"../../engine/util\";\nimport { availableDivinity, getDivinity, DivinityPurchase, divinityPurcase_getCost, dp_able, DP_Upgrades } from \"../../engine/modules/Followers\";\nimport CommandButton2 from \"./CommandButton2\";\nimport { UnlockPantheonCommand } from \"../../engine/modules/Pantheon/Pantheons\";\n\nconst ResetUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className='HolinessUI'>\n                <div className='HeaderText'>Commands</div>\n                <div className='flexrow'>\n                    <ConfirmCommandButton\n                        command={{\n                            command: 'prophet prestige',\n                            name: `Reincarnate (+${formatNumber(prophet_prestige_gain(data))} holiness)`,\n                            hidden: (datamap) => { return datamap.prophetData.prestigeUnlocked === false },\n                            tip: (<div>\n                                <div>\n                                    Holiness Mult After: x{next_holiness_mult(data).toFixed(1)}\n                                </div>\n                                <div className='PietyDiv'>\n                                    From max Piety this life: {formatNumber(data.prophetData.maxPiety)}\n                                </div>\n                                <div>\n                                    Net from reincarnation {formatNumber((prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness))}\n                                </div>\n                            </div>)\n                        }}\n                        warning={<div>\n                            {`You will lose everything except things you know you wont!`}\n                        </div>}\n\n                    />\n                    <div className='ParitionerButton'>\n\n                        <ConfirmCommandButton\n                            command={{\n                                ...CMD_prophet_devotedPrestige,\n                                tip: (<div>\n                                    <div>\n                                        Cost: {formatNumber(devotedPrestige_cost(data))} Devotion\n                                    </div>\n                                    <div>\n                                        Lose: Everything except divinity upgrades and increased reincarnation multiplier. <br />\n                                        Get: 100% increased reincarnation multiplier, +1 Divinity\n                                    </div>\n                                    <div>\n                                        x{data.followers.devotedPrestige + 1} -> x{data.followers.devotedPrestige + 2}\n                                    </div>\n                                </div>)\n                            }}\n                            warning={<div>\n                                {`You will lose everything except your devoted prestige level!`}\n                            </div>}\n                        />\n                    </div>\n                </div>\n\n                <div className='HeaderText'>Info</div>\n                <div>\n                    {`Holiness spent this life ${formatNumber(data.prophetData.startingHoliness - data.prophetData.holiness)}`}\n                    </div><div>\n                    {`Net Holiness after reincarnation ${formatNumber((prophet_prestige_gain(data) + data.prophetData.holiness - data.prophetData.startingHoliness))}`}\n                </div>\n                <div className='HolinessDiv'>\n                    {`Holiness Mult: x${holiness_mult(data).toFixed(1)}`}\n                </div>\n                <div>\n                    {`Reincarnation Mult: x${reincation_mult(data).toFixed(1)}`}\n                </div>\n                <div className='HeaderText'>Holiness Upgrades</div>\n                <div className='flexrow'>\n\n                <CommandButton2 \n                    name={()=>holiness_holyPumpUpgrade_command.name}\n                    command={()=>holiness_holyPumpUpgrade_command.command}\n                    hidden={holiness_holyPumpUpgrade_command.hidden}\n                    able={holiness_holyPumpUpgrade_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.holyPumpUpgrade}`}\n                    cost={holiness_holyPumpUpgradeCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Double Holy Power gain from Prayer<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_maxHolyPowerUpgrade_command.name}\n                    command={()=>holiness_maxHolyPowerUpgrade_command.command}\n                    hidden={holiness_maxHolyPowerUpgrade_command.hidden}\n                    able={holiness_maxHolyPowerUpgrade_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.maxHolyPowerUpgrade}`}\n                    cost={holiness_maxHolyPowerUpgradeCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Double maximum Holy Power. Holy power mult is a function of current Holy Power, which is limited my maximum holy power.<br/>\n                        Max holy power and holy power mult are not 1->1. <br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_holypower1.name}\n                    command={()=>holiness_holypower1.command}\n                    hidden={holiness_holypower1.hidden}\n                    able={holiness_holypower1.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.holypowerUpgrade}`}\n                    cost={holiness_holyPowerEffectivenessUpgradeCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Increase the effectiveness of Holy Power<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_buildingMulti_command.name}\n                    command={()=>holiness_buildingMulti_command.command}\n                    able={holiness_buildingMulti_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.buildingMulti}`}\n                    hidden={holiness_buildingMulti_command.hidden}\n                    cost={holiness_buildingMultiCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        +0.1 \"Relic Production Per 25 Relics\" Multiplier<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_believerRetention_command.name}\n                    command={()=>holiness_believerRetention_command.command}\n                    able={holiness_believerRetention_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.believerRetention}`}\n                    cost={holiness_believerRetentionCost}\n                    hidden={holiness_believerRetention_command.hidden}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Halve the believers who leave each day.<br />\n                    </div>}\n                />\n                <CommandButton2 \n                    name={()=>holiness_exRelations_command.name}\n                    command={()=>holiness_exRelations_command.command}\n                    hidden={holiness_exRelations_command.hidden}\n                    able={holiness_exRelations_command.able}\n                    change={(data)=>`Level: ${data.holinessUpgrades.exRelations}`}\n                    cost={holiness_exRelationsCost}\n                    resource={()=>data.prophetData.holiness}\n                    costName={`holiness`}\n                    tip={<div>\n                        Make the influence of ex members less effective.<br />\n                    </div>}\n                />\n                <CommandButton2 \n                name={()=>holiness_devotionEffectiveness_command.name}\n                command={()=>holiness_devotionEffectiveness_command.command}\n                hidden={holiness_devotionEffectiveness_command.hidden}\n                able={holiness_devotionEffectiveness_command.able}\n                change={(data)=>`Level: ${data.holinessUpgrades.devotionEffectiveness}`}\n                cost={holiness_devotionEffectivenessCost}\n                resource={()=>data.prophetData.holiness}\n                costName={`holiness`}\n                tip={<div>\n                    Increase the total devotion multiplier by 2x<br />\n                </div>}\n                />\n                </div>\n                <div hidden={getDivinity(data) === 0}>\n                <div className='HeaderText'>Divinity Upgrades</div> \n                <div className='DivinityButtonWrapper'>\n\n                <CommandButtonFC command='followers divinity reset_toggle' \n                        name={data.followers.DPUpgrades.reset?`Reset on Reincarnation (ON)`:`Reset on Reincarnation (OFF)`} \n                        />\n                        </div>\n\n                    <div>Available divinity: {availableDivinity(data)}</div>\n                    <div className='flexrow DivinityButtonWrapper flexwrap'>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_beliverGain}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_fasterRelicProduction}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_superHolyPump}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_heavyHolyPower}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_monthMultiplier}/>\n                        <DPUpgradeComp dp={DP_Upgrades.DP_yearMultiplier}/>\n                    </div>\n\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default ResetUI;\n\n\n\n\nconst DPUpgradeComp: React.FC<{ dp: DivinityPurchase }> = (props) => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <CommandButtonFC {...props.dp.command}\n                able={(datamap)=>{return dp_able(datamap, props.dp)}}\n                tip={<div>\n                    Cost: {divinityPurcase_getCost(data, props.dp)}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n        )}\n    </AppContext.Consumer>\n)\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { Paritioners, paritioner_able, paritioner_maxBuyAmount, paritioner_cost, paritioner_maxBuyCost, paritioner_buyHalfMax_amount, paritioner_buyHalfMax_cost, proudBeliever_believer_gain, WealthyBeliever_USD_gain, WealthyBeliever_Believer_gain } from '../../engine/modules/Followers';\nimport { formatNumber } from '../../engine/util';\n\n\nconst ParitionerBox: React.FC<{ paritionerIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.paritionerIndex > 0 && data.prophetData.congregation.paritioners[props.paritionerIndex - 1] === 0} className='ParitionerBox'>\n        <div style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n          <div>\n            <span>\n           {Paritioners[props.paritionerIndex].name}\n            </span>\n            <div>\n            Count: {data.prophetData.congregation.paritioners[props.paritionerIndex]}\n          </div>\n          </div>\n          <div className='flexrow spacebetween'>\n\n          <CommandButtonFC\n            name={`Recruit`}\n            command={`followers recruitparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_able(datamap, props.paritionerIndex) }}\n            />\n            <CommandButtonFC\n              name={`Recruit 50% (${paritioner_buyHalfMax_amount(props.paritionerIndex, data)})`}\n              command={`followers recruithalfmaxparitioner ${props.paritionerIndex}`}\n              able={(datamap) => { return paritioner_buyHalfMax_amount(props.paritionerIndex, datamap) > 0 }}\n              tip={(<div>\n                Cost: {paritioner_buyHalfMax_cost(props.paritionerIndex, data).toExponential(3)}\n              </div>)}\n            />\n          <CommandButtonFC\n            name={`Recruit max (${paritioner_maxBuyAmount(props.paritionerIndex, data)})`}\n            command={`followers recruitmaxparitioner ${props.paritionerIndex}`}\n            able={(datamap) => { return paritioner_maxBuyAmount(props.paritionerIndex, datamap) > 0 }}\n            tip={(<div>\n              Cost: {paritioner_maxBuyCost(props.paritionerIndex, data).toExponential(3)}\n            </div>)}\n          />\n              </div>\n\n              <div className='flexrow spacebetween'>\n                \n\n          \n          <div >\n            Cost: {formatNumber(paritioner_cost(data, props.paritionerIndex))} Devotion\n          </div>\n              </div>\n\n              <div>\n                <ParitionerDetailts index={props.paritionerIndex} />\n              </div>\n\n          \n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default ParitionerBox;\n\nexport const ParitionerDetailts: React.FC<{ index: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div>\n        {(props.index === 0) && `Bringing in ${proudBeliever_believer_gain(data)} other believers a day`}\n        {(props.index === 1) && `Tithing ${WealthyBeliever_USD_gain(data)} USD a day`}\n        {(props.index === 2) && `Asking ${data.prophetData.congregation.paritioners[props.index]} questions a day`}\n        {(props.index === 3) && `Providing ${data.prophetData.congregation.paritioners[props.index]} credibility a day `}\n        {(props.index === 4) && `Taking ${data.prophetData.congregation.paritioners[props.index]} crediblity a day`}\n        {(props.index === 5) && `Fix ${data.prophetData.congregation.paritioners[props.index]} a day`}\n\n        <br/>\n\n        {(props.index === 1 && data.pantheon.wealth.b > 0) && `Recruiting ${WealthyBeliever_Believer_gain(data)} believers a day`}\n\n      </div>\n    )}\n  </AppContext.Consumer>\n)","import React from 'react';\nimport AppContext from '../../context/context';\nimport { DecoupledCommand2 } from '../../engine/interfaces/ICommand';\nimport TipFC from './TipFC';\nimport './CommandButtonFC.scss'\nimport { percentOf, formatNumber } from '../../engine/util';\nimport ExpoCommand, { expoCommand_Able, expoCommand_Cost, expoCommand_maxAmmount } from '../../engine/interfaces/ExpoCommand';\n   \nconst ExpoButton: React.FC<ExpoCommand> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n        \n        let command = props.command;\n        let name = props.name;\n        let level = props.countFns.get(data);\n\n        let change = props.change?props.change(data):undefined;\n\n        let able = expoCommand_Able(data, props)\n        let cost = expoCommand_Cost(data, props)\n        let max = expoCommand_maxAmmount(data, props)\n\n        return (\n          <div hidden={props.hidden?props.hidden(data):false}>\n\n          <div className='DCommandFC'  >\n            <div className='innerCommandRow flexrow'>\n              <button className='DCommandFC flexcolumn' disabled={!able}  onClick={()=>{submitCommand(command)}} >\n        <span>{name}</span> \n        <span>Level {level}</span>\n            {change && <span>{change}</span>} \n            <span>{formatNumber (cost)} <span>{props.currencyName}</span> </span>\n            </button>\n            <button className='DCommandFC' disabled={!able}  onClick={()=>{submitCommand(command+'max')}}>\n            Buy Max<br/> \n            ({max})\n            </button>\n            <img hidden={props.img === undefined} src={props.img} height={'30px'} alt=\"\" />\n            </div>\n            <TipFC tip={props.tip} />\n        </div>\n\n\n\n          </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default ExpoButton;\n","import AppContext from \"../context/context\";\n\nimport { helper_prophet_maxBelieversDecay, CMD_prophet_proselytize, helper_prophet_maxBeliverGain, helper_prophet_exBeliever_harm, helper_prophet_maxBeliverGainNet, preachers_max_deovtion_gain, devotee_devotion_gain, doorknocker_beliver_gain, helper_prophet_exBeliever_believerDecay, helper_prophet_size_believerDecay, availablePeople } from \"../engine/modules/Prophet\";\n\nimport TipFC from \"./comps/TipFC\";\n\nimport { devotion_mult, upgrade_preacher_cmd, preacher_upgrade_cost, recruit_preacher_cmd, preacher_cost, upgrade_devotee_cmd, devotee_upgrade_cost, recruit_devotee_cmd, devotee_cost, upgrade_doorknocker_cmd, doorknocker_upgrade_cost, recruit_doorknocker_cmd, doorknocker_cost, proudBeliever_believer_gain, UnlockAdornments, UnlockAdornments_cost } from \"../engine/modules/Followers\";\n\nimport CommandButtonFC from \"./comps/CommandButtonFC\";\n\nimport ParitionerBox from \"./comps/ParitionerBox\";\nimport React from \"react\";\nimport { formatNumber, WORLD_POP } from \"../engine/util\";\nimport CommandButton2 from \"./comps/CommandButton2\";\nimport * as DevotionUpgrades from \"../engine/modules/DevotionPurchases\";\nimport StatFC from \"./comps/StatFC\";\nimport { UnlockPantheonCommand } from \"../engine/modules/Pantheon/Pantheons\";\nimport ExpoButton from \"./comps/ExpoButton\";\nimport { USD_UpgradeTithe, USD_Upgrade_Pamphlets } from \"../engine/modules/USDPurchases\";\n\nconst FollowersUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div>\n\n\n\n                <div>\n\n                    <div>\n                        <span className='HeaderText'>Congregation Info</span>\n                    </div>\n                    <div>\n                        {`Believers: ${data.prophetData.believers}`}<br />\n                        <TipFC tip={`Believers are useless on their own, but Preachers use them to genreate deovtion!`} />\n                    </div>\n                    <div>\n                        {`Daily Believer Gain: ${doorknocker_beliver_gain(data) + proudBeliever_believer_gain(data)}`}\n                    </div>\n                    <div>\n                        {`Max Daily Believer Loss: ${helper_prophet_maxBelieversDecay(data)}`}<br />\n                        <TipFC tip={<div>It feels like people stop believing every day!<br />Both total followers and total ex followers are influences.<br />\n                            Loss From Ex Followers: {helper_prophet_exBeliever_believerDecay(data)}<br />\n                            Loss From Congregation Size: {helper_prophet_size_believerDecay(data)}<br />\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Former Belivers: ${data.prophetData.ex_believers}`}<br />\n                        <TipFC tip={<div>Pesky ex-believers influence people to not believe!<br />\n                            {`Removes ${helper_prophet_exBeliever_harm(data)} from possible gains`}<br />\n                            {`Makes up to ${helper_prophet_exBeliever_believerDecay(data)} believers leave each day`}<br />\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Possible Converts ${availablePeople(data)}`}\n                        <TipFC tip={<div>\n                            {`World Pop - ExBelievers - Believers`}<br />\n                            {`${WORLD_POP} - ${data.prophetData.ex_believers} - ${data.prophetData.believers}`}<br />\n                        </div>} />\n                    </div>\n                    <div>\n                        {`Devotion Mult to Piety: x${devotion_mult(data).toFixed(1)}`}\n                    </div>\n                </div>\n\n                <div>\n\n                    <div className='HeaderText'>Commands</div>\n                    <div className='flexrow'>\n                        <div className='HolinessButtonWrapper'>\n\n                            <CommandButtonFC {...CMD_prophet_proselytize}\n                                tip={<div>\n                                    Spend Holiness to make people believe<br />\n                                    {`Proselytize Beliver Gain: (${helper_prophet_maxBeliverGain(data)}-${helper_prophet_exBeliever_harm(data)})=${helper_prophet_maxBeliverGainNet(data)}`}<br />\n                                    (How many believers your piety attracts) - (How many believers your ex-believers detract)\n                            </div>}\n                            />\n                        </div>\n\n                        <div className='DevotionButtonWrapper'>\n\n\n                        <CommandButton2\n                            name ={()=>UnlockAdornments.name}\n                            command ={()=>UnlockAdornments.command}\n                            hidden= {UnlockAdornments.hidden}\n                            able={UnlockAdornments.able}\n                            cost={UnlockAdornments_cost}\n                            costName='Devotion'\n                                tip={`Unlock Adornments that aren't lost through ANY reincarnation, or for any reason ever. You keep these!`}\n                            />\n                            \n                            <div className='USDCommand'>\n                                <CommandButton2 {...UnlockPantheonCommand} />\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className='HeaderText'>Upgrades</div>\n                    <div className='flexrow'>\n\n                        <div className='USDCommand'>\n                            <ExpoButton {...USD_UpgradeTithe} />\n                        </div>\n\n                        <div className='USDCommand'>\n                            <ExpoButton {...USD_Upgrade_Pamphlets} />\n                        </div>\n\n\n\n                    </div>\n\n                    <div className='flexrow'>\n\n                        <div className='flexrow'>\n                            {DevotionUpgrades.ABC_hidden(data) === false && <div className='flexcolumn godbox' style={{ border: '2px solid white' }}>\n                                <div>Choose a god for your believers to be proud of, and add it to your Pantheon</div>\n                                <div className='flexrow DevotionButtonWrapper '>\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_ShorterDays} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_NoHPDecay} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_RelicPower} />\n                                </div>\n                            </div>}\n                        </div>\n                        <div className='flexrow'>\n                            {DevotionUpgrades.DEF_hidden(data) === false && <div className='flexcolumn godbox' style={{ border: '2px solid white' }}>\n                                <div>Choose a god that gives your believers a reason to give, and add it to your Pantheon.</div>\n                                <div className='flexrow DevotionButtonWrapper'>\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_D} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_E} />\n                                    <CommandButton2 {...DevotionUpgrades.Devotion_Upgrade_F} />\n                                </div>\n                            </div>}\n\n                        </div>\n\n                    </div>\n\n                </div>\n\n                <div>\n                    <div className='flexrow'>\n                        <span className='HeaderText'>Use your Holiness to convert basic believers into Clergy</span>\n                        <div className='HolinessButtonWrapper'>\n                            <CommandButtonFC command='followers recruit autotoggle'\n                                name={data.automation.auto_buyToNext ? `Auto Rebuy (ON)` : `Auto Rebuy (OFF)`}\n                            />\n                        </div>\n                    </div>\n\n                    <div className='FollowerBox'>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.preachers} Preachers - Level {data.prophetData.congregation.preacherLevel + 1}<br />\n                                    <span hidden={data.prophetData.congregation.preachers >= data.prophetData.congregation.old.preachers\n                                        && data.prophetData.congregation.preacherLevel >= data.prophetData.congregation.old.preacherLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.preachers} Preachers - Level {data.prophetData.congregation.old.preacherLevel + 1}\n                                        <CommandButtonFC\n                                            command='followers recruit preachermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Up to ${formatNumber(preachers_max_deovtion_gain(data))} devotion per day from believers`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_preacher_cmd} />\n                                    <span>\n                                        {`Cost: ${formatNumber(preacher_upgrade_cost(data))} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_preacher_cmd} />\n                                <span>\n                                    {`Cost: ${formatNumber(preacher_cost(data))} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.devotee} Devotees - Level {data.prophetData.congregation.devoteeLevel + 1}<br />\n                                    <span hidden={data.prophetData.congregation.devotee >= data.prophetData.congregation.old.devotee\n                                        && data.prophetData.congregation.devoteeLevel >= data.prophetData.congregation.old.devoteeLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.devotee} Devotees - Level {data.prophetData.congregation.old.devoteeLevel + 1}\n                                        <CommandButtonFC\n                                            command='followers recruit devoteemax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n                                </div>\n                                <div>\n                                    {`${devotee_devotion_gain(data)} devotion per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_devotee_cmd} />\n                                    <span>\n                                        {`Cost: ${formatNumber(devotee_upgrade_cost(data))} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_devotee_cmd} />\n                                <span>\n                                    {`Cost: ${formatNumber(devotee_cost(data))} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n\n                        </div>\n\n                        <div className='FollowerDiv'>\n                            <div>\n                                <div>\n                                    {data.prophetData.congregation.doorknocker} Recruiters - Level {data.prophetData.congregation.doorknockerLevel + 1}<br />\n                                    <span hidden={data.prophetData.congregation.doorknocker >= data.prophetData.congregation.old.doorknocker\n                                        && data.prophetData.congregation.doorknockerLevel >= data.prophetData.congregation.old.doorknockerLevel}>\n                                        Last:<br />\n                                        {data.prophetData.congregation.old.doorknocker} Recruiters - Level {data.prophetData.congregation.old.doorknockerLevel + 1}\n                                        <CommandButtonFC\n                                            command='followers recruit doorknockermax'\n                                            name='Buy To Last'\n                                        />\n                                    </span>\n\n                                </div>\n                                <div>\n                                    {`Recruiting ${doorknocker_beliver_gain(data)} belivers per day`}\n                                </div>\n                                <div>\n                                    <CommandButtonFC {...upgrade_doorknocker_cmd} />\n                                    <span>\n                                        {`Cost: ${formatNumber(doorknocker_upgrade_cost(data))} Holiness`}\n                                    </span>\n                                </div>\n                            </div>\n                            <div>\n                                <CommandButtonFC {...recruit_doorknocker_cmd} />\n                                <span>\n                                    {`Cost: ${formatNumber(doorknocker_cost(data))} Holiness, 1 Believer`}\n                                </span>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                </div>\n\n                <div>\n\n\n                    <span className='HeaderText'>Use your Devotion to create exceptional Believers.</span>\n\n                    <div className='FollowerBox'>\n                        <ParitionerBox paritionerIndex={0} />\n                        <ParitionerBox paritionerIndex={1} />\n                    </div>\n                </div>\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default FollowersUI;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\nimport CommandButtonFC from \"./CommandButtonFC\";\nimport CommandButton2 from \"./CommandButton2\";\nimport { currentSalary, availableExplorers, AreaData, getAreaGoal, getAreaETA, show_explore_area, AREA_STRS } from \"../../engine/modules/Exploring\";\nimport { AdornmentItem, getFullAdornmentItem } from \"../../engine/modules/Adornments\";\nimport TipFC from \"./TipFC\";\n\nconst AdornmentUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div>\n                <div className='HeaderText'>Adornments</div>\n                <div>\n                    Hire Believers to explore the world looking for Adornments for you. Not 100% useful yet!\n                    <TipFC tip={`Only all the items from the ruins do something. Only 40% of the items from each other area have been given stats.`} />\n                </div>\n                <hr/>\n                <div className='flexrow'>\n\n                    <div className='flexcolumn flexequal'>\n                        <div className='HeaderText'>Explorers</div>\n                        <div>\n                            No believers... no explorers.\n                        </div>\n                        <div className='HeaderText'>Info</div>\n                        <div className='flexcolumn flexwrap'>\n                            <div>\n                                \n                            Available Believers: {data.prophetData.believers}\n                            </div><div>\n\n                            Explorers: {data.adornments.explorers.explorerCount}\n                            </div><div>\n\n                            Available Explorers: {availableExplorers(data)}\n                            </div>\n                            <div>\n                            Daily Salary: <span className='USDDiv'>${currentSalary(data)}</span>\n                            </div>\n                        </div>\n\n                        <div className='HeaderText'>Commands</div>\n                        <div className='flexrow flexwrap'>\n\n                        <CommandButton2 command={() => 'adornments explorer hire'} name={() => `Hire Explorer`} />\n                        <CommandButton2 command={() => 'adornments explorer fire'} name={() => `Fire Explorer`} />\n                        </div>\n\n                        <div className='HeaderText'>Party</div>\n                        <div className='flexrow flexwrap'>\n                        <div>\n                        Explorers to send {data.adornments.explorers.readyForMission}\n                        </div>\n                        <CommandButton2 command={() => 'adornments explorer senddown'} name={() => `<-`} />\n                        <CommandButton2 command={() => 'adornments explorer sendup'} name={() => `->`} />\n                        </div>\n\n                        <div className='HeaderText'>Areas</div>\n\n                      \n                        <div className='flexrow flexwrap'>\n\n        {show_explore_area(data, AREA_STRS.RUINS_STRS.key) && <AreaBox commandKey='ruins' area={data.adornments.explorers.areas.ruins} />   }         \n        {show_explore_area(data, AREA_STRS.MART_STRS.key) && <AreaBox commandKey='mart' area={data.adornments.explorers.areas.mart} />  }        \n        {show_explore_area(data, AREA_STRS.SHOP_STRS.key) && <AreaBox commandKey='shop' area={data.adornments.explorers.areas.shop} />  }          \n                        </div>\n\n                    </div>\n                    \n                    <div className='flexcolumn flexequal'>\n                        <div className='HeaderText'>Found Adornments</div>\n                        Total Found: {data.adornments.adornmentCount}<br/>\n                        Gems: {data.adornments.gems}<br/>\n                        <div className='HeaderText'>Inventory</div>\n\n                        <div className='flexrow flexwrap'>\n                        {data.adornments.items.map(((itemData,index)=><ItemBox itemData={itemData} index={index} key={`item ${index}`} />))}\n                        </div>\n                        <div className='HeaderText'>Equipped</div>\n                        <div className='flexrow flexwrap'>\n                        {data.adornments.equiped.book !== null &&  <EquippedItemBox itemData={data.adornments.equiped.book} slot={'book'} />}\n                        {data.adornments.equiped.cane !== null && <EquippedItemBox itemData={data.adornments.equiped.cane} slot={'cane'} /> }\n                        {data.adornments.equiped.cap !== null && <EquippedItemBox itemData={data.adornments.equiped.cap} slot={'cap'} /> }\n                        {data.adornments.equiped.ring !== null && <EquippedItemBox itemData={data.adornments.equiped.ring} slot={'ring'} />}\n                        {data.adornments.equiped.robe !== null && <EquippedItemBox itemData={data.adornments.equiped.robe} slot={'robe'} /> }\n                        </div>\n                        { <CommandButton2 command={() => `adornments empty`} name={() => `Clear`} />}\n\n                    </div>\n\n                </div>\n\n\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default AdornmentUI;\n\nconst AreaBox: React.FC<{commandKey: string, area: AreaData}> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='areabox'>\n                            {props.commandKey}<br/>\n                            Active: {props.area.beingExplored.toString()}<br/>\n                            Current Explorers: {props.area.assignedExplorers}<br/>\n                            Man-Days Spent: {props.area.investedDays}<br/>\n                            Goal: {getAreaGoal(props.area, props.commandKey)}<br/>\n                            ETA: {getAreaETA(props.area, props.commandKey)} days<br/>\n                            Items Found: {props.area.exploredCount}\n                            {props.area.beingExplored===false && <CommandButton2 command={() => `adornments explorer ${props.commandKey}`} name={() => `Send Party`} />}\n                            {props.area.beingExplored===true && <CommandButton2 command={() => `adornments explorer stop${props.commandKey}`} name={() => `Recall Party`} />}\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nconst ItemBox: React.FC<{itemData: AdornmentItem, index: number}> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => {\n            let full = getFullAdornmentItem(props.itemData)\n            return (\n            <div className='itembox'>\n                            {full.name}<br/>\n                            {full.power}<br/>\n                            Level: {full.data.level}\n                            <div className='flexrow flexwrap'>\n                            <CommandButton2 command={() => `adornments equip ${props.index}`} name={() => `Equip`} />\n                            <CommandButton2 command={() => `adornments sell ${props.index}`} name={() => `Sell`} />\n                            <CommandButton2 command={() => `adornments combine ${props.index}`} name={() => `Combine`} />\n                            </div>\n            </div>\n        )}}\n    </AppContext.Consumer>\n)\n\nconst EquippedItemBox: React.FC<{itemData: AdornmentItem | null, slot: string}> = (props) => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => {\n            let full = getFullAdornmentItem({iNo:0,level:0,origin:\"\"});\n            if (props.itemData !== null) full = getFullAdornmentItem(props.itemData)\n            return (\n            <div className='itembox'>\n                            {props.slot}<br/>\n                            {full.name}<br/>\n                            {full.power}<br/>\n                            Level: {full.data.level}\n                            <CommandButton2 command={() => `adornments unequip ${props.slot}`} name={() => `Unequip`} />\n            </div>\n        )}}\n    </AppContext.Consumer>\n)","import React from 'react';\nimport AppContext from '../../context/context';\nimport './CommandButtonFC.scss'\nimport { msToFullHMS } from '../../engine/util';\n\n\nexport default class OfflineOverlay extends React.Component { \n\n  static contextType = AppContext;\n\n  fakeBuy () {\n\n  }\n\n  render () {\n    let data = this.context.data;\n\n    return (\n\n        <div className='WarningBox' hidden={data.offline.happening === false}>\n            <div className='WarningOverlay'>\n              <div className='WarningPopup'>\n                Offline Progress<br/>\n                HH:MM:SS<br/>\n                {msToFullHMS(data.offline.totaltime)}<br/>\n                Relic gain is calculated all at once, then days pass.\n              </div>\n            </div>\n        </div>\n    )\n  }\n}\n\n\n","import AppContext from \"../../context/context\";\nimport React from \"react\";\n   \nconst StatFC: React.FC<{name: string, value: number, units?: string, estimate? :number}> = (props) => (\n    <AppContext.Consumer>\n      {({ data, submitCommand }) => {\n\n\n        return (\n            <div className='flexrow spacebetween'>\n            <span>{props.name}</span>\n            <div className='flexcolumn flexgrow'>\n\n            <span className='flexrow flexend'>\n                <span>\n                    {`${props.value.toFixed(2)}`}\n                </span>\n                <span style={{textAlign:'right'}}>\n                    {`${props.units}`}\n                    </span>\n            </span>\n            {props.estimate !== undefined && \n            <span className='flexrow flexend'>\n                <span>\n                    {`${props.estimate.toFixed(2)}`}\n                </span>\n                <span style={{textAlign:'right'}}>\n                    {`${props.units}`}\n                </span>\n            </span>}\n            </div>\n            </div>\n      )}}\n    </AppContext.Consumer>\n  );\n\nexport default StatFC;","import AppContext from \"../../context/context\";\n\nimport React from \"react\";\n\n\n\nimport CommandButton2 from \"./CommandButton2\";\nimport { cmd_ballheightplus, cmd_dropball, cmd_ballmassplus, cmd_throwball, cmd_ballvelocityplus, cmd_bouncyball, cmd_ballbouncesplus } from \"../../engine/modules/Rocket\";\nimport StatFC from \"./StatFC\";\n\nconst RocketUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data, submitCommand }) => (\n            <div className='flexcolumn'>\n                <span className='HeaderText'>\n                    Miracles\n                </span>\n                <span>\n                    Use some of the energy your body generates each day (joules) and the power of prophecy (math) to impress your followers by foretelling physical phenomena.\n                </span>\n                <span className='HeaderText'>Info</span>\n                {`Joules: ${data.rocketData.joules}`}\n                <span className='HeaderText'>Modify Ball / Begin Miracle</span>\n                <div className='flexrow'>\n                    {false&&<CommandButton2 {...cmd_ballmassplus} />}\n                    <CommandButton2 {...cmd_ballheightplus} />\n                    <CommandButton2 {...cmd_dropball} />\n                    <CommandButton2 {...cmd_ballvelocityplus} />\n                    <CommandButton2 {...cmd_throwball} />\n                    <CommandButton2 {...cmd_ballbouncesplus} />\n                    <CommandButton2 {...cmd_bouncyball} />\n                </div>\n                <span className='HeaderText'>Dropped Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Mass' value={data.rocketData.ball.mass} units='kg' />\n                        <StatFC name='Starting Height' value={data.rocketData.ball.height} units='m' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.ball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.ball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.ball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.ball.sim.mass} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.ball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.ball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.ball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.ball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n                <span className='HeaderText'>Thrown Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Starting Velocity' value={data.rocketData.thrown_ball.initial_velocity} units='m/s' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.thrown_ball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.thrown_ball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.thrown_ball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.thrown_ball.sim.mass} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.thrown_ball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.thrown_ball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.thrown_ball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.thrown_ball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n                <span className='HeaderText'>Bouncy Ball</span>\n                <div className='flexrow'>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Stats</div>\n                        <StatFC name='Bounces' value={data.rocketData.bouncyball.bounces_upgrades+1} units='m/s' />\n                        <StatFC name='Estimated VMax' value={data.rocketData.bouncyball.derived.estimatedVMax} units='m/s' />\n                        <StatFC name='Estimated Time' value={data.rocketData.bouncyball.derived.estimatedTime} units='s' />\n                        <StatFC name='Estimated Joules' value={data.rocketData.bouncyball.derived.estimatedJouls} units='j' />\n                    </div>\n                    <div className='flexcolumn flexequal' style={{padding:'10px'}}>\n                        <div className='HeaderText'>Sim</div>\n                        <StatFC name='Mass' value={data.rocketData.bouncyball.sim.mass} units='kg' />\n                        <StatFC name='Bounces' value={data.rocketData.bouncyball.sim.bounces} units='kg' />\n                        <StatFC name='Current Height' value={data.rocketData.bouncyball.sim.current_h} units='m' />\n                        <StatFC name='Current Speed' value={data.rocketData.bouncyball.sim.current_v} units='m/s' />\n                        <StatFC name='Elapsed Time' value={data.rocketData.bouncyball.sim.elapsedTime} units='s' />\n                        <StatFC name='Joules from Impact' value={data.rocketData.bouncyball.sim.impactJouls} units='j' />\n                    </div>\n                </div>\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default RocketUI;\n\n","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi, relic_maxBuyCost, relicDeltaMult } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDRelicPurchases';\nimport { formatNumber } from '../../engine/util';\n\n\nconst RelicTip: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      \n                <div>\n                  <div>\n                    Time: {(RELICS[props.relicIndex].initialTime/relicDeltaMult(data)).toFixed(2)}\n                  </div>\n                  <div className='PietyDiv'>\n                    Production: {RELICS[props.relicIndex].initialRevenue}\n                  </div>\n                  <div>\n                    Multi: {formatNumber( relic_getProductionMulti(props.relicIndex, data))}\n                  </div>\n                  <div>\n                  {`x${Building_Multi(data, props.relicIndex)} production per 25 relics`} \n                  </div>\n                  \n                </div>\n              \n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicTip;","import React from 'react';\nimport AppContext from '../../context/context';\nimport CommandButtonFC from './CommandButtonFC';\nimport { RELICS, relic_canBuy, relic_getCost, relic_getTime, relic_getProductionPerecond, relic_getProductionMulti, relic_maxBuyAmount, relic_canBuyNext, relic_buyNextCost, relic_getProduction, Building_Multi, relic_maxBuyCost } from '../../engine/modules/Prophet';\nimport ProgressFC from './ProgressFC';\nimport TipFC from './TipFC';\nimport { relicUSDupgrade_able, relicUSDupgrade_cost } from '../../engine/modules/USDRelicPurchases';\nimport RelicTip from './RelicTip';\nimport { formatNumber } from '../../engine/util';\n\n\nconst RelicBox: React.FC<{ relicIndex: number }> = (props) => (\n  <AppContext.Consumer>\n    {({ data, submitCommand }) => (\n      <div hidden={props.relicIndex > 0 && data.prophetData.relics[props.relicIndex - 1] === 0} className='RelicBox'>\n        <ProgressFC background={'yellow'} color='green' value={data.prophetData.relicTimers[props.relicIndex]} max={relic_getTime(props.relicIndex)} \n          label={`${RELICS[props.relicIndex].name} x${data.prophetData.relics[props.relicIndex]}`}\n          />\n        <div className='relicboxrow'>\n\n          <div hidden={data.prophetData.relicsetbuy !== 1}>\n\n            <CommandButtonFC name={`Make`} command={`prophet buyrelic ${props.relicIndex}`} able={(datamap) => { return relic_canBuy(props.relicIndex, datamap) }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n            />\n          </div>\n            \n          <div hidden={data.prophetData.relicsetbuy !== 99}>\n            <CommandButtonFC name={`Make Max (${relic_maxBuyAmount(props.relicIndex, data)})`} command={`prophet buymaxrelic ${props.relicIndex}`} \n              able={(datamap) => { return relic_maxBuyAmount(props.relicIndex, data) > 0 }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n             />\n          </div>\n            \n          <div hidden={data.prophetData.relicsetbuy !== 25}>\n\n            <CommandButtonFC name={`Make to 25x`} command={`prophet buyto25relic ${props.relicIndex}`} able={(datamap) => { return relic_canBuyNext(props.relicIndex, data, 25) }}\n              tip={<RelicTip relicIndex={props.relicIndex}/>}\n            />\n            </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 1}>\n            Cost: {formatNumber( relic_getCost(props.relicIndex, data))}\n            </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 99}>\n            Cost: {formatNumber(Math.max(relic_maxBuyCost(props.relicIndex, data),   relic_getCost(props.relicIndex, data)  ))}\n          </div>\n            <div className='PietyDiv' hidden={data.prophetData.relicsetbuy !== 25}>\n            Cost: {formatNumber(relic_buyNextCost(props.relicIndex, data,25))}\n          </div>\n            <div className='USDCommand' hidden={data.prophetData.congregation.paritioners[1] === 0}>\n              <CommandButtonFC\n                name={`Upgrade`}\n                command={`prophet relicupgrade ${props.relicIndex}`}\n                hidden={(datamap) => { return datamap.prophetData.congregation.paritioners[1] === 0 }}\n                able={(datamap) => { return relicUSDupgrade_able(datamap, props.relicIndex) }}\n                tip={<div>\n                  Level: {data.prophetData.relicUSDUpgrades[props.relicIndex]}<br />\n                  <div className='USDDiv'>\n                    Cost: {formatNumber(relicUSDupgrade_cost(data, props.relicIndex))} USD\n              </div>\n                  +0.1 to production mult per 25 relics<br />\n                {`x${Building_Multi(data, props.relicIndex)} production per 25 relics`}\n\n                </div>}\n              />\n            </div>\n\n\n          \n          \n\n          <div className='PietyDiv'>\n            <div>\n              Total P/S: {formatNumber(relic_getProductionPerecond(props.relicIndex, data))}\n            </div>\n            <TipFC tip={<div>\n              Total Production: {formatNumber(relic_getProduction(props.relicIndex, data))}\n            </div>} />\n          </div>\n        </div>\n      </div>\n    )}\n  </AppContext.Consumer>\n);\n\nexport default RelicBox;","import AppContext from \"../../context/context\"\n\nimport CommandButtonFC from \"./CommandButtonFC\"\n\nimport { CMD_prophet_pray, prophet_maxHolyPower, relic_hoylPowerMulti, holiness_mult, reincation_mult, special_relic_mult, time_relic_mult, reincation_mult_from_superPrestiges, item_relic_mult, relicDeltaMult } from \"../../engine/modules/Prophet\"\n\nimport { piety_purchase_hide_holypower, piety_purchase_canBuy_holypower, holyPowerCost, piety_purchase_hide_reincarnation, piety_purchase_canBuy_reincarnation, reincarnationCost, piety_purchase_hide_congregation, piety_purchase_canBuy_congregation, congregationCost, UnlockMiracles } from \"../../engine/modules/PietyPurchases\"\n\nimport RelicBox from \"./RelicBox\"\n\nimport ProgressFC from \"./ProgressFC\"\n\nimport { devotion_mult } from \"../../engine/modules/Followers\"\n\nimport TipFC from \"./TipFC\"\nimport React from \"react\"\nimport StatFC from \"./StatFC\"\nimport CommandButton2 from \"./CommandButton2\"\n\nconst RelicUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({ data }) => {return(\n            <div className='RelicUI'>\n\n                <div className='flexrow'>\n\n                    <div className='flexcolumn flexgrow'>\n\n                        <div className='HeaderText'>Commands</div>\n\n                        <div className='ProphetCommands'>\n                            <CommandButtonFC {...CMD_prophet_pray} tip={<div>Pray to increase your piety.</div>} />\n\n                            <CommandButtonFC name='Empowering Prayer' command='prophet holypower'\n                                hidden={piety_purchase_hide_holypower}\n                                able={piety_purchase_canBuy_holypower}\n                                tip={<div className='PietyDiv'>Cost: {holyPowerCost}</div>}\n                            />\n                            <CommandButtonFC name='Blessing of Reincarnation' command='prophet reincarnate'\n                                hidden={piety_purchase_hide_reincarnation}\n                                able={piety_purchase_canBuy_reincarnation}\n                                tip={<div className='PietyDiv'>Cost: {reincarnationCost}</div>}\n                            />\n                            <CommandButtonFC name='Create Congregation!' command='prophet congregate'\n                                hidden={piety_purchase_hide_congregation}\n                                able={piety_purchase_canBuy_congregation}\n                                tip={<div className='PietyDiv'>Cost: {congregationCost}</div>}\n                            />\n                        </div>\n\n                        <div className='flexrow spacebetween'>\n                        <div className='HeaderText'>Relics</div>\n                        <div className='flexrow'>\n\n                        Make:\n                        <div>\n                                <CommandButtonFC\n                                    name='1'\n                                    command='prophet setbuyrelic 1'\n                                    />\n                        </div>\n                                <CommandButtonFC\n                                    name='x25'\n                                    command='prophet setbuyrelic 25'\n                                />\n                                <CommandButtonFC\n                                    name='Max'\n                                    command='prophet setbuyrelic max'\n                                    />\n                        </div>\n                                    </div>\n\n                        <div className='flexrow'>\n\n                        <div className='flexcolumn flexequal flexgrow'>\n\n                            <RelicBox relicIndex={0} />\n                            <RelicBox relicIndex={1} />\n                            <RelicBox relicIndex={2} />\n                            <RelicBox relicIndex={3} />\n                            <RelicBox relicIndex={4} />\n                        </div>\n                        {(data.prophetData.relics[4] != 0)&&\n                        <div className='flexcolumn flexequal flexgrow'>\n                            <RelicBox relicIndex={5} />\n                            <RelicBox relicIndex={6} />\n                            <RelicBox relicIndex={7} />\n                            <RelicBox relicIndex={8} />\n                            <RelicBox relicIndex={9} />\n                        </div>}\n                        </div>\n\n                    </div>\n\n                    <div className='flexcolumn'>\n                        <div className='HeaderText'>Relic Production Multipliers</div>\n                        <div className='multbox'>\n                            <div hidden={data.prophetData.holyPowerUnlocked === false} >\n\n                                <div hidden={data.prophetData.holyPowerUnlocked === false} className='HolyPowerWrapper'>\n                                    <ProgressFC max={prophet_maxHolyPower(data)}\n                                        label={<div className='flexrow spacebetween'>\n                                            <div>\n                                            {`Holy Power (${Math.floor(100 * data.prophetData.holyPower / prophet_maxHolyPower(data))}%) `} \n                                            </div>\n                                            <div>\n                                            {` x${relic_hoylPowerMulti(data)}`}\n                                            </div>\n                                        </div>}\n                                        value={data.prophetData.holyPower}\n                                        tip={<div>\n                                            Make more relics to increase your max Holy Power!\n                                        </div>}\n                                    />\n                                </div>\n                            </div>\n                            <div hidden={data.prophetData.holiness === 0} className='HolinessDiv'>\n                                <StatFC value={holiness_mult(data)} units=\"x\" name='Holiness' />\n                            </div>\n                            <div hidden={data.prophetData.devotion === 0} className='DevotionDiv'>\n                                <StatFC value={devotion_mult(data)} units=\"x\" name='Devotion' />\n                            </div>\n                            <div hidden={data.prophetData.save.reincarnationCount === 0}>\n                                <StatFC value={reincation_mult(data)} units=\"x\" name='Reincarnation'/>\n                                {data.followers.devotedPrestige > 0 && <TipFC tip={<div>\n                                    {`x${reincation_mult_from_superPrestiges(data)} from Divine Reincarnations`}\n                                </div>} />}\n                            </div>\n                            \n                            <div hidden={special_relic_mult(0, data) === 1}>\n                            <StatFC value={special_relic_mult(0,data)} units=\"x\" name='Special Mult(0)'/>                \n                            <StatFC value={special_relic_mult(9,data)} units=\"x\" name='Special Mult(9)'/>                \n                                <TipFC tip={<div>\n\n                                    <div>\n                                        {`Base: x1`}\n                                    </div>\n                                    <div hidden={data.followers.DPUpgrades.monthMultiplier + data.followers.DPUpgrades.yearMultiplier === 0}>\n                                        {`Time Based Mult: +x${time_relic_mult(data).toFixed(1)}`}\n                                    </div>\n                                </div>}\n                                />\n                            </div>\n                            {item_relic_mult(0,data)>1 && <StatFC value={item_relic_mult(0,data)} units='x' name='Item' />}\n                        </div>\n                        <div className='HeaderText'>\n                            Info\n                        </div>\n                                {<StatFC value={relicDeltaMult(data)} units=\"x\" name='Relic Production Speed'/>}                \n                        \n\n                    </div>\n\n                </div>\n\n\n\n\n\n            </div>\n        )}}\n    </AppContext.Consumer>\n)\n\n\nexport default RelicUI;","import AppContext from \"../../context/context\";\n\nimport './PantheonUI.scss'\n\nimport React from \"react\";\nimport CommandButtonFC from \"./CommandButtonFC\";\nimport { BasePantheonUpgrade, pantheonPurchase_able, pantheonPurchaseCost, pantheonPurchase_maxCost, pantheonPurchase_maxAmmount } from \"../../engine/modules/Pantheon/Types\";\nimport CommandButton2 from \"./CommandButton2\";\nimport * as TIME from '../../engine/modules/Pantheon/Time';\nimport TipFC from \"./TipFC\";\nimport Pantheons from '../../engine/modules/Pantheon/Pantheons';\nimport { formatNumber } from \"../../engine/util\";\n\nconst PantheonUI: React.FC = () => (\n    <AppContext.Consumer>\n        {({data, submitCommand}) => (\n            <div className='PantheonUI'>\n                <span className='HeaderText'>\n                    Pantheon\n                </span>\n                <div>\n                    Reincarnate to choose new gods for your Pantheon. Upgrades, once bought, persist through reincarnations even before you add them to your pantheon.\n                </div>\n                <div>\n                \n                    <TipFC tip={`Not 100% usefull yet. Only the first tier of god (Proud) has additional upgrades. Feel free to suggest upgrades for the missing ones.`}/>\n\n                </div>\n                <div className='pantheoncolumn'>\n\n                {data.prophetData.devotionUpgrades.abc.a && <div>\n                    <span className='HeaderText'>\n                        God of Time\n                        </span>\n                        <div>\n                    <PantheonUpgradeComp dp={TIME.Upgrade_A} />\n                    <PantheonUpgradeComp dp={TIME.Upgrade_B} />\n                    <PantheonUpgradeComp dp={TIME.Upgrade_C} />\n                    <div>\n                        {data.pantheon.time.bonusDays}   \n                    </div>\n                        </div>\n                    </div>}\n                {data.prophetData.devotionUpgrades.abc.b && <div>\n                    <span >\n                    God of Production\n                        </span>\n                        <div>\n                    <PantheonUpgradeComp dp={Pantheons.PRODUCTION.Upgrade_A} />\n                    <PantheonUpgradeComp dp={Pantheons.PRODUCTION.Upgrade_B} />\n                    <PantheonUpgradeComp dp={Pantheons.PRODUCTION.Upgrade_C} />\n                        </div>\n                    </div>}\n                {data.prophetData.devotionUpgrades.abc.c && <div>\n                    <span className='HeaderText'>\n                    God of Wealth\n                        </span>\n                        <div>\n                    <PantheonUpgradeComp dp={Pantheons.WEALTH.Upgrade_A} />\n                    <PantheonUpgradeComp dp={Pantheons.WEALTH.Upgrade_B} />\n                    <PantheonUpgradeComp dp={Pantheons.WEALTH.Upgrade_C} />\n                        </div>\n                    </div>}\n                {data.prophetData.devotionUpgrades.def.a && <div>\n                    <span className='HeaderText'>\n                    God of Persuasion\n                    </span>\n                    Nothing Here! <a target=\"_blank\" href='http://www.reddit.com/r/IA_Games/'>What do you want to see?</a>\n                    </div>}\n                {data.prophetData.devotionUpgrades.def.b && <div>\n                    <span className='HeaderText'>\n                    God of Maintainance\n                        </span>\n                    Nothing Here! <a target=\"_blank\" href='http://www.reddit.com/r/IA_Games/'>What do you want to see?</a>\n                    </div>}\n                {data.prophetData.devotionUpgrades.def.c && <div>\n                    <span className='HeaderText'>\n                    God of Greed\n                        </span>\n                    Nothing Here! <a target=\"_blank\" href='http://www.reddit.com/r/IA_Games/'>What do you want to see?</a>\n                    </div>}\n                </div>\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n\nexport default PantheonUI;\n\n\nconst PantheonUpgradeComp: React.FC<{ dp: BasePantheonUpgrade }> = (props) => (\n    <AppContext.Consumer>\n        {({ data }) => (\n            <div className='PietyCommand flexcolumn pantheonupgrade'>\n            <CommandButton2 {...props.dp.command}\n                cost={(data)=>pantheonPurchaseCost(data,props.dp)}\n                able={(data)=>pantheonPurchase_able(data, props.dp)}\n                costName='Piety'\n                tip={<div>\n                    Cost: {formatNumber(pantheonPurchaseCost(data, props.dp))}<br />\n                    {props.dp.description}<br />\n                    Level : {props.dp.countFn(data)}\n                </div>}\n            />\n            <CommandButton2 name={()=>`Buy Max (${pantheonPurchase_maxAmmount(data,props.dp)})`} command={(data)=>props.dp.command.command(data)+'max'} \n                        able={(data)=>pantheonPurchase_able(data, props.dp)}\n                        />\n            </div>\n        )}\n    </AppContext.Consumer>\n)\n","import React, { FormEvent } from 'react';\nimport Engine from '../engine/Engine';\nimport AppContext from '../context/context';\nimport { Datamap } from '../engine/Datamap';\nimport BottomBar from './BottomBar';\nimport CommandButtonFC from './comps/CommandButtonFC';\nimport ProphetUI from './ProphetUI';\nimport './App.scss'\nimport NavBar from './comps/NavBar';\nimport ResetUI from './comps/ResetUI';\nimport FollowersUI from './FollowersUI';\nimport { msToFullHMS, compressString } from '../engine/util';\nimport AdornmentUI from './comps/AdornmentUI';\nimport OfflineOverlay from './comps/OfflineOverlay';\nimport RocketUI from './comps/RocketUI';\nimport RelicUI from './comps/RelicUI';\nimport TipFC from './comps/TipFC';\nimport PantheonUI from './comps/PantheonUI';\n\n\nexport default class App extends React.Component<{}, { data: Datamap }> {\n\n    engine: Engine;\n\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.engine = new Engine(this.notify)\n        //this.engine.quietLoad();\n        this.state = {\n            data: this.engine.datamap\n        }\n        //this.engine.quietLoad();\n        window.addEventListener(\"keypress\", this.handleKey);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('keypress', this.handleKey);\n    }\n\n    handleKey = (e: KeyboardEvent) => {\n        if (this.engine.datamap.nacData.timeSet != 0) this.engine.executeCommand(`keypress ` + e.key)\n    }\n\n    notify = () => {\n        this.setState({ data: this.engine.datamap })\n    }\n\n    submitCommand = (command: string) => {\n        this.engine.executeCommand(command)\n    }\n\n    setname = (ev: FormEvent<HTMLFormElement>) => {\n        let target = ev.target as HTMLFormElement;\n        let children = target.children;\n        let textInput = children[0] as HTMLInputElement;\n        console.log(textInput.value);\n        this.submitCommand(`nac setname ${textInput.value}`)\n\n        ev.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className='App' style={{ width: `100%`, height: `100%` }}>\n                <AppContext.Provider value={{\n                    data: this.state.data,\n                    submitCommand: this.submitCommand\n                }}>\n                    <div style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n\n                        <div className='TopBar'>\n                            <CommandButtonFC command='save' name='Save' />\n\n                            {(this.state.data.nacData.name === '') && <form onSubmit={this.setname}>\n                                <input type='text' defaultValue='noname' />\n                                <button className='DCommandFC' type='submit'>Set Name</button>\n                            </form>}\n\n                            {(this.state.data.nacData.name !== '') && <div onClick={() => { this.submitCommand(`nac clearname`) }}>\n                                {`The Prophet, ${this.state.data.nacData.name}!`}<TipFC tip={<div>Click to rename!</div>} />\n                            </div>}\n\n                            <div>\n                                {msToFullHMS(this.state.data.gameTime.currentRun.time)}\n                            </div>\n\n                            <CommandButtonFC command='load' name='Load' />\n                            <CommandButtonFC command='export' name='Export' />\n                            <div>\n                                <button className='DCommandFC' onClick={() => { (document.getElementById('file-input') as HTMLInputElement).click() }} >\n                                    Import\n                            </button>\n                                <input id=\"file-input\" type=\"file\" name=\"name\" style={{ display: \"none\" }}\n                                    onChange={(e) => {\n                                        let list = e.target.files;\n                                        if (list) {\n                                            let file = list[0];\n                                            var reader = new FileReader();\n                                            \n                                            //reader.readAsArrayBuffer(file)\n                                            reader.readAsText(file, 'UTF-8');\n\n                                            // here we tell the reader what to do when it's done reading...\n                                            reader.onload = readerEvent => {\n                                                let target = readerEvent.target;\n                                                if (target) {\n                                                    let content = target.result;\n                                                    console.log(content);\n                                                    this.submitCommand(`import ${content}`)\n\n                                                }\n                                            }\n\n                                        }\n\n                                    }} />\n                            </div>\n                        </div>\n\n                        <ProphetUI />\n\n                        <NavBar />\n\n                        <div className='SelectedArea'>\n                            {MAINNAVS[this.state.data.nav.mainArea]}\n                        </div>\n\n                        <BottomBar />\n                        <OfflineOverlay />\n                    </div>\n                </AppContext.Provider>\n            </div>\n        )\n    }\n}\n\n\n\nconst MAINNAVS = [<RelicUI />, <ResetUI />, <FollowersUI />, <AdornmentUI />, <RocketUI />, <PantheonUI />]","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}